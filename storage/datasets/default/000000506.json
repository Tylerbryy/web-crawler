{
	"title": "JinaChat | ü¶úÔ∏èüîó Langchain",
	"url": "https://python.langchain.com/docs/integrations/chat/jinachat",
	"html": "ComponentsChat modelsJinaChat\nJinaChat\n\nThis notebook covers how to get started with JinaChat chat models.\n\nfrom langchain.chat_models import JinaChat\nfrom langchain.prompts.chat import (\n    ChatPromptTemplate,\n    HumanMessagePromptTemplate,\n    SystemMessagePromptTemplate,\n)\nfrom langchain.schema import HumanMessage, SystemMessage\n\nchat = JinaChat(temperature=0)\n\nmessages = [\n    SystemMessage(\n        content=\"You are a helpful assistant that translates English to French.\"\n    ),\n    HumanMessage(\n        content=\"Translate this sentence from English to French. I love programming.\"\n    ),\n]\nchat(messages)\n\n    AIMessage(content=\"J'aime programmer.\", additional_kwargs={}, example=False)\n\n\nYou can make use of templating by using a MessagePromptTemplate. You can build a ChatPromptTemplate from one or more MessagePromptTemplates. You can use ChatPromptTemplate's format_prompt -- this returns a PromptValue, which you can convert to a string or Message object, depending on whether you want to use the formatted value as input to an llm or chat model.\n\nFor convenience, there is a from_template method exposed on the template. If you were to use this template, this is what it would look like:\n\ntemplate = (\n    \"You are a helpful assistant that translates {input_language} to {output_language}.\"\n)\nsystem_message_prompt = SystemMessagePromptTemplate.from_template(template)\nhuman_template = \"{text}\"\nhuman_message_prompt = HumanMessagePromptTemplate.from_template(human_template)\n\nchat_prompt = ChatPromptTemplate.from_messages(\n    [system_message_prompt, human_message_prompt]\n)\n\n# get a chat completion from the formatted messages\nchat(\n    chat_prompt.format_prompt(\n        input_language=\"English\", output_language=\"French\", text=\"I love programming.\"\n    ).to_messages()\n)\n\n    AIMessage(content=\"J'aime programmer.\", additional_kwargs={}, example=False)\n\nPrevious\nTencent Hunyuan\nNext\nKonko"
}