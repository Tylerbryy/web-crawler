{
	"title": "neo4j-cypher-memory | ü¶úÔ∏èüîó Langchain",
	"url": "https://python.langchain.com/docs/templates/neo4j-cypher-memory",
	"html": "Templatesneo4j-cypher-memory\nneo4j-cypher-memory\n\nThis template allows you to have conversations with a Neo4j graph database in natural language, using an OpenAI LLM. It transforms a natural language question into a Cypher query (used to fetch data from Neo4j databases), executes the query, and provides a natural language response based on the query results. Additionally, it features a conversational memory module that stores the dialogue history in the Neo4j graph database. The conversation memory is uniquely maintained for each user session, ensuring personalized interactions. To facilitate this, please supply both the user_id and session_id when using the conversation chain.\n\nEnvironment Setup‚Äã\n\nDefine the following environment variables:\n\nOPENAI_API_KEY=<YOUR_OPENAI_API_KEY>\nNEO4J_URI=<YOUR_NEO4J_URI>\nNEO4J_USERNAME=<YOUR_NEO4J_USERNAME>\nNEO4J_PASSWORD=<YOUR_NEO4J_PASSWORD>\n\nNeo4j database setup‚Äã\n\nThere are a number of ways to set up a Neo4j database.\n\nNeo4j Aura‚Äã\n\nNeo4j AuraDB is a fully managed cloud graph database service. Create a free instance on Neo4j Aura. When you initiate a free database instance, you'll receive credentials to access the database.\n\nPopulating with data‚Äã\n\nIf you want to populate the DB with some example data, you can run python ingest.py. This script will populate the database with sample movie data.\n\nUsage‚Äã\n\nTo use this package, you should first have the LangChain CLI installed:\n\npip install -U langchain-cli\n\n\nTo create a new LangChain project and install this as the only package, you can do:\n\nlangchain app new my-app --package neo4j-cypher-memory\n\n\nIf you want to add this to an existing project, you can just run:\n\nlangchain app add neo4j-cypher-memory\n\n\nAnd add the following code to your server.py file:\n\nfrom neo4j_cypher_memory import chain as neo4j_cypher_memory_chain\n\nadd_routes(app, neo4j_cypher_memory_chain, path=\"/neo4j-cypher-memory\")\n\n\n(Optional) Let's now configure LangSmith. LangSmith will help us trace, monitor and debug LangChain applications. LangSmith is currently in private beta, you can sign up here. If you don't have access, you can skip this section\n\nexport LANGCHAIN_TRACING_V2=true\nexport LANGCHAIN_API_KEY=<your-api-key>\nexport LANGCHAIN_PROJECT=<your-project>  # if not specified, defaults to \"default\"\n\n\nIf you are inside this directory, then you can spin up a LangServe instance directly by:\n\nlangchain serve\n\n\nThis will start the FastAPI app with a server is running locally at http://localhost:8000\n\nWe can see all templates at http://127.0.0.1:8000/docs We can access the playground at http://127.0.0.1:8000/neo4j_cypher_memory/playground\n\nWe can access the template from code with:\n\nfrom langserve.client import RemoteRunnable\n\nrunnable = RemoteRunnable(\"http://localhost:8000/neo4j-cypher-memory\")\n\nPrevious\nneo4j-cypher-ft\nNext\nneo4j_cypher"
}