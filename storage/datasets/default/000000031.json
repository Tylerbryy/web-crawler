{
	"title": "Graph querying | 🦜️🔗 Langchain",
	"url": "https://python.langchain.com/docs/use_cases/graph/",
	"html": "Graph querying\nGraph querying\n\nGraph databases give us a powerful way to represent and query real-world relationships. There are a number of chains that make it easy to use LLMs to interact with various graph DBs.\n\n📄️ Diffbot Graph Transformer\n\nOpen In Colab\n\n📄️ ArangoDB QA chain\n\nOpen In Colab\n\n📄️ Neo4j DB QA chain\n\nThis notebook shows how to use LLMs to provide a natural language interface to a graph database you can query with the Cypher query language.\n\n📄️ FalkorDBQAChain\n\nThis notebook shows how to use LLMs to provide a natural language interface to FalkorDB database.\n\n📄️ HugeGraph QA Chain\n\nThis notebook shows how to use LLMs to provide a natural language interface to HugeGraph database.\n\n📄️ KuzuQAChain\n\nThis notebook shows how to use LLMs to provide a natural language interface to Kùzu database.\n\n📄️ Memgraph QA chain\n\nThis notebook shows how to use LLMs to provide a natural language interface to a Memgraph database. To complete this tutorial, you will need Docker and Python 3.x installed.\n\n📄️ NebulaGraphQAChain\n\nThis notebook shows how to use LLMs to provide a natural language interface to NebulaGraph database.\n\n📄️ NetworkX Graph QA\n\nThis notebook goes over how to do question answering over a graph data structure.\n\n📄️ GraphSparqlQAChain\n\nGraph databases are an excellent choice for applications based on network-like models. To standardize the syntax and semantics of such graphs, the W3C recommends Semantic Web Technologies, cp. Semantic Web. SPARQL serves as a query language analogously to SQL or Cypher for these graphs. This notebook demonstrates the application of LLMs as a natural language interface to a graph database by generating SPARQL.\\\n\n📄️ Neptune Open Cypher QA Chain\n\nThis QA chain queries Neptune graph database using openCypher and returns human readable response\n\nPrevious\nSynthetic data generation\nNext\nDiffbot Graph Transformer"
}