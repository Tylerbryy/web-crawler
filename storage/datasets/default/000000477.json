{
	"title": "OpenAI functions | 🦜️🔗 Langchain",
	"url": "https://python.langchain.com/docs/modules/agents/agent_types/openai_functions_agent",
	"html": "ModulesAgentsAgent TypesOpenAI functions\nOpenAI functions\n\nCertain OpenAI models (like gpt-3.5-turbo-0613 and gpt-4-0613) have been fine-tuned to detect when a function should be called and respond with the inputs that should be passed to the function. In an API call, you can describe functions and have the model intelligently choose to output a JSON object containing arguments to call those functions. The goal of the OpenAI Function APIs is to more reliably return valid and useful function calls than a generic text completion or chat API.\n\nThe OpenAI Functions Agent is designed to work with these models.\n\nInstall openai, google-search-results packages which are required as the LangChain packages call them internally.\n\npip install openai google-search-results\n\nInitialize tools​\n\nWe will first create some tools we can use\n\nfrom langchain.agents import AgentType, Tool, initialize_agent\nfrom langchain.chains import LLMMathChain\nfrom langchain.chat_models import ChatOpenAI\nfrom langchain.utilities import SerpAPIWrapper, SQLDatabase\nfrom langchain_experimental.sql import SQLDatabaseChain\n\nllm = ChatOpenAI(temperature=0, model=\"gpt-3.5-turbo-0613\")\nsearch = SerpAPIWrapper()\nllm_math_chain = LLMMathChain.from_llm(llm=llm, verbose=True)\ndb = SQLDatabase.from_uri(\"sqlite:///../../../../../notebooks/Chinook.db\")\ndb_chain = SQLDatabaseChain.from_llm(llm, db, verbose=True)\ntools = [\n    Tool(\n        name=\"Search\",\n        func=search.run,\n        description=\"useful for when you need to answer questions about current events. You should ask targeted questions\",\n    ),\n    Tool(\n        name=\"Calculator\",\n        func=llm_math_chain.run,\n        description=\"useful for when you need to answer questions about math\",\n    ),\n    Tool(\n        name=\"FooBar-DB\",\n        func=db_chain.run,\n        description=\"useful for when you need to answer questions about FooBar. Input should be in the form of a question containing full context\",\n    ),\n]\n\nUsing LCEL​\n\nWe will first use LangChain Expression Language to create this agent\n\nfrom langchain.prompts import ChatPromptTemplate, MessagesPlaceholder\n\nprompt = ChatPromptTemplate.from_messages(\n    [\n        (\"system\", \"You are a helpful assistant\"),\n        (\"user\", \"{input}\"),\n        MessagesPlaceholder(variable_name=\"agent_scratchpad\"),\n    ]\n)\n\nfrom langchain.tools.render import format_tool_to_openai_function\n\nllm_with_tools = llm.bind(functions=[format_tool_to_openai_function(t) for t in tools])\n\nfrom langchain.agents.format_scratchpad import format_to_openai_function_messages\nfrom langchain.agents.output_parsers import OpenAIFunctionsAgentOutputParser\n\nagent = (\n    {\n        \"input\": lambda x: x[\"input\"],\n        \"agent_scratchpad\": lambda x: format_to_openai_function_messages(\n            x[\"intermediate_steps\"]\n        ),\n    }\n    | prompt\n    | llm_with_tools\n    | OpenAIFunctionsAgentOutputParser()\n)\n\nfrom langchain.agents import AgentExecutor\n\nagent_executor = AgentExecutor(agent=agent, tools=tools, verbose=True)\n\nagent_executor.invoke(\n    {\n        \"input\": \"Who is Leo DiCaprio's girlfriend? What is her current age raised to the 0.43 power?\"\n    }\n)\n\n    \n    \n    > Entering new AgentExecutor chain...\n    \n    Invoking: `Search` with `Leo DiCaprio's girlfriend`\n    \n    \n    ['Blake Lively and DiCaprio are believed to have enjoyed a whirlwind five-month romance in 2011. The pair were seen on a yacht together in Cannes, ...']\n    Invoking: `Calculator` with `0.43`\n    \n    \n    \n    \n    > Entering new LLMMathChain chain...\n    0.43```text\n    0.43\n    ```\n    ...numexpr.evaluate(\"0.43\")...\n    \n    Answer: 0.43\n    > Finished chain.\n    Answer: 0.43I'm sorry, but I couldn't find any information about Leo DiCaprio's current girlfriend. As for raising her age to the power of 0.43, I'm not sure what her current age is, so I can't provide an answer for that.\n    \n    > Finished chain.\n\n\n\n\n\n    {'input': \"Who is Leo DiCaprio's girlfriend? What is her current age raised to the 0.43 power?\",\n     'output': \"I'm sorry, but I couldn't find any information about Leo DiCaprio's current girlfriend. As for raising her age to the power of 0.43, I'm not sure what her current age is, so I can't provide an answer for that.\"}\n\nUsing OpenAIFunctionsAgent​\n\nWe can now use OpenAIFunctionsAgent, which creates this agent under the hood\n\nagent_executor = initialize_agent(\n    tools, llm, agent=AgentType.OPENAI_FUNCTIONS, verbose=True\n)\n\nagent_executor.invoke(\n    {\n        \"input\": \"Who is Leo DiCaprio's girlfriend? What is her current age raised to the 0.43 power?\"\n    }\n)\n\nPrevious\nOpenAI assistants\nNext\nOpenAI Multi Functions Agent"
}