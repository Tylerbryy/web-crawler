{
	"title": "rag-chroma-private | ü¶úÔ∏èüîó Langchain",
	"url": "https://python.langchain.com/docs/templates/rag-chroma-private",
	"html": "Templatesrag-chroma-private\nrag-chroma-private\n\nThis template performs RAG with no reliance on external APIs.\n\nIt utilizes Ollama the LLM, GPT4All for embeddings, and Chroma for the vectorstore.\n\nThe vectorstore is created in chain.py and by default indexes a popular blog posts on Agents for question-answering.\n\nEnvironment Setup‚Äã\n\nTo set up the environment, you need to download Ollama.\n\nFollow the instructions here.\n\nYou can choose the desired LLM with Ollama.\n\nThis template uses llama2:7b-chat, which can be accessed using ollama pull llama2:7b-chat.\n\nThere are many other options available here.\n\nThis package also uses GPT4All embeddings.\n\nUsage‚Äã\n\nTo use this package, you should first have the LangChain CLI installed:\n\npip install -U langchain-cli\n\n\nTo create a new LangChain project and install this as the only package, you can do:\n\nlangchain app new my-app --package rag-chroma-private\n\n\nIf you want to add this to an existing project, you can just run:\n\nlangchain app add rag-chroma-private\n\n\nAnd add the following code to your server.py file:\n\nfrom rag_chroma_private import chain as rag_chroma_private_chain\n\nadd_routes(app, rag_chroma_private_chain, path=\"/rag-chroma-private\")\n\n\n(Optional) Let's now configure LangSmith. LangSmith will help us trace, monitor and debug LangChain applications. LangSmith is currently in private beta, you can sign up here. If you don't have access, you can skip this section\n\nexport LANGCHAIN_TRACING_V2=true\nexport LANGCHAIN_API_KEY=<your-api-key>\nexport LANGCHAIN_PROJECT=<your-project>  # if not specified, defaults to \"default\"\n\n\nIf you are inside this directory, then you can spin up a LangServe instance directly by:\n\nlangchain serve\n\n\nThis will start the FastAPI app with a server is running locally at http://localhost:8000\n\nWe can see all templates at http://127.0.0.1:8000/docs We can access the playground at http://127.0.0.1:8000/rag-chroma-private/playground\n\nWe can access the template from code with:\n\nfrom langserve.client import RemoteRunnable\n\nrunnable = RemoteRunnable(\"http://localhost:8000/rag-chroma-private\")\n\n\nThe package will create and add documents to the vector database in chain.py. By default, it will load a popular blog post on agents. However, you can choose from a large number of document loaders here.\n\nPrevious\nrag-aws-kendra\nNext\nrag-chroma"
}