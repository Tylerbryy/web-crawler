{
	"title": "Agents | 🦜️🔗 Langchain",
	"url": "https://python.langchain.com/docs/expression_language/cookbook/agent",
	"html": "LangChain Expression LanguageCookbookAgents\nAgents\n\nYou can pass a Runnable into an agent.\n\nfrom langchain.agents import AgentExecutor, XMLAgent, tool\nfrom langchain.chat_models import ChatAnthropic\n\nmodel = ChatAnthropic(model=\"claude-2\")\n\n@tool\ndef search(query: str) -> str:\n    \"\"\"Search things about current events.\"\"\"\n    return \"32 degrees\"\n\ntool_list = [search]\n\n# Get prompt to use\nprompt = XMLAgent.get_default_prompt()\n\n# Logic for going from intermediate steps to a string to pass into model\n# This is pretty tied to the prompt\ndef convert_intermediate_steps(intermediate_steps):\n    log = \"\"\n    for action, observation in intermediate_steps:\n        log += (\n            f\"<tool>{action.tool}</tool><tool_input>{action.tool_input}\"\n            f\"</tool_input><observation>{observation}</observation>\"\n        )\n    return log\n\n\n# Logic for converting tools to string to go in prompt\ndef convert_tools(tools):\n    return \"\\n\".join([f\"{tool.name}: {tool.description}\" for tool in tools])\n\n\nBuilding an agent from a runnable usually involves a few things:\n\nData processing for the intermediate steps. These need to represented in a way that the language model can recognize them. This should be pretty tightly coupled to the instructions in the prompt\n\nThe prompt itself\n\nThe model, complete with stop tokens if needed\n\nThe output parser - should be in sync with how the prompt specifies things to be formatted.\n\nagent = (\n    {\n        \"question\": lambda x: x[\"question\"],\n        \"intermediate_steps\": lambda x: convert_intermediate_steps(\n            x[\"intermediate_steps\"]\n        ),\n    }\n    | prompt.partial(tools=convert_tools(tool_list))\n    | model.bind(stop=[\"</tool_input>\", \"</final_answer>\"])\n    | XMLAgent.get_default_output_parser()\n)\n\nagent_executor = AgentExecutor(agent=agent, tools=tool_list, verbose=True)\n\nagent_executor.invoke({\"question\": \"whats the weather in New york?\"})\n\n    \n    \n    > Entering new AgentExecutor chain...\n     <tool>search</tool>\n    <tool_input>weather in new york32 degrees\n    \n    <final_answer>The weather in New York is 32 degrees\n    \n    > Finished chain.\n\n\n\n\n\n    {'question': 'whats the weather in New york?',\n     'output': 'The weather in New York is 32 degrees'}\n\nPrevious\nQuerying a SQL DB\nNext\nCode writing"
}