{
	"title": "plate-chain | ü¶úÔ∏èüîó Langchain",
	"url": "https://python.langchain.com/docs/templates/plate-chain",
	"html": "Templatesplate-chain\nplate-chain\n\nThis template enables parsing of data from laboratory plates.\n\nIn the context of biochemistry or molecular biology, laboratory plates are commonly used tools to hold samples in a grid-like format.\n\nThis can parse the resulting data into standardized (e.g., JSON) format for further processing.\n\nEnvironment Setup‚Äã\n\nSet the OPENAI_API_KEY environment variable to access the OpenAI models.\n\nUsage‚Äã\n\nTo utilize plate-chain, you must have the LangChain CLI installed:\n\npip install -U langchain-cli\n\n\nCreating a new LangChain project and installing plate-chain as the only package can be done with:\n\nlangchain app new my-app --package plate-chain\n\n\nIf you wish to add this to an existing project, simply run:\n\nlangchain app add plate-chain\n\n\nThen add the following code to your server.py file:\n\nfrom plate_chain import chain as plate_chain\n\nadd_routes(app, plate_chain, path=\"/plate-chain\")\n\n\n(Optional) For configuring LangSmith, which helps trace, monitor and debug LangChain applications, use the following code:\n\nexport LANGCHAIN_TRACING_V2=true\nexport LANGCHAIN_API_KEY=<your-api-key>\nexport LANGCHAIN_PROJECT=<your-project>  # if not specified, defaults to \"default\"\n\n\nIf you're in this directory, you can start a LangServe instance directly by:\n\nlangchain serve\n\n\nThis starts the FastAPI app with a server running locally at http://localhost:8000\n\nAll templates can be viewed at http://127.0.0.1:8000/docs Access the playground at http://127.0.0.1:8000/plate-chain/playground\n\nYou can access the template from code with:\n\nfrom langserve.client import RemoteRunnable\n\nrunnable = RemoteRunnable(\"http://localhost:8000/plate-chain\")\n\nPrevious\npirate-speak\nNext\nrag-astradb"
}