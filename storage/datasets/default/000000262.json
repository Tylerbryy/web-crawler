{
	"title": "Image captions | ü¶úÔ∏èüîó Langchain",
	"url": "https://python.langchain.com/docs/integrations/document_loaders/image_captions",
	"html": "ComponentsDocument loadersImage captions\nImage captions\n\nBy default, the loader utilizes the pre-trained Salesforce BLIP image captioning model.\n\nThis notebook shows how to use the ImageCaptionLoader to generate a query-able index of image captions\n\n#!pip install transformers\n\nfrom langchain.document_loaders import ImageCaptionLoader\n\nPrepare a list of image urls from Wikimedia‚Äã\nlist_image_urls = [\n    \"https://upload.wikimedia.org/wikipedia/commons/thumb/5/5a/Hyla_japonica_sep01.jpg/260px-Hyla_japonica_sep01.jpg\",\n    \"https://upload.wikimedia.org/wikipedia/commons/thumb/7/71/Tibur%C3%B3n_azul_%28Prionace_glauca%29%2C_canal_Fayal-Pico%2C_islas_Azores%2C_Portugal%2C_2020-07-27%2C_DD_14.jpg/270px-Tibur%C3%B3n_azul_%28Prionace_glauca%29%2C_canal_Fayal-Pico%2C_islas_Azores%2C_Portugal%2C_2020-07-27%2C_DD_14.jpg\",\n    \"https://upload.wikimedia.org/wikipedia/commons/thumb/2/21/Thure_de_Thulstrup_-_Battle_of_Shiloh.jpg/251px-Thure_de_Thulstrup_-_Battle_of_Shiloh.jpg\",\n    \"https://upload.wikimedia.org/wikipedia/commons/thumb/2/21/Passion_fruits_-_whole_and_halved.jpg/270px-Passion_fruits_-_whole_and_halved.jpg\",\n    \"https://upload.wikimedia.org/wikipedia/commons/thumb/5/5e/Messier83_-_Heic1403a.jpg/277px-Messier83_-_Heic1403a.jpg\",\n    \"https://upload.wikimedia.org/wikipedia/commons/thumb/b/b6/2022-01-22_Men%27s_World_Cup_at_2021-22_St._Moritz%E2%80%93Celerina_Luge_World_Cup_and_European_Championships_by_Sandro_Halank%E2%80%93257.jpg/288px-2022-01-22_Men%27s_World_Cup_at_2021-22_St._Moritz%E2%80%93Celerina_Luge_World_Cup_and_European_Championships_by_Sandro_Halank%E2%80%93257.jpg\",\n    \"https://upload.wikimedia.org/wikipedia/commons/thumb/9/99/Wiesen_Pippau_%28Crepis_biennis%29-20220624-RM-123950.jpg/224px-Wiesen_Pippau_%28Crepis_biennis%29-20220624-RM-123950.jpg\",\n]\n\nCreate the loader‚Äã\nloader = ImageCaptionLoader(path_images=list_image_urls)\nlist_docs = loader.load()\nlist_docs\n\nimport requests\nfrom PIL import Image\n\nImage.open(requests.get(list_image_urls[0], stream=True).raw).convert(\"RGB\")\n\nCreate the index‚Äã\nfrom langchain.indexes import VectorstoreIndexCreator\n\nindex = VectorstoreIndexCreator().from_loaders([loader])\n\nQuery‚Äã\nquery = \"What's the painting about?\"\nindex.query(query)\n\nquery = \"What kind of images are there?\"\nindex.query(query)\n\nPrevious\nImages\nNext\nIMSDb"
}