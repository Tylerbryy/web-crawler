{
	"title": "MongoDB | ü¶úÔ∏èüîó Langchain",
	"url": "https://python.langchain.com/docs/integrations/document_loaders/mongodb",
	"html": "ComponentsDocument loadersMongoDB\nMongoDB\n\nMongoDB is a NoSQL , document-oriented database that supports JSON-like documents with a dynamic schema.\n\nOverview‚Äã\n\nThe MongoDB Document Loader returns a list of Langchain Documents from a MongoDB database.\n\nThe Loader requires the following parameters:\n\nMongoDB connection string\nMongoDB database name\nMongoDB collection name\n(Optional) Content Filter dictionary\n\nThe output takes the following format:\n\npageContent= Mongo Document\nmetadata={'database': '[database_name]', 'collection': '[collection_name]'}\nLoad the Document Loader‚Äã\n# add this import for running in jupyter notebook\nimport nest_asyncio\n\nnest_asyncio.apply()\n\nfrom langchain.document_loaders.mongodb import MongodbLoader\n\nloader = MongodbLoader(\n    connection_string=\"mongodb://localhost:27017/\",\n    db_name=\"sample_restaurants\",\n    collection_name=\"restaurants\",\n    filter_criteria={\"borough\": \"Bronx\", \"cuisine\": \"Bakery\"},\n)\n\ndocs = loader.load()\n\nlen(docs)\n\n    25359\n\ndocs[0]\n\n    Document(page_content=\"{'_id': ObjectId('5eb3d668b31de5d588f4292a'), 'address': {'building': '2780', 'coord': [-73.98241999999999, 40.579505], 'street': 'Stillwell Avenue', 'zipcode': '11224'}, 'borough': 'Brooklyn', 'cuisine': 'American', 'grades': [{'date': datetime.datetime(2014, 6, 10, 0, 0), 'grade': 'A', 'score': 5}, {'date': datetime.datetime(2013, 6, 5, 0, 0), 'grade': 'A', 'score': 7}, {'date': datetime.datetime(2012, 4, 13, 0, 0), 'grade': 'A', 'score': 12}, {'date': datetime.datetime(2011, 10, 12, 0, 0), 'grade': 'A', 'score': 12}], 'name': 'Riviera Caterer', 'restaurant_id': '40356018'}\", metadata={'database': 'sample_restaurants', 'collection': 'restaurants'})\n\nPrevious\nModern Treasury\nNext\nNews URL"
}