{
	"title": "hyde | ü¶úÔ∏èüîó Langchain",
	"url": "https://python.langchain.com/docs/templates/hyde",
	"html": "Templateshyde\nhyde\n\nThis template HyDE with RAG.\n\nHyde is a retrieval method that stands for Hypothetical Document Embeddings (HyDE). It is a method used to enhance retrieval by generating a hypothetical document for an incoming query.\n\nThe document is then embedded, and that embedding is utilized to look up real documents that are similar to the hypothetical document.\n\nThe underlying concept is that the hypothetical document may be closer in the embedding space than the query.\n\nFor a more detailed description, see the paper here.\n\nEnvironment Setup‚Äã\n\nSet the OPENAI_API_KEY environment variable to access the OpenAI models.\n\nUsage‚Äã\n\nTo use this package, you should first have the LangChain CLI installed:\n\npip install -U langchain-cli\n\n\nTo create a new LangChain project and install this as the only package, you can do:\n\nlangchain app new my-app --package hyde\n\n\nIf you want to add this to an existing project, you can just run:\n\nlangchain app add hyde\n\n\nAnd add the following code to your server.py file:\n\nfrom hyde.chain import chain as hyde_chain\n\nadd_routes(app, hyde_chain, path=\"/hyde\")\n\n\n(Optional) Let's now configure LangSmith. LangSmith will help us trace, monitor and debug LangChain applications. LangSmith is currently in private beta, you can sign up here. If you don't have access, you can skip this section\n\nexport LANGCHAIN_TRACING_V2=true\nexport LANGCHAIN_API_KEY=<your-api-key>\nexport LANGCHAIN_PROJECT=<your-project>  # if not specified, defaults to \"default\"\n\n\nIf you are inside this directory, then you can spin up a LangServe instance directly by:\n\nlangchain serve\n\n\nThis will start the FastAPI app with a server is running locally at http://localhost:8000\n\nWe can see all templates at http://127.0.0.1:8000/docs We can access the playground at http://127.0.0.1:8000/hyde/playground\n\nWe can access the template from code with:\n\nfrom langserve.client import RemoteRunnable\n\nrunnable = RemoteRunnable(\"http://localhost:8000/hyde\")\n\nPrevious\nHybrid Search in Weaviate\nNext\nTemplates"
}