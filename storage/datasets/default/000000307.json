{
	"title": "Telegram | ü¶úÔ∏èüîó Langchain",
	"url": "https://python.langchain.com/docs/integrations/document_loaders/telegram",
	"html": "ComponentsDocument loadersTelegram\nTelegram\n\nTelegram Messenger is a globally accessible freemium, cross-platform, encrypted, cloud-based and centralized instant messaging service. The application also provides optional end-to-end encrypted chats and video calling, VoIP, file sharing and several other features.\n\nThis notebook covers how to load data from Telegram into a format that can be ingested into LangChain.\n\nfrom langchain.document_loaders import TelegramChatApiLoader, TelegramChatFileLoader\n\nloader = TelegramChatFileLoader(\"example_data/telegram.json\")\n\nloader.load()\n\n    [Document(page_content=\"Henry on 2020-01-01T00:00:02: It's 2020...\\n\\nHenry on 2020-01-01T00:00:04: Fireworks!\\n\\nGrace √∞≈∏¬ß¬§ √∞≈∏\\x8d‚Äô on 2020-01-01T00:00:05: You're a minute late!\\n\\n\", metadata={'source': 'example_data/telegram.json'})]\n\n\nTelegramChatApiLoader loads data directly from any specified chat from Telegram. In order to export the data, you will need to authenticate your Telegram account.\n\nYou can get the API_HASH and API_ID from https://my.telegram.org/auth?to=apps\n\nchat_entity ‚Äì recommended to be the entity of a channel.\n\nloader = TelegramChatApiLoader(\n    chat_entity=\"<CHAT_URL>\",  # recommended to use Entity here\n    api_hash=\"<API HASH >\",\n    api_id=\"<API_ID>\",\n    user_name=\"\",  # needed only for caching the session.\n)\n\nloader.load()\n\nPrevious\nSubtitle\nNext\nTencent COS Directory"
}