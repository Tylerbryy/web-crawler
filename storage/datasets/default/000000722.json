{
	"title": "MyScale | ü¶úÔ∏èüîó Langchain",
	"url": "https://python.langchain.com/docs/integrations/providers/myscale",
	"html": "ProvidersMoreMyScale\nMyScale\n\nThis page covers how to use MyScale vector database within LangChain. It is broken into two parts: installation and setup, and then references to specific MyScale wrappers.\n\nWith MyScale, you can manage both structured and unstructured (vectorized) data, and perform joint queries and analytics on both types of data using SQL. Plus, MyScale's cloud-native OLAP architecture, built on top of ClickHouse, enables lightning-fast data processing even on massive datasets.\n\nIntroduction‚Äã\n\nOverview to MyScale and High performance vector search\n\nYou can now register on our SaaS and start a cluster now!\n\nIf you are also interested in how we managed to integrate SQL and vector, please refer to this document for further syntax reference.\n\nWe also deliver with live demo on huggingface! Please checkout our huggingface space! They search millions of vector within a blink!\n\nInstallation and Setup‚Äã\nInstall the Python SDK with pip install clickhouse-connect\nSetting up environments‚Äã\n\nThere are two ways to set up parameters for myscale index.\n\nEnvironment Variables\n\nBefore you run the app, please set the environment variable with export: export MYSCALE_HOST='<your-endpoints-url>' MYSCALE_PORT=<your-endpoints-port> MYSCALE_USERNAME=<your-username> MYSCALE_PASSWORD=<your-password> ...\n\nYou can easily find your account, password and other info on our SaaS. For details please refer to this document Every attributes under MyScaleSettings can be set with prefix MYSCALE_ and is case insensitive.\n\nCreate MyScaleSettings object with parameters\n\n```python\nfrom langchain.vectorstores import MyScale, MyScaleSettings\nconfig = MyScaleSetting(host=\"<your-backend-url>\", port=8443, ...)\nindex = MyScale(embedding_function, config)\nindex.add_documents(...)\n```\n\nWrappers‚Äã\n\nsupported functions:\n\nadd_texts\nadd_documents\nfrom_texts\nfrom_documents\nsimilarity_search\nasimilarity_search\nsimilarity_search_by_vector\nasimilarity_search_by_vector\nsimilarity_search_with_relevance_scores\ndelete\nVectorStore‚Äã\n\nThere exists a wrapper around MyScale database, allowing you to use it as a vectorstore, whether for semantic search or similar example retrieval.\n\nTo import this vectorstore:\n\nfrom langchain.vectorstores import MyScale\n\n\nFor a more detailed walkthrough of the MyScale wrapper, see this notebook\n\nPrevious\nMot√∂rhead\nNext\nNeo4j"
}