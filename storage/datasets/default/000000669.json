{
	"title": "Elasticsearch | ü¶úÔ∏èüîó Langchain",
	"url": "https://python.langchain.com/docs/integrations/providers/elasticsearch",
	"html": "ProvidersMoreElasticsearch\nElasticsearch\n\nElasticsearch is a distributed, RESTful search and analytics engine. It provides a distributed, multi-tenant-capable full-text search engine with an HTTP web interface and schema-free JSON documents.\n\nInstallation and Setup‚Äã\n\nThere are two ways to get started with Elasticsearch:\n\nInstall Elasticsearch on your local machine via docker‚Äã\n\nExample: Run a single-node Elasticsearch instance with security disabled. This is not recommended for production use.\n\n    docker run -p 9200:9200 -e \"discovery.type=single-node\" -e \"xpack.security.enabled=false\" -e \"xpack.security.http.ssl.enabled=false\" docker.elastic.co/elasticsearch/elasticsearch:8.9.0\n\nDeploy Elasticsearch on Elastic Cloud‚Äã\n\nElastic Cloud is a managed Elasticsearch service. Signup for a free trial.\n\nInstall Client‚Äã\npip install elasticsearch\n\nVector Store‚Äã\n\nThe vector store is a simple wrapper around Elasticsearch. It provides a simple interface to store and retrieve vectors.\n\nfrom langchain.vectorstores import ElasticsearchStore\n\nfrom langchain.document_loaders import TextLoader\nfrom langchain.text_splitter import CharacterTextSplitter\n\nloader = TextLoader(\"./state_of_the_union.txt\")\ndocuments = loader.load()\ntext_splitter = CharacterTextSplitter(chunk_size=500, chunk_overlap=0)\ndocs = text_splitter.split_documents(documents)\n\nembeddings = OpenAIEmbeddings()\n\ndb = ElasticsearchStore.from_documents(\n    docs, embeddings, es_url=\"http://localhost:9200\", index_name=\"test-basic\",\n)\n\ndb.client.indices.refresh(index=\"test-basic\")\n\nquery = \"What did the president say about Ketanji Brown Jackson\"\nresults = db.similarity_search(query)\n\nPrevious\nDuckDB\nNext\nEpsilla"
}