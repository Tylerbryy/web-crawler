{
	"title": "Geopandas | 🦜️🔗 Langchain",
	"url": "https://python.langchain.com/docs/integrations/document_loaders/geopandas",
	"html": "ComponentsDocument loadersGeopandas\nGeopandas\n\nGeopandas is an open-source project to make working with geospatial data in python easier.\n\nGeoPandas extends the datatypes used by pandas to allow spatial operations on geometric types.\n\nGeometric operations are performed by shapely. Geopandas further depends on fiona for file access and matplotlib for plotting.\n\nLLM applications (chat, QA) that utilize geospatial data are an interesting area for exploration.\n\npip install sodapy\n pip install pandas\n pip install geopandas\n\nimport ast\n\nimport geopandas as gpd\nimport pandas as pd\nfrom langchain.document_loaders import OpenCityDataLoader\n\n\nCreate a GeoPandas dataframe from Open City Data as an example input.\n\n# Load Open City Data\ndataset = \"tmnf-yvry\"  # San Francisco crime data\nloader = OpenCityDataLoader(city_id=\"data.sfgov.org\", dataset_id=dataset, limit=5000)\ndocs = loader.load()\n\n# Convert list of dictionaries to DataFrame\ndf = pd.DataFrame([ast.literal_eval(d.page_content) for d in docs])\n\n# Extract latitude and longitude\ndf[\"Latitude\"] = df[\"location\"].apply(lambda loc: loc[\"coordinates\"][1])\ndf[\"Longitude\"] = df[\"location\"].apply(lambda loc: loc[\"coordinates\"][0])\n\n# Create geopandas DF\ngdf = gpd.GeoDataFrame(\n    df, geometry=gpd.points_from_xy(df.Longitude, df.Latitude), crs=\"EPSG:4326\"\n)\n\n# Only keep valid longitudes and latitudes for San Francisco\ngdf = gdf[\n    (gdf[\"Longitude\"] >= -123.173825)\n    & (gdf[\"Longitude\"] <= -122.281780)\n    & (gdf[\"Latitude\"] >= 37.623983)\n    & (gdf[\"Latitude\"] <= 37.929824)\n]\n\n\nVisualization of the sample of SF crime data.\n\nimport matplotlib.pyplot as plt\n\n# Load San Francisco map data\nsf = gpd.read_file(\"https://data.sfgov.org/resource/3psu-pn9h.geojson\")\n\n# Plot the San Francisco map and the points\nfig, ax = plt.subplots(figsize=(10, 10))\nsf.plot(ax=ax, color=\"white\", edgecolor=\"black\")\ngdf.plot(ax=ax, color=\"red\", markersize=5)\nplt.show()\n\n\nLoad GeoPandas dataframe as a Document for downstream processing (embedding, chat, etc).\n\nThe geometry will be the default page_content columns, and all other columns are placed in metadata.\n\nBut, we can specify the page_content_column.\n\nfrom langchain.document_loaders import GeoDataFrameLoader\n\nloader = GeoDataFrameLoader(data_frame=gdf, page_content_column=\"geometry\")\ndocs = loader.load()\n\ndocs[0]\n\n    Document(page_content='POINT (-122.420084075249 37.7083109744362)', metadata={'pdid': '4133422003074', 'incidntnum': '041334220', 'incident_code': '03074', 'category': 'ROBBERY', 'descript': 'ROBBERY, BODILY FORCE', 'dayofweek': 'Monday', 'date': '2004-11-22T00:00:00.000', 'time': '17:50', 'pddistrict': 'INGLESIDE', 'resolution': 'NONE', 'address': 'GENEVA AV / SANTOS ST', 'x': '-122.420084075249', 'y': '37.7083109744362', 'location': {'type': 'Point', 'coordinates': [-122.420084075249, 37.7083109744362]}, ':@computed_region_26cr_cadq': '9', ':@computed_region_rxqg_mtj9': '8', ':@computed_region_bh8s_q3mv': '309', ':@computed_region_6qbp_sg9q': nan, ':@computed_region_qgnn_b9vv': nan, ':@computed_region_ajp5_b2md': nan, ':@computed_region_yftq_j783': nan, ':@computed_region_p5aj_wyqh': nan, ':@computed_region_fyvs_ahh9': nan, ':@computed_region_6pnf_4xz7': nan, ':@computed_region_jwn9_ihcz': nan, ':@computed_region_9dfj_4gjx': nan, ':@computed_region_4isq_27mq': nan, ':@computed_region_pigm_ib2e': nan, ':@computed_region_9jxd_iqea': nan, ':@computed_region_6ezc_tdp2': nan, ':@computed_region_h4ep_8xdi': nan, ':@computed_region_n4xg_c4py': nan, ':@computed_region_fcz8_est8': nan, ':@computed_region_nqbw_i6c3': nan, ':@computed_region_2dwj_jsy4': nan, 'Latitude': 37.7083109744362, 'Longitude': -122.420084075249})\n\nPrevious\nFigma\nNext\nGit"
}