{
	"title": "Split by tokens | ü¶úÔ∏èüîó Langchain",
	"url": "https://python.langchain.com/docs/modules/data_connection/document_transformers/text_splitters/split_by_token",
	"html": "ModulesRetrievalDocument transformersText splittersSplit by tokens\nSplit by tokens\n\nLanguage models have a token limit. You should not exceed the token limit. When you split your text into chunks it is therefore a good idea to count the number of tokens. There are many tokenizers. When you count tokens in your text you should use the same tokenizer as used in the language model.\n\ntiktoken‚Äã\n\ntiktoken is a fast BPE tokenizer created by OpenAI.\n\nWe can use it to estimate tokens used. It will probably be more accurate for the OpenAI models.\n\nHow the text is split: by character passed in.\nHow the chunk size is measured: by tiktoken tokenizer.\n#!pip install tiktoken\n\n# This is a long document we can split up.\nwith open(\"../../../state_of_the_union.txt\") as f:\n    state_of_the_union = f.read()\nfrom langchain.text_splitter import CharacterTextSplitter\n\ntext_splitter = CharacterTextSplitter.from_tiktoken_encoder(\n    chunk_size=100, chunk_overlap=0\n)\ntexts = text_splitter.split_text(state_of_the_union)\n\nprint(texts[0])\n\n    Madam Speaker, Madam Vice President, our First Lady and Second Gentleman. Members of Congress and the Cabinet. Justices of the Supreme Court. My fellow Americans.  \n    \n    Last year COVID-19 kept us apart. This year we are finally together again. \n    \n    Tonight, we meet as Democrats Republicans and Independents. But most importantly as Americans. \n    \n    With a duty to one another to the American people to the Constitution.\n\n\nNote that if we use CharacterTextSplitter.from_tiktoken_encoder, text is only split by CharacterTextSplitter and tiktoken tokenizer is used to merge splits. It means that split can be larger than chunk size measured by tiktoken tokenizer. We can use RecursiveCharacterTextSplitter.from_tiktoken_encoder to make sure splits are not larger than chunk size of tokens allowed by the language model, where each split will be recursively split if it has a larger size.\n\nWe can also load a tiktoken splitter directly, which ensure each split is smaller than chunk size.\n\nfrom langchain.text_splitter import TokenTextSplitter\n\ntext_splitter = TokenTextSplitter(chunk_size=10, chunk_overlap=0)\n\ntexts = text_splitter.split_text(state_of_the_union)\nprint(texts[0])\n\nspaCy‚Äã\n\nspaCy is an open-source software library for advanced natural language processing, written in the programming languages Python and Cython.\n\nAnother alternative to NLTK is to use spaCy tokenizer.\n\nHow the text is split: by spaCy tokenizer.\nHow the chunk size is measured: by number of characters.\n#!pip install spacy\n\n# This is a long document we can split up.\nwith open(\"../../../state_of_the_union.txt\") as f:\n    state_of_the_union = f.read()\n\nfrom langchain.text_splitter import SpacyTextSplitter\n\ntext_splitter = SpacyTextSplitter(chunk_size=1000)\n\ntexts = text_splitter.split_text(state_of_the_union)\nprint(texts[0])\n\n    Madam Speaker, Madam Vice President, our First Lady and Second Gentleman.\n    \n    Members of Congress and the Cabinet.\n    \n    Justices of the Supreme Court.\n    \n    My fellow Americans.  \n    \n    \n    \n    Last year COVID-19 kept us apart.\n    \n    This year we are finally together again. \n    \n    \n    \n    Tonight, we meet as Democrats Republicans and Independents.\n    \n    But most importantly as Americans. \n    \n    \n    \n    With a duty to one another to the American people to the Constitution. \n    \n    \n    \n    And with an unwavering resolve that freedom will always triumph over tyranny. \n    \n    \n    \n    Six days ago, Russia‚Äôs Vladimir Putin sought to shake the foundations of the free world thinking he could make it bend to his menacing ways.\n    \n    But he badly miscalculated. \n    \n    \n    \n    He thought he could roll into Ukraine and the world would roll over.\n    \n    Instead he met a wall of strength he never imagined. \n    \n    \n    \n    He met the Ukrainian people. \n    \n    \n    \n    From President Zelenskyy to every Ukrainian, their fearlessness, their courage, their determination, inspires the world.\n\nSentenceTransformers‚Äã\n\nThe SentenceTransformersTokenTextSplitter is a specialized text splitter for use with the sentence-transformer models. The default behaviour is to split the text into chunks that fit the token window of the sentence transformer model that you would like to use.\n\nfrom langchain.text_splitter import SentenceTransformersTokenTextSplitter\n\nsplitter = SentenceTransformersTokenTextSplitter(chunk_overlap=0)\ntext = \"Lorem \"\n\ncount_start_and_stop_tokens = 2\ntext_token_count = splitter.count_tokens(text=text) - count_start_and_stop_tokens\nprint(text_token_count)\n\n    2\n\ntoken_multiplier = splitter.maximum_tokens_per_chunk // text_token_count + 1\n\n# `text_to_split` does not fit in a single chunk\ntext_to_split = text * token_multiplier\n\nprint(f\"tokens in text to split: {splitter.count_tokens(text=text_to_split)}\")\n\n    tokens in text to split: 514\n\ntext_chunks = splitter.split_text(text=text_to_split)\n\nprint(text_chunks[1])\n\n    lorem\n\nNLTK‚Äã\n\nThe Natural Language Toolkit, or more commonly NLTK, is a suite of libraries and programs for symbolic and statistical natural language processing (NLP) for English written in the Python programming language.\n\nRather than just splitting on \"\\n\\n\", we can use NLTK to split based on NLTK tokenizers.\n\nHow the text is split: by NLTK tokenizer.\nHow the chunk size is measured: by number of characters.\n# pip install nltk\n\n# This is a long document we can split up.\nwith open(\"../../../state_of_the_union.txt\") as f:\n    state_of_the_union = f.read()\n\nfrom langchain.text_splitter import NLTKTextSplitter\n\ntext_splitter = NLTKTextSplitter(chunk_size=1000)\n\ntexts = text_splitter.split_text(state_of_the_union)\nprint(texts[0])\n\n    Madam Speaker, Madam Vice President, our First Lady and Second Gentleman.\n    \n    Members of Congress and the Cabinet.\n    \n    Justices of the Supreme Court.\n    \n    My fellow Americans.\n    \n    Last year COVID-19 kept us apart.\n    \n    This year we are finally together again.\n    \n    Tonight, we meet as Democrats Republicans and Independents.\n    \n    But most importantly as Americans.\n    \n    With a duty to one another to the American people to the Constitution.\n    \n    And with an unwavering resolve that freedom will always triumph over tyranny.\n    \n    Six days ago, Russia‚Äôs Vladimir Putin sought to shake the foundations of the free world thinking he could make it bend to his menacing ways.\n    \n    But he badly miscalculated.\n    \n    He thought he could roll into Ukraine and the world would roll over.\n    \n    Instead he met a wall of strength he never imagined.\n    \n    He met the Ukrainian people.\n    \n    From President Zelenskyy to every Ukrainian, their fearlessness, their courage, their determination, inspires the world.\n    \n    Groups of citizens blocking tanks with their bodies.\n\nHugging Face tokenizer‚Äã\n\nHugging Face has many tokenizers.\n\nWe use Hugging Face tokenizer, the GPT2TokenizerFast to count the text length in tokens.\n\nHow the text is split: by character passed in.\nHow the chunk size is measured: by number of tokens calculated by the Hugging Face tokenizer.\nfrom transformers import GPT2TokenizerFast\n\ntokenizer = GPT2TokenizerFast.from_pretrained(\"gpt2\")\n\n# This is a long document we can split up.\nwith open(\"../../../state_of_the_union.txt\") as f:\n    state_of_the_union = f.read()\nfrom langchain.text_splitter import CharacterTextSplitter\n\ntext_splitter = CharacterTextSplitter.from_huggingface_tokenizer(\n    tokenizer, chunk_size=100, chunk_overlap=0\n)\ntexts = text_splitter.split_text(state_of_the_union)\n\nprint(texts[0])\n\n    Madam Speaker, Madam Vice President, our First Lady and Second Gentleman. Members of Congress and the Cabinet. Justices of the Supreme Court. My fellow Americans.  \n    \n    Last year COVID-19 kept us apart. This year we are finally together again. \n    \n    Tonight, we meet as Democrats Republicans and Independents. But most importantly as Americans. \n    \n    With a duty to one another to the American people to the Constitution.\n\nPrevious\nRecursively split by character\nNext\nLost in the middle: The problem with long contexts"
}