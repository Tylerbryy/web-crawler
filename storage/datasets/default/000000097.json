{
	"title": "rag-timescale-conversation | ü¶úÔ∏èüîó Langchain",
	"url": "https://python.langchain.com/docs/templates/rag-timescale-conversation",
	"html": "Templatesrag-timescale-conversation\nrag-timescale-conversation\n\nThis template is used for conversational retrieval, which is one of the most popular LLM use-cases.\n\nIt passes both a conversation history and retrieved documents into an LLM for synthesis.\n\nEnvironment Setup‚Äã\n\nThis template uses Timescale Vector as a vectorstore and requires that TIMESCALES_SERVICE_URL. Signup for a 90-day trial here if you don't yet have an account.\n\nTo load the sample dataset, set LOAD_SAMPLE_DATA=1. To load your own dataset see the section below.\n\nSet the OPENAI_API_KEY environment variable to access the OpenAI models.\n\nUsage‚Äã\n\nTo use this package, you should first have the LangChain CLI installed:\n\npip install -U \"langchain-cli[serve]\"\n\n\nTo create a new LangChain project and install this as the only package, you can do:\n\nlangchain app new my-app --package rag-timescale-conversation\n\n\nIf you want to add this to an existing project, you can just run:\n\nlangchain app add rag-timescale-conversation\n\n\nAnd add the following code to your server.py file:\n\nfrom rag_timescale_conversation import chain as rag_timescale_conversation_chain\n\nadd_routes(app, rag_timescale_conversation_chain, path=\"/rag-timescale_conversation\")\n\n\n(Optional) Let's now configure LangSmith. LangSmith will help us trace, monitor and debug LangChain applications. LangSmith is currently in private beta, you can sign up here. If you don't have access, you can skip this section\n\nexport LANGCHAIN_TRACING_V2=true\nexport LANGCHAIN_API_KEY=<your-api-key>\nexport LANGCHAIN_PROJECT=<your-project>  # if not specified, defaults to \"default\"\n\n\nIf you are inside this directory, then you can spin up a LangServe instance directly by:\n\nlangchain serve\n\n\nThis will start the FastAPI app with a server is running locally at http://localhost:8000\n\nWe can see all templates at http://127.0.0.1:8000/docs We can access the playground at http://127.0.0.1:8000/rag-timescale-conversation/playground\n\nWe can access the template from code with:\n\nfrom langserve.client import RemoteRunnable\n\nrunnable = RemoteRunnable(\"http://localhost:8000/rag-timescale-conversation\")\n\n\nSee the rag_conversation.ipynb notebook for example usage.\n\nLoading your own dataset‚Äã\n\nTo load your own dataset you will have to create a load_dataset function. You can see an example, in the load_ts_git_dataset function defined in the load_sample_dataset.py file. You can then run this as a standalone function (e.g. in a bash script) or add it to chain.py (but then you should run it just once).\n\nPrevious\nrag_supabase\nNext\nRAG with Timescale Vector using hybrid search"
}