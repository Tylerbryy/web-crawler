{
	"title": "GPT4All | 🦜️🔗 Langchain",
	"url": "https://python.langchain.com/docs/integrations/llms/gpt4all",
	"html": "ComponentsLLMsGPT4All\nGPT4All\n\nGitHub:nomic-ai/gpt4all an ecosystem of open-source chatbots trained on a massive collections of clean assistant data including code, stories and dialogue.\n\nThis example goes over how to use LangChain to interact with GPT4All models.\n\n%pip install gpt4all > /dev/null\n\n    Note: you may need to restart the kernel to use updated packages.\n\nImport GPT4All​\nfrom langchain.callbacks.streaming_stdout import StreamingStdOutCallbackHandler\nfrom langchain.chains import LLMChain\nfrom langchain.llms import GPT4All\nfrom langchain.prompts import PromptTemplate\n\nSet Up Question to pass to LLM​\ntemplate = \"\"\"Question: {question}\n\nAnswer: Let's think step by step.\"\"\"\n\nprompt = PromptTemplate(template=template, input_variables=[\"question\"])\n\nSpecify Model​\n\nTo run locally, download a compatible ggml-formatted model.\n\nThe gpt4all page has a useful Model Explorer section:\n\nSelect a model of interest\nDownload using the UI and move the .bin to the local_path (noted below)\n\nFor more info, visit https://github.com/nomic-ai/gpt4all.\n\nlocal_path = (\n    \"./models/ggml-gpt4all-l13b-snoozy.bin\"  # replace with your desired local file path\n)\n\n# Callbacks support token-wise streaming\ncallbacks = [StreamingStdOutCallbackHandler()]\n\n# Verbose is required to pass to the callback manager\nllm = GPT4All(model=local_path, callbacks=callbacks, verbose=True)\n\n# If you want to use a custom model add the backend parameter\n# Check https://docs.gpt4all.io/gpt4all_python.html for supported backends\nllm = GPT4All(model=local_path, backend=\"gptj\", callbacks=callbacks, verbose=True)\n\nllm_chain = LLMChain(prompt=prompt, llm=llm)\n\nquestion = \"What NFL team won the Super Bowl in the year Justin Bieber was born?\"\n\nllm_chain.run(question)\n\n\nJustin Bieber was born on March 1, 1994. In 1994, The Cowboys won Super Bowl XXVIII.\n\nPrevious\nGooseAI\nNext\nGradient"
}