{
	"title": "neo4j-generation | ü¶úÔ∏èüîó Langchain",
	"url": "https://python.langchain.com/docs/templates/neo4j-generation",
	"html": "Templatesneo4j-generation\nneo4j-generation\n\nThis template pairs LLM-based knowledge graph extraction with Neo4j AuraDB, a fully managed cloud graph database.\n\nYou can create a free instance on Neo4j Aura.\n\nWhen you initiate a free database instance, you'll receive credentials to access the database.\n\nThis template is flexible and allows users to guide the extraction process by specifying a list of node labels and relationship types.\n\nFor more details on the functionality and capabilities of this package, please refer to this blog post.\n\nEnvironment Setup‚Äã\n\nYou need to set the following environment variables:\n\nOPENAI_API_KEY=<YOUR_OPENAI_API_KEY>\nNEO4J_URI=<YOUR_NEO4J_URI>\nNEO4J_USERNAME=<YOUR_NEO4J_USERNAME>\nNEO4J_PASSWORD=<YOUR_NEO4J_PASSWORD>\n\nUsage‚Äã\n\nTo use this package, you should first have the LangChain CLI installed:\n\npip install -U langchain-cli\n\n\nTo create a new LangChain project and install this as the only package, you can do:\n\nlangchain app new my-app --package neo4j-generation\n\n\nIf you want to add this to an existing project, you can just run:\n\nlangchain app add neo4j-generation\n\n\nAnd add the following code to your server.py file:\n\nfrom neo4j_generation.chain import chain as neo4j_generation_chain\n\nadd_routes(app, neo4j_generation_chain, path=\"/neo4j-generation\")\n\n\n(Optional) Let's now configure LangSmith. LangSmith will help us trace, monitor and debug LangChain applications. LangSmith is currently in private beta, you can sign up here. If you don't have access, you can skip this section\n\nexport LANGCHAIN_TRACING_V2=true\nexport LANGCHAIN_API_KEY=<your-api-key>\nexport LANGCHAIN_PROJECT=<your-project>  # if not specified, defaults to \"default\"\n\n\nIf you are inside this directory, then you can spin up a LangServe instance directly by:\n\nlangchain serve\n\n\nThis will start the FastAPI app with a server is running locally at http://localhost:8000\n\nWe can see all templates at http://127.0.0.1:8000/docs We can access the playground at http://127.0.0.1:8000/neo4j-generation/playground\n\nWe can access the template from code with:\n\nfrom langserve.client import RemoteRunnable\n\nrunnable = RemoteRunnable(\"http://localhost:8000/neo4j-generation\")\n\nPrevious\nneo4j_cypher\nNext\nneo4j-parent"
}