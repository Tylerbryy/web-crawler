{
	"title": "Add Memory to OpenAI Functions Agent | 🦜️🔗 Langchain",
	"url": "https://python.langchain.com/docs/modules/agents/how_to/add_memory_openai_functions",
	"html": "ModulesAgentsHow-toAdd Memory to OpenAI Functions Agent\nAdd Memory to OpenAI Functions Agent\n\nThis notebook goes over how to add memory to an OpenAI Functions agent.\n\nfrom langchain.agents import AgentType, Tool, initialize_agent\nfrom langchain.chains import LLMMathChain\nfrom langchain.chat_models import ChatOpenAI\nfrom langchain.utilities import SerpAPIWrapper, SQLDatabase\nfrom langchain_experimental.sql import SQLDatabaseChain\n\nllm = ChatOpenAI(temperature=0, model=\"gpt-3.5-turbo-0613\")\nsearch = SerpAPIWrapper()\nllm_math_chain = LLMMathChain.from_llm(llm=llm, verbose=True)\ndb = SQLDatabase.from_uri(\"sqlite:///../../../../../notebooks/Chinook.db\")\ndb_chain = SQLDatabaseChain.from_llm(llm, db, verbose=True)\ntools = [\n    Tool(\n        name=\"Search\",\n        func=search.run,\n        description=\"useful for when you need to answer questions about current events. You should ask targeted questions\",\n    ),\n    Tool(\n        name=\"Calculator\",\n        func=llm_math_chain.run,\n        description=\"useful for when you need to answer questions about math\",\n    ),\n    Tool(\n        name=\"FooBar-DB\",\n        func=db_chain.run,\n        description=\"useful for when you need to answer questions about FooBar. Input should be in the form of a question containing full context\",\n    ),\n]\n\nfrom langchain.memory import ConversationBufferMemory\nfrom langchain.prompts import MessagesPlaceholder\n\nagent_kwargs = {\n    \"extra_prompt_messages\": [MessagesPlaceholder(variable_name=\"memory\")],\n}\nmemory = ConversationBufferMemory(memory_key=\"memory\", return_messages=True)\n\nagent = initialize_agent(\n    tools,\n    llm,\n    agent=AgentType.OPENAI_FUNCTIONS,\n    verbose=True,\n    agent_kwargs=agent_kwargs,\n    memory=memory,\n)\n\nagent.run(\"hi\")\n\n    \n    \n    > Entering new  chain...\n    Hello! How can I assist you today?\n    \n    > Finished chain.\n\n\n\n\n\n    'Hello! How can I assist you today?'\n\nagent.run(\"my name is bob\")\n\n    \n    \n    > Entering new  chain...\n    Nice to meet you, Bob! How can I help you today?\n    \n    > Finished chain.\n\n\n\n\n\n    'Nice to meet you, Bob! How can I help you today?'\n\nagent.run(\"whats my name\")\n\n    \n    \n    > Entering new  chain...\n    Your name is Bob.\n    \n    > Finished chain.\n\n\n\n\n\n    'Your name is Bob.'\n\nPrevious\nXML Agent\nNext\nRunning Agent as an Iterator"
}