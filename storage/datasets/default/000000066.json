{
	"title": "neo4j-parent | ü¶úÔ∏èüîó Langchain",
	"url": "https://python.langchain.com/docs/templates/neo4j-parent",
	"html": "Templatesneo4j-parent\nneo4j-parent\n\nThis template allows you to balance precise embeddings and context retention by splitting documents into smaller chunks and retrieving their original or larger text information.\n\nUsing a Neo4j vector index, the package queries child nodes using vector similarity search and retrieves the corresponding parent's text by defining an appropriate retrieval_query parameter.\n\nEnvironment Setup‚Äã\n\nYou need to define the following environment variables\n\nOPENAI_API_KEY=<YOUR_OPENAI_API_KEY>\nNEO4J_URI=<YOUR_NEO4J_URI>\nNEO4J_USERNAME=<YOUR_NEO4J_USERNAME>\nNEO4J_PASSWORD=<YOUR_NEO4J_PASSWORD>\n\nPopulating with data‚Äã\n\nIf you want to populate the DB with some example data, you can run python ingest.py. The script process and stores sections of the text from the file dune.txt into a Neo4j graph database. First, the text is divided into larger chunks (\"parents\") and then further subdivided into smaller chunks (\"children\"), where both parent and child chunks overlap slightly to maintain context. After storing these chunks in the database, embeddings for the child nodes are computed using OpenAI's embeddings and stored back in the graph for future retrieval or analysis. Additionally, a vector index named retrieval is created for efficient querying of these embeddings.\n\nUsage‚Äã\n\nTo use this package, you should first have the LangChain CLI installed:\n\npip install -U langchain-cli\n\n\nTo create a new LangChain project and install this as the only package, you can do:\n\nlangchain app new my-app --package neo4j-parent\n\n\nIf you want to add this to an existing project, you can just run:\n\nlangchain app add neo4j-parent\n\n\nAnd add the following code to your server.py file:\n\nfrom neo4j_parent import chain as neo4j_parent_chain\n\nadd_routes(app, neo4j_parent_chain, path=\"/neo4j-parent\")\n\n\n(Optional) Let's now configure LangSmith. LangSmith will help us trace, monitor and debug LangChain applications. LangSmith is currently in private beta, you can sign up here. If you don't have access, you can skip this section\n\nexport LANGCHAIN_TRACING_V2=true\nexport LANGCHAIN_API_KEY=<your-api-key>\nexport LANGCHAIN_PROJECT=<your-project>  # if not specified, defaults to \"default\"\n\n\nIf you are inside this directory, then you can spin up a LangServe instance directly by:\n\nlangchain serve\n\n\nThis will start the FastAPI app with a server is running locally at http://localhost:8000\n\nWe can see all templates at http://127.0.0.1:8000/docs We can access the playground at http://127.0.0.1:8000/neo4j-parent/playground\n\nWe can access the template from code with:\n\nfrom langserve.client import RemoteRunnable\n\nrunnable = RemoteRunnable(\"http://localhost:8000/neo4j-parent\")\n\nPrevious\nneo4j-generation\nNext\nneo4j-vector-memory"
}