{
	"title": "Azure Document Intelligence | ü¶úÔ∏èüîó Langchain",
	"url": "https://python.langchain.com/docs/integrations/document_loaders/azure_document_intelligence",
	"html": "ComponentsDocument loadersAzure Document Intelligence\nAzure Document Intelligence\n\nAzure Document Intelligence (formerly known as Azure Forms Recognizer) is machine-learning based service that extracts text (including handwriting), tables or key-value-pairs from scanned documents or images.\n\nThis current implementation of a loader using Document Intelligence is able to incorporate content page-wise and turn it into LangChain documents.\n\nDocument Intelligence supports PDF, JPEG, PNG, BMP, or TIFF.\n\nFurther documentation is available at https://learn.microsoft.com/en-us/azure/ai-services/document-intelligence/?view=doc-intel-3.1.0.\n\n%pip install langchain azure-ai-formrecognizer -q\n\nExample 1‚Äã\n\nThe first example uses a local file which will be sent to Azure Document Intelligence.\n\nFirst, an instance of a DocumentAnalysisClient is created with endpoint and key for the Azure service.\n\nfrom azure.ai.formrecognizer import DocumentAnalysisClient\nfrom azure.core.credentials import AzureKeyCredential\n\ndocument_analysis_client = DocumentAnalysisClient(\n    endpoint=\"<service_endpoint>\", credential=AzureKeyCredential(\"<service_key>\")\n)\n\n\nWith the initialized document analysis client, we can proceed to create an instance of the DocumentIntelligenceLoader:\n\nfrom langchain.document_loaders.pdf import DocumentIntelligenceLoader\n\nloader = DocumentIntelligenceLoader(\n    \"<Local_filename>\", client=document_analysis_client, model=\"<model_name>\"\n)  # e.g. prebuilt-document\n\ndocuments = loader.load()\n\n\nThe output contains each page of the source document as a LangChain document:\n\ndocuments\n\n    [Document(page_content='...', metadata={'source': '...', 'page': 1})]\n\nPrevious\nAzure Blob Storage File\nNext\nBibTeX"
}