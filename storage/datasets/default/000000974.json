{
	"title": "Momento Cache | ü¶úÔ∏èüîó Langchain",
	"url": "https://python.langchain.com/docs/integrations/memory/momento_chat_message_history",
	"html": "ComponentsMemoryMomento Cache\nMomento Cache\n\nMomento Cache is the world's first truly serverless caching service. It provides instant elasticity, scale-to-zero capability, and blazing-fast performance.\n\nThis notebook goes over how to use Momento Cache to store chat message history using the MomentoChatMessageHistory class. See the Momento docs for more detail on how to get set up with Momento.\n\nNote that, by default we will create a cache if one with the given name doesn't already exist.\n\nYou'll need to get a Momento API key to use this class. This can either be passed in to a momento.CacheClient if you'd like to instantiate that directly, as a named parameter api_key to MomentoChatMessageHistory.from_client_params, or can just be set as an environment variable MOMENTO_API_KEY.\n\nfrom datetime import timedelta\n\nfrom langchain.memory import MomentoChatMessageHistory\n\nsession_id = \"foo\"\ncache_name = \"langchain\"\nttl = timedelta(days=1)\nhistory = MomentoChatMessageHistory.from_client_params(\n    session_id,\n    cache_name,\n    ttl,\n)\n\nhistory.add_user_message(\"hi!\")\n\nhistory.add_ai_message(\"whats up?\")\n\nhistory.messages\n\n    [HumanMessage(content='hi!', additional_kwargs={}, example=False),\n     AIMessage(content='whats up?', additional_kwargs={}, example=False)]\n\nPrevious\nElasticsearch\nNext\nMongodDB"
}