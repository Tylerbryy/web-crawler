{
	"title": "SearchApi | 🦜️🔗 Langchain",
	"url": "https://python.langchain.com/docs/integrations/providers/searchapi",
	"html": "ProvidersMoreSearchApi\nSearchApi\n\nThis page covers how to use the SearchApi Google Search API within LangChain. SearchApi is a real-time SERP API for easy SERP scraping.\n\nSetup​\nGo to https://www.searchapi.io/ to sign up for a free account\nGet the api key and set it as an environment variable (SEARCHAPI_API_KEY)\nWrappers​\nUtility​\n\nThere is a SearchApiAPIWrapper utility which wraps this API. To import this utility:\n\nfrom langchain.utilities import SearchApiAPIWrapper\n\n\nYou can use it as part of a Self Ask chain:\n\nfrom langchain.utilities import SearchApiAPIWrapper\nfrom langchain.llms.openai import OpenAI\nfrom langchain.agents import initialize_agent, Tool\nfrom langchain.agents import AgentType\n\nimport os\n\nos.environ[\"SEARCHAPI_API_KEY\"] = \"\"\nos.environ['OPENAI_API_KEY'] = \"\"\n\nllm = OpenAI(temperature=0)\nsearch = SearchApiAPIWrapper()\ntools = [\n    Tool(\n        name=\"Intermediate Answer\",\n        func=search.run,\n        description=\"useful for when you need to ask with search\"\n    )\n]\n\nself_ask_with_search = initialize_agent(tools, llm, agent=AgentType.SELF_ASK_WITH_SEARCH, verbose=True)\nself_ask_with_search.run(\"Who lived longer: Plato, Socrates, or Aristotle?\")\n\nOutput​\n> Entering new AgentExecutor chain...\n Yes.\nFollow up: How old was Plato when he died?\nIntermediate answer: eighty\nFollow up: How old was Socrates when he died?\nIntermediate answer: | Socrates | \n| -------- | \n| Born | c. 470 BC Deme Alopece, Athens | \n| Died | 399 BC (aged approximately 71) Athens | \n| Cause of death | Execution by forced suicide by poisoning | \n| Spouse(s) | Xanthippe, Myrto | \n\nFollow up: How old was Aristotle when he died?\nIntermediate answer: 62 years\nSo the final answer is: Plato\n\n> Finished chain.\n'Plato'\n\nTool​\n\nYou can also easily load this wrapper as a Tool (to use with an Agent). You can do this with:\n\nfrom langchain.agents import load_tools\ntools = load_tools([\"searchapi\"])\n\n\nFor more information on tools, see this page.\n\nPrevious\nScaNN\nNext\nSearxNG Search API"
}