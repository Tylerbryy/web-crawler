{
	"title": "Serialization | ü¶úÔ∏èüîó Langchain",
	"url": "https://python.langchain.com/docs/modules/model_io/llms/llm_serialization",
	"html": "ModulesModel I/OLLMsSerialization\nSerialization\n\nLangChain Python and LangChain JS share a serialization scheme. You can check if a LangChain class is serializable by running with the is_lc_serializable class method.\n\nfrom langchain.llms import OpenAI\nfrom langchain.llms.loading import load_llm\n\nOpenAI.is_lc_serializable()\n\n    True\n\nllm = OpenAI(model=\"gpt-3.5-turbo-instruct\")\n\nDump‚Äã\n\nAny serializable object can be serialized to a dict or json string.\n\nfrom langchain.load import dumpd, dumps\n\ndumpd(llm)\n\n    {'lc': 1,\n     'type': 'constructor',\n     'id': ['langchain', 'llms', 'openai', 'OpenAI'],\n     'kwargs': {'model': 'gpt-3.5-turbo-instruct',\n      'openai_api_key': {'lc': 1, 'type': 'secret', 'id': ['OPENAI_API_KEY']}}}\n\ndumps(llm)\n\n    '{\"lc\": 1, \"type\": \"constructor\", \"id\": [\"langchain\", \"llms\", \"openai\", \"OpenAI\"], \"kwargs\": {\"model\": \"gpt-3.5-turbo-instruct\", \"openai_api_key\": {\"lc\": 1, \"type\": \"secret\", \"id\": [\"OPENAI_API_KEY\"]}}}'\n\nLoad‚Äã\n\nAny serialized object can be loaded.\n\nfrom langchain.load import loads\nfrom langchain.load.load import load\n\nloaded_1 = load(dumpd(llm))\nloaded_2 = loads(dumps(llm))\n\nprint(loaded_1.invoke(\"How are you doing?\"))\n\n    \n    \n    I am an AI and do not have the capability to experience emotions. But thank you for asking. Is there anything I can assist you with?\n\nPrevious\nCaching\nNext\nStreaming"
}