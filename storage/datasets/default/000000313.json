{
	"title": "Trello | 🦜️🔗 Langchain",
	"url": "https://python.langchain.com/docs/integrations/document_loaders/trello",
	"html": "ComponentsDocument loadersTrello\nTrello\n\nTrello is a web-based project management and collaboration tool that allows individuals and teams to organize and track their tasks and projects. It provides a visual interface known as a \"board\" where users can create lists and cards to represent their tasks and activities.\n\nThe TrelloLoader allows you to load cards from a Trello board and is implemented on top of py-trello\n\nThis currently supports api_key/token only.\n\nCredentials generation: https://trello.com/power-ups/admin/\n\nClick in the manual token generation link to get the token.\n\nTo specify the API key and token you can either set the environment variables TRELLO_API_KEY and TRELLO_TOKEN or you can pass api_key and token directly into the from_credentials convenience constructor method.\n\nThis loader allows you to provide the board name to pull in the corresponding cards into Document objects.\n\nNotice that the board \"name\" is also called \"title\" in oficial documentation:\n\nhttps://support.atlassian.com/trello/docs/changing-a-boards-title-and-description/\n\nYou can also specify several load parameters to include / remove different fields both from the document page_content properties and metadata.\n\nFeatures​\nLoad cards from a Trello board.\nFilter cards based on their status (open or closed).\nInclude card names, comments, and checklists in the loaded documents.\nCustomize the additional metadata fields to include in the document.\n\nBy default all card fields are included for the full text page_content and metadata accordinly.\n\n#!pip install py-trello beautifulsoup4 lxml\n\n# If you have already set the API key and token using environment variables,\n# you can skip this cell and comment out the `api_key` and `token` named arguments\n# in the initialization steps below.\nfrom getpass import getpass\n\nAPI_KEY = getpass()\nTOKEN = getpass()\n\n    ········\n    ········\n\nfrom langchain.document_loaders import TrelloLoader\n\n# Get the open cards from \"Awesome Board\"\nloader = TrelloLoader.from_credentials(\n    \"Awesome Board\",\n    api_key=API_KEY,\n    token=TOKEN,\n    card_filter=\"open\",\n)\ndocuments = loader.load()\n\nprint(documents[0].page_content)\nprint(documents[0].metadata)\n\n    Review Tech partner pages\n    Comments:\n    {'title': 'Review Tech partner pages', 'id': '6475357890dc8d17f73f2dcc', 'url': 'https://trello.com/c/b0OTZwkZ/1-review-tech-partner-pages', 'labels': ['Demand Marketing'], 'list': 'Done', 'closed': False, 'due_date': ''}\n\n# Get all the cards from \"Awesome Board\" but only include the\n# card list(column) as extra metadata.\nloader = TrelloLoader.from_credentials(\n    \"Awesome Board\",\n    api_key=API_KEY,\n    token=TOKEN,\n    extra_metadata=(\"list\"),\n)\ndocuments = loader.load()\n\nprint(documents[0].page_content)\nprint(documents[0].metadata)\n\n    Review Tech partner pages\n    Comments:\n    {'title': 'Review Tech partner pages', 'id': '6475357890dc8d17f73f2dcc', 'url': 'https://trello.com/c/b0OTZwkZ/1-review-tech-partner-pages', 'list': 'Done'}\n\n# Get the cards from \"Another Board\" and exclude the card name,\n# checklist and comments from the Document page_content text.\nloader = TrelloLoader.from_credentials(\n    \"test\",\n    api_key=API_KEY,\n    token=TOKEN,\n    include_card_name=False,\n    include_checklist=False,\n    include_comments=False,\n)\ndocuments = loader.load()\n\nprint(\"Document: \" + documents[0].page_content)\nprint(documents[0].metadata)\n\nPrevious\nTOML\nNext\nTSV"
}