{
	"title": "Tair | ü¶úÔ∏èüîó Langchain",
	"url": "https://python.langchain.com/docs/integrations/vectorstores/tair",
	"html": "ComponentsVector storesTair\nTair\n\nTair is a cloud native in-memory database service developed by Alibaba Cloud. It provides rich data models and enterprise-grade capabilities to support your real-time online scenarios while maintaining full compatibility with open-source Redis. Tair also introduces persistent memory-optimized instances that are based on the new non-volatile memory (NVM) storage medium.\n\nThis notebook shows how to use functionality related to the Tair vector database.\n\nTo run, you should have a Tair instance up and running.\n\nfrom langchain.embeddings.fake import FakeEmbeddings\nfrom langchain.text_splitter import CharacterTextSplitter\nfrom langchain.vectorstores import Tair\n\nfrom langchain.document_loaders import TextLoader\n\nloader = TextLoader(\"../../modules/state_of_the_union.txt\")\ndocuments = loader.load()\ntext_splitter = CharacterTextSplitter(chunk_size=1000, chunk_overlap=0)\ndocs = text_splitter.split_documents(documents)\n\nembeddings = FakeEmbeddings(size=128)\n\n\nConnect to Tair using the TAIR_URL environment variable\n\nexport TAIR_URL=\"redis://{username}:{password}@{tair_address}:{tair_port}\"\n\n\nor the keyword argument tair_url.\n\nThen store documents and embeddings into Tair.\n\ntair_url = \"redis://localhost:6379\"\n\n# drop first if index already exists\nTair.drop_index(tair_url=tair_url)\n\nvector_store = Tair.from_documents(docs, embeddings, tair_url=tair_url)\n\n\nQuery similar documents.\n\nquery = \"What did the president say about Ketanji Brown Jackson\"\ndocs = vector_store.similarity_search(query)\ndocs[0]\n\n\nTair Hybrid Search Index build\n\n# drop first if index already exists\nTair.drop_index(tair_url=tair_url)\n\nvector_store = Tair.from_documents(\n    docs, embeddings, tair_url=tair_url, index_params={\"lexical_algorithm\": \"bm25\"}\n)\n\n\nTair Hybrid Search\n\nquery = \"What did the president say about Ketanji Brown Jackson\"\n# hybrid_ratio: 0.5 hybrid search, 0.9999 vector search, 0.0001 text search\nkwargs = {\"TEXT\": query, \"hybrid_ratio\": 0.5}\ndocs = vector_store.similarity_search(query, **kwargs)\ndocs[0]\n\nPrevious\nSupabase (Postgres)\nNext\nTencent Cloud VectorDB"
}