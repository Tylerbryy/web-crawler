{
	"title": "SpaCy | ü¶úÔ∏èüîó Langchain",
	"url": "https://python.langchain.com/docs/integrations/text_embedding/spacy_embedding",
	"html": "ComponentsText embedding modelsSpaCy\nSpaCy\n\nspaCy is an open-source software library for advanced natural language processing, written in the programming languages Python and Cython.\n\nInstallation and Setup‚Äã\n#!pip install spacy\n\n\nImport the necessary classes\n\nfrom langchain.embeddings.spacy_embeddings import SpacyEmbeddings\n\nExample‚Äã\n\nInitialize SpacyEmbeddings.This will load the Spacy model into memory.\n\nembedder = SpacyEmbeddings()\n\n\nDefine some example texts . These could be any documents that you want to analyze - for example, news articles, social media posts, or product reviews.\n\ntexts = [\n    \"The quick brown fox jumps over the lazy dog.\",\n    \"Pack my box with five dozen liquor jugs.\",\n    \"How vexingly quick daft zebras jump!\",\n    \"Bright vixens jump; dozy fowl quack.\",\n]\n\n\nGenerate and print embeddings for the texts . The SpacyEmbeddings class generates an embedding for each document, which is a numerical representation of the document's content. These embeddings can be used for various natural language processing tasks, such as document similarity comparison or text classification.\n\nembeddings = embedder.embed_documents(texts)\nfor i, embedding in enumerate(embeddings):\n    print(f\"Embedding for document {i+1}: {embedding}\")\n\n\nGenerate and print an embedding for a single piece of text. You can also generate an embedding for a single piece of text, such as a search query. This can be useful for tasks like information retrieval, where you want to find documents that are similar to a given query.\n\nquery = \"Quick foxes and lazy dogs.\"\nquery_embedding = embedder.embed_query(query)\nprint(f\"Embedding for query: {query_embedding}\")\n\nPrevious\nSentence Transformers on Hugging Face\nNext\nTensorFlow Hub"
}