{
	"title": "Cassandra | 🦜️🔗 Langchain",
	"url": "https://python.langchain.com/docs/integrations/memory/cassandra_chat_message_history",
	"html": "ComponentsMemoryCassandra\nCassandra\n\nApache Cassandra® is a NoSQL, row-oriented, highly scalable and highly available database, well suited for storing large amounts of data.\n\nCassandra is a good choice for storing chat message history because it is easy to scale and can handle a large number of writes.\n\nThis notebook goes over how to use Cassandra to store chat message history.\n\nSetting up​\n\nTo run this notebook you need either a running Cassandra cluster or a DataStax Astra DB instance running in the cloud (you can get one for free at datastax.com). Check cassio.org for more information.\n\npip install \"cassio>=0.1.0\"\n\nSet up the database connection parameters and secrets​\nimport getpass\n\ndatabase_mode = (input(\"\\n(C)assandra or (A)stra DB? \")).upper()\n\nkeyspace_name = input(\"\\nKeyspace name? \")\n\nif database_mode == \"A\":\n    ASTRA_DB_APPLICATION_TOKEN = getpass.getpass('\\nAstra DB Token (\"AstraCS:...\") ')\n    #\n    ASTRA_DB_SECURE_BUNDLE_PATH = input(\"Full path to your Secure Connect Bundle? \")\nelif database_mode == \"C\":\n    CASSANDRA_CONTACT_POINTS = input(\n        \"Contact points? (comma-separated, empty for localhost) \"\n    ).strip()\n\n\nDepending on whether local or cloud-based Astra DB, create the corresponding database connection \"Session\" object.\n\nfrom cassandra.auth import PlainTextAuthProvider\nfrom cassandra.cluster import Cluster\n\nif database_mode == \"C\":\n    if CASSANDRA_CONTACT_POINTS:\n        cluster = Cluster(\n            [cp.strip() for cp in CASSANDRA_CONTACT_POINTS.split(\",\") if cp.strip()]\n        )\n    else:\n        cluster = Cluster()\n    session = cluster.connect()\nelif database_mode == \"A\":\n    ASTRA_DB_CLIENT_ID = \"token\"\n    cluster = Cluster(\n        cloud={\n            \"secure_connect_bundle\": ASTRA_DB_SECURE_BUNDLE_PATH,\n        },\n        auth_provider=PlainTextAuthProvider(\n            ASTRA_DB_CLIENT_ID,\n            ASTRA_DB_APPLICATION_TOKEN,\n        ),\n    )\n    session = cluster.connect()\nelse:\n    raise NotImplementedError\n\nExample​\nfrom langchain.memory import CassandraChatMessageHistory\n\nmessage_history = CassandraChatMessageHistory(\n    session_id=\"test-session\",\n    session=session,\n    keyspace=keyspace_name,\n)\n\nmessage_history.add_user_message(\"hi!\")\n\nmessage_history.add_ai_message(\"whats up?\")\n\nmessage_history.messages\n\nPrevious\nAWS DynamoDB\nNext\nElasticsearch"
}