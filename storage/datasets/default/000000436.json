{
	"title": "ChatGPT Plugin | 🦜️🔗 Langchain",
	"url": "https://python.langchain.com/docs/integrations/retrievers/chatgpt-plugin",
	"html": "ComponentsRetrieversChatGPT Plugin\nChatGPT Plugin\n\nOpenAI plugins connect ChatGPT to third-party applications. These plugins enable ChatGPT to interact with APIs defined by developers, enhancing ChatGPT's capabilities and allowing it to perform a wide range of actions.\n\nPlugins can allow ChatGPT to do things like:\n\nRetrieve real-time information; e.g., sports scores, stock prices, the latest news, etc.\nRetrieve knowledge-base information; e.g., company docs, personal notes, etc.\nPerform actions on behalf of the user; e.g., booking a flight, ordering food, etc.\n\nThis notebook shows how to use the ChatGPT Retriever Plugin within LangChain.\n\n# STEP 1: Load\n\n# Load documents using LangChain's DocumentLoaders\n# This is from https://langchain.readthedocs.io/en/latest/modules/document_loaders/examples/csv.html\n\nfrom langchain.document_loaders.csv_loader import CSVLoader\n\nloader = CSVLoader(\n    file_path=\"../../document_loaders/examples/example_data/mlb_teams_2012.csv\"\n)\ndata = loader.load()\n\n\n# STEP 2: Convert\n\n# Convert Document to format expected by https://github.com/openai/chatgpt-retrieval-plugin\nimport json\nfrom typing import List\n\nfrom langchain.docstore.document import Document\n\n\ndef write_json(path: str, documents: List[Document]) -> None:\n    results = [{\"text\": doc.page_content} for doc in documents]\n    with open(path, \"w\") as f:\n        json.dump(results, f, indent=2)\n\n\nwrite_json(\"foo.json\", data)\n\n# STEP 3: Use\n\n# Ingest this as you would any other json file in https://github.com/openai/chatgpt-retrieval-plugin/tree/main/scripts/process_json\n\nUsing the ChatGPT Retriever Plugin​\n\nOkay, so we've created the ChatGPT Retriever Plugin, but how do we actually use it?\n\nThe below code walks through how to do that.\n\nWe want to use ChatGPTPluginRetriever so we have to get the OpenAI API Key.\n\nimport getpass\nimport os\n\nos.environ[\"OPENAI_API_KEY\"] = getpass.getpass(\"OpenAI API Key:\")\n\n    OpenAI API Key: ········\n\nfrom langchain.retrievers import ChatGPTPluginRetriever\n\nretriever = ChatGPTPluginRetriever(url=\"http://0.0.0.0:8000\", bearer_token=\"foo\")\n\nretriever.get_relevant_documents(\"alice's phone number\")\n\n    [Document(page_content=\"This is Alice's phone number: 123-456-7890\", lookup_str='', metadata={'id': '456_0', 'metadata': {'source': 'email', 'source_id': '567', 'url': None, 'created_at': '1609592400.0', 'author': 'Alice', 'document_id': '456'}, 'embedding': None, 'score': 0.925571561}, lookup_index=0),\n     Document(page_content='This is a document about something', lookup_str='', metadata={'id': '123_0', 'metadata': {'source': 'file', 'source_id': 'https://example.com/doc1', 'url': 'https://example.com/doc1', 'created_at': '1609502400.0', 'author': 'Alice', 'document_id': '123'}, 'embedding': None, 'score': 0.6987589}, lookup_index=0),\n     Document(page_content='Team: Angels \"Payroll (millions)\": 154.49 \"Wins\": 89', lookup_str='', metadata={'id': '59c2c0c1-ae3f-4272-a1da-f44a723ea631_0', 'metadata': {'source': None, 'source_id': None, 'url': None, 'created_at': None, 'author': None, 'document_id': '59c2c0c1-ae3f-4272-a1da-f44a723ea631'}, 'embedding': None, 'score': 0.697888613}, lookup_index=0)]\n\nPrevious\nChaindesk\nNext\nCohere Reranker"
}