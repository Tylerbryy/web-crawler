{
	"title": "Adding memory (state) | 🦜️🔗 Langchain",
	"url": "https://python.langchain.com/docs/modules/chains/how_to/memory",
	"html": "ModulesMoreChainsHow toAdding memory (state)\nAdding memory (state)\n\nChains can be initialized with a Memory object, which will persist data across calls to the chain. This makes a Chain stateful.\n\nGet started​\nfrom langchain.chains import ConversationChain\nfrom langchain.memory import ConversationBufferMemory\n\nconversation = ConversationChain(\n    llm=chat,\n    memory=ConversationBufferMemory()\n)\n\nconversation.run(\"Answer briefly. What are the first 3 colors of a rainbow?\")\n# -> The first three colors of a rainbow are red, orange, and yellow.\nconversation.run(\"And the next 4?\")\n# -> The next four colors of a rainbow are green, blue, indigo, and violet.\n\n    'The next four colors of a rainbow are green, blue, indigo, and violet.'\n\n\nEssentially, BaseMemory defines an interface of how langchain stores memory. It allows reading of stored data through load_memory_variables method and storing new data through save_context method. You can learn more about it in the Memory section.\n\nPrevious\nCustom chain\nNext\nUsing OpenAI functions"
}