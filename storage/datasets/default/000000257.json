{
	"title": "Huawei OBS File | ü¶úÔ∏èüîó Langchain",
	"url": "https://python.langchain.com/docs/integrations/document_loaders/huawei_obs_file",
	"html": "ComponentsDocument loadersHuawei OBS File\nHuawei OBS File\n\nThe following code demonstrates how to load an object from the Huawei OBS (Object Storage Service) as document.\n\n# Install the required package\n# pip install esdk-obs-python\n\nfrom langchain.document_loaders.obs_file import OBSFileLoader\n\nendpoint = \"your-endpoint\"\n\nfrom obs import ObsClient\n\nobs_client = ObsClient(\n    access_key_id=\"your-access-key\",\n    secret_access_key=\"your-secret-key\",\n    server=endpoint,\n)\nloader = OBSFileLoader(\"your-bucket-name\", \"your-object-key\", client=obs_client)\n\nloader.load()\n\nEach Loader with Separate Authentication Information‚Äã\n\nIf you don't need to reuse OBS connections between different loaders, you can directly configure the config. The loader will use the config information to initialize its own OBS client.\n\n# Configure your access credentials\\n\nconfig = {\"ak\": \"your-access-key\", \"sk\": \"your-secret-key\"}\nloader = OBSFileLoader(\n    \"your-bucket-name\", \"your-object-key\", endpoint=endpoint, config=config\n)\n\nloader.load()\n\nGet Authentication Information from ECS‚Äã\n\nIf your langchain is deployed on Huawei Cloud ECS and Agency is set up, the loader can directly get the security token from ECS without needing access key and secret key.\n\nconfig = {\"get_token_from_ecs\": True}\nloader = OBSFileLoader(\n    \"your-bucket-name\", \"your-object-key\", endpoint=endpoint, config=config\n)\n\nloader.load()\n\nAccess a Publicly Accessible Object‚Äã\n\nIf the object you want to access allows anonymous user access (anonymous users have GetObject permission), you can directly load the object without configuring the config parameter.\n\nloader = OBSFileLoader(\"your-bucket-name\", \"your-object-key\", endpoint=endpoint)\n\nloader.load()\n\nPrevious\nHuawei OBS Directory\nNext\nHuggingFace dataset"
}