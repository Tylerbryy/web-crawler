{
	"title": "Motherduck | ü¶úÔ∏èüîó Langchain",
	"url": "https://python.langchain.com/docs/integrations/providers/motherduck",
	"html": "ProvidersMoreMotherduck\nMotherduck\n\nMotherduck is a managed DuckDB-in-the-cloud service.\n\nInstallation and Setup‚Äã\n\nFirst, you need to install duckdb python package.\n\npip install duckdb\n\n\nYou will also need to sign up for an account at Motherduck\n\nAfter that, you should set up a connection string - we mostly integrate with Motherduck through SQLAlchemy. The connection string is likely in the form:\n\ntoken=\"...\"\n\nconn_str = f\"duckdb:///md:{token}@my_db\"\n\nSQLChain‚Äã\n\nYou can use the SQLChain to query data in your Motherduck instance in natural language.\n\nfrom langchain.llms import OpenAI, SQLDatabase, SQLDatabaseChain\ndb = SQLDatabase.from_uri(conn_str)\ndb_chain = SQLDatabaseChain.from_llm(OpenAI(temperature=0), db, verbose=True)\n\n\nFrom here, see the SQL Chain documentation on how to use.\n\nLLMCache‚Äã\n\nYou can also easily use Motherduck to cache LLM requests. Once again this is done through the SQLAlchemy wrapper.\n\nimport sqlalchemy\nfrom langchain.globals import set_llm_cache\neng = sqlalchemy.create_engine(conn_str)\nset_llm_cache(SQLAlchemyCache(engine=eng))\n\n\nFrom here, see the LLM Caching documentation on how to use.\n\nPrevious\nMongoDB Atlas\nNext\nMot√∂rhead"
}