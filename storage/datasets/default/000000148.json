{
	"title": "Retrievers | ü¶úÔ∏èüîó Langchain",
	"url": "https://python.langchain.com/docs/modules/data_connection/retrievers/",
	"html": "ModulesRetrievalRetrievers\nRetrievers\nINFO\n\nHead to Integrations for documentation on built-in retriever integrations with 3rd-party tools.\n\nA retriever is an interface that returns documents given an unstructured query. It is more general than a vector store. A retriever does not need to be able to store documents, only to return (or retrieve) them. Vector stores can be used as the backbone of a retriever, but there are other types of retrievers as well.\n\nRetrievers implement the Runnable interface, the basic building block of the LangChain Expression Language (LCEL). This means they support invoke, ainvoke, stream, astream, batch, abatch, astream_log calls.\n\nRetrievers accept a string query as input and return a list of Document's as output.\n\nGet started‚Äã\n\nIn this example we'll use a Chroma vector store-backed retriever. To get setup we'll need to run:\n\npip install chromadb\n\n\nAnd download the state_of_the_union.txt file here.\n\nfrom langchain.embeddings import OpenAIEmbeddings\nfrom langchain.text_splitter import CharacterTextSplitter\nfrom langchain.vectorstores import Chroma\n\nfull_text = open(\"state_of_the_union.txt\", \"r\").read()\ntext_splitter = CharacterTextSplitter(chunk_size=1000, chunk_overlap=100)\ntexts = text_splitter.split_text(full_text)\n\nembeddings = OpenAIEmbeddings()\ndb = Chroma.from_texts(texts, embeddings)\nretriever = db.as_retriever()\n\nretrieved_docs = retriever.invoke(\n    \"What did the president say about Ketanji Brown Jackson?\"\n)\nprint(retrieved_docs[0].page_content)\n\n    One of the most serious constitutional responsibilities a President has is nominating someone to serve on the United States Supreme Court. \n    \n    And I did that 4 days ago, when I nominated Circuit Court of Appeals Judge Ketanji Brown Jackson. One of our nation‚Äôs top legal minds, who will continue Justice Breyer‚Äôs legacy of excellence. \n    \n    A former top litigator in private practice. A former federal public defender. And from a family of public school educators and police officers. A consensus builder. Since she‚Äôs been nominated, she‚Äôs received a broad range of support‚Äîfrom the Fraternal Order of Police to former judges appointed by Democrats and Republicans. \n    \n    And if we are to advance liberty and justice, we need to secure the Border and fix the immigration system. \n    \n    We can do both. At our border, we‚Äôve installed new technology like cutting-edge scanners to better detect drug smuggling.  \n    \n    We‚Äôve set up joint patrols with Mexico and Guatemala to catch more human traffickers.\n\nLCEL‚Äã\n\nSince retrievers are Runnable's, we can easily compose them with other Runnable objects:\n\nfrom langchain.chat_models import ChatOpenAI\nfrom langchain.prompts import ChatPromptTemplate\nfrom langchain.schema import StrOutputParser\nfrom langchain.schema.runnable import RunnablePassthrough\n\ntemplate = \"\"\"Answer the question based only on the following context:\n\n{context}\n\nQuestion: {question}\n\"\"\"\nprompt = ChatPromptTemplate.from_template(template)\nmodel = ChatOpenAI()\n\n\ndef format_docs(docs):\n    return \"\\n\\n\".join([d.page_content for d in docs])\n\n\nchain = (\n    {\"context\": retriever | format_docs, \"question\": RunnablePassthrough()}\n    | prompt\n    | model\n    | StrOutputParser()\n)\n\nchain.invoke(\"What did the president say about technology?\")\n\n    'The president said that technology plays a crucial role in the future and that passing the Bipartisan Innovation Act will make record investments in emerging technologies and American manufacturing. The president also mentioned Intel\\'s plans to build a semiconductor \"mega site\" and increase their investment from $20 billion to $100 billion, which would be one of the biggest investments in manufacturing in American history.'\n\nPrevious\nVector stores\nNext\nMultiQueryRetriever"
}