{
	"title": "Quip | ü¶úÔ∏èüîó Langchain",
	"url": "https://python.langchain.com/docs/integrations/document_loaders/quip",
	"html": "ComponentsDocument loadersQuip\nQuip\n\nQuip is a collaborative productivity software suite for mobile and Web. It allows groups of people to create and edit documents and spreadsheets as a group, typically for business purposes.\n\nA loader for Quip docs.\n\nPlease refer here to know how to get personal access token.\n\nSpecify a list folder_ids and/or thread_ids to load in the corresponding docs into Document objects, if both are specified, loader will get all thread_ids belong to this folder based on folder_ids, combine with passed thread_ids, the union of both sets will be returned.\n\nHow to know folder_id ? go to quip folder, right click folder and copy link, extract suffix from link as folder_id. Hint: https://example.quip.com/<folder_id>\nHow to know thread_id ? thread_id is the document id. Go to quip doc, right click doc and copy link, extract suffix from link as thread_id. Hint: https://exmaple.quip.com/<thread_id>\n\nYou can also set include_all_folders as True will fetch group_folder_ids and You can also specify a boolean include_attachments to include attachments, this is set to False by default, if set to True all attachments will be downloaded and QuipLoader will extract the text from the attachments and add it to the Document object. Currently supported attachment types are: PDF, PNG, JPEG/JPG, SVG, Word and Excel. Also you can sepcify a boolean include_comments to include comments in document, this is set to False by default, if set to True all comments in document will be fetched and QuipLoader will add them to Document objec.\n\nBefore using QuipLoader make sure you have the latest version of the quip-api package installed:\n\n#!pip install quip-api\n\nExamples‚Äã\nPersonal Access Token‚Äã\nfrom langchain.document_loaders import QuipLoader\n\nloader = QuipLoader(\n    api_url=\"https://platform.quip.com\", access_token=\"change_me\", request_timeout=60\n)\ndocuments = loader.load(\n    folder_ids={\"123\", \"456\"},\n    thread_ids={\"abc\", \"efg\"},\n    include_attachments=False,\n    include_comments=False,\n)\n\nPrevious\nPySpark\nNext\nReadTheDocs Documentation"
}