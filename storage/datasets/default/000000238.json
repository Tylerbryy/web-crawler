{
	"title": "Email | ü¶úÔ∏èüîó Langchain",
	"url": "https://python.langchain.com/docs/integrations/document_loaders/email",
	"html": "ComponentsDocument loadersEmail\nEmail\n\nThis notebook shows how to load email (.eml) or Microsoft Outlook (.msg) files.\n\nUsing Unstructured‚Äã\n#!pip install unstructured\n\nfrom langchain.document_loaders import UnstructuredEmailLoader\n\nloader = UnstructuredEmailLoader(\"example_data/fake-email.eml\")\n\ndata = loader.load()\n\ndata\n\n    [Document(page_content='This is a test email to use for unit tests.\\n\\nImportant points:\\n\\nRoses are red\\n\\nViolets are blue', metadata={'source': 'example_data/fake-email.eml'})]\n\nRetain Elements‚Äã\n\nUnder the hood, Unstructured creates different \"elements\" for different chunks of text. By default we combine those together, but you can easily keep that separation by specifying mode=\"elements\".\n\nloader = UnstructuredEmailLoader(\"example_data/fake-email.eml\", mode=\"elements\")\n\ndata = loader.load()\n\ndata[0]\n\n    Document(page_content='This is a test email to use for unit tests.', metadata={'source': 'example_data/fake-email.eml', 'filename': 'fake-email.eml', 'file_directory': 'example_data', 'date': '2022-12-16T17:04:16-05:00', 'filetype': 'message/rfc822', 'sent_from': ['Matthew Robinson <mrobinson@unstructured.io>'], 'sent_to': ['Matthew Robinson <mrobinson@unstructured.io>'], 'subject': 'Test Email', 'category': 'NarrativeText'})\n\nProcessing Attachments‚Äã\n\nYou can process attachments with UnstructuredEmailLoader by setting process_attachments=True in the constructor. By default, attachments will be partitioned using the partition function from unstructured. You can use a different partitioning function by passing the function to the attachment_partitioner kwarg.\n\nloader = UnstructuredEmailLoader(\n    \"example_data/fake-email.eml\",\n    mode=\"elements\",\n    process_attachments=True,\n)\n\ndata = loader.load()\n\ndata[0]\n\n    Document(page_content='This is a test email to use for unit tests.', metadata={'source': 'example_data/fake-email.eml', 'filename': 'fake-email.eml', 'file_directory': 'example_data', 'date': '2022-12-16T17:04:16-05:00', 'filetype': 'message/rfc822', 'sent_from': ['Matthew Robinson <mrobinson@unstructured.io>'], 'sent_to': ['Matthew Robinson <mrobinson@unstructured.io>'], 'subject': 'Test Email', 'category': 'NarrativeText'})\n\nUsing OutlookMessageLoader‚Äã\n#!pip install extract_msg\n\nfrom langchain.document_loaders import OutlookMessageLoader\n\nloader = OutlookMessageLoader(\"example_data/fake-email.msg\")\n\ndata = loader.load()\n\ndata[0]\n\n    Document(page_content='This is a test email to experiment with the MS Outlook MSG Extractor\\r\\n\\r\\n\\r\\n-- \\r\\n\\r\\n\\r\\nKind regards\\r\\n\\r\\n\\r\\n\\r\\n\\r\\nBrian Zhou\\r\\n\\r\\n', metadata={'subject': 'Test for TIF files', 'sender': 'Brian Zhou <brizhou@gmail.com>', 'date': 'Mon, 18 Nov 2013 16:26:24 +0800'})\n\nPrevious\nDuckDB\nNext\nEmbaas"
}