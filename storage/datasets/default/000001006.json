{
	"title": "Gradio | 🦜️🔗 Langchain",
	"url": "https://python.langchain.com/docs/integrations/tools/gradio_tools",
	"html": "ComponentsToolsGradio\nGradio\n\nThere are many 1000s of Gradio apps on Hugging Face Spaces. This library puts them at the tips of your LLM's fingers 🦾\n\nSpecifically, gradio-tools is a Python library for converting Gradio apps into tools that can be leveraged by a large language model (LLM)-based agent to complete its task. For example, an LLM could use a Gradio tool to transcribe a voice recording it finds online and then summarize it for you. Or it could use a different Gradio tool to apply OCR to a document on your Google Drive and then answer questions about it.\n\nIt's very easy to create you own tool if you want to use a space that's not one of the pre-built tools. Please see this section of the gradio-tools documentation for information on how to do that. All contributions are welcome!\n\n# !pip install gradio_tools\n\nUsing a tool​\nfrom gradio_tools.tools import StableDiffusionTool\n\nlocal_file_path = StableDiffusionTool().langchain.run(\n    \"Please create a photo of a dog riding a skateboard\"\n)\nlocal_file_path\n\n    Loaded as API: https://gradio-client-demos-stable-diffusion.hf.space ✔\n    \n    Job Status: Status.STARTING eta: None\n\n\n\n\n\n    '/Users/harrisonchase/workplace/langchain/docs/modules/agents/tools/integrations/b61c1dd9-47e2-46f1-a47c-20d27640993d/tmp4ap48vnm.jpg'\n\nfrom PIL import Image\n\nim = Image.open(local_file_path)\n\ndisplay(im)\n\nUsing within an agent​\nfrom gradio_tools.tools import (\n    ImageCaptioningTool,\n    StableDiffusionPromptGeneratorTool,\n    StableDiffusionTool,\n    TextToVideoTool,\n)\nfrom langchain.agents import initialize_agent\nfrom langchain.llms import OpenAI\nfrom langchain.memory import ConversationBufferMemory\n\nllm = OpenAI(temperature=0)\nmemory = ConversationBufferMemory(memory_key=\"chat_history\")\ntools = [\n    StableDiffusionTool().langchain,\n    ImageCaptioningTool().langchain,\n    StableDiffusionPromptGeneratorTool().langchain,\n    TextToVideoTool().langchain,\n]\n\n\nagent = initialize_agent(\n    tools, llm, memory=memory, agent=\"conversational-react-description\", verbose=True\n)\noutput = agent.run(\n    input=(\n        \"Please create a photo of a dog riding a skateboard \"\n        \"but improve my prompt prior to using an image generator.\"\n        \"Please caption the generated image and create a video for it using the improved prompt.\"\n    )\n)\n\n    Loaded as API: https://gradio-client-demos-stable-diffusion.hf.space ✔\n    Loaded as API: https://taesiri-blip-2.hf.space ✔\n    Loaded as API: https://microsoft-promptist.hf.space ✔\n    Loaded as API: https://damo-vilab-modelscope-text-to-video-synthesis.hf.space ✔\n    \n    \n    > Entering new AgentExecutor chain...\n    \n    Thought: Do I need to use a tool? Yes\n    Action: StableDiffusionPromptGenerator\n    Action Input: A dog riding a skateboard\n    Job Status: Status.STARTING eta: None\n    \n    Observation: A dog riding a skateboard, digital painting, artstation, concept art, smooth, sharp focus, illustration, art by artgerm and greg rutkowski and alphonse mucha\n    Thought: Do I need to use a tool? Yes\n    Action: StableDiffusion\n    Action Input: A dog riding a skateboard, digital painting, artstation, concept art, smooth, sharp focus, illustration, art by artgerm and greg rutkowski and alphonse mucha\n    Job Status: Status.STARTING eta: None\n    \n    Job Status: Status.PROCESSING eta: None\n    \n    Observation: /Users/harrisonchase/workplace/langchain/docs/modules/agents/tools/integrations/2e280ce4-4974-4420-8680-450825c31601/tmpfmiz2g1c.jpg\n    Thought: Do I need to use a tool? Yes\n    Action: ImageCaptioner\n    Action Input: /Users/harrisonchase/workplace/langchain/docs/modules/agents/tools/integrations/2e280ce4-4974-4420-8680-450825c31601/tmpfmiz2g1c.jpg\n    Job Status: Status.STARTING eta: None\n    \n    Observation: a painting of a dog sitting on a skateboard\n    Thought: Do I need to use a tool? Yes\n    Action: TextToVideo\n    Action Input: a painting of a dog sitting on a skateboard\n    Job Status: Status.STARTING eta: None\n    Due to heavy traffic on this app, the prediction will take approximately 73 seconds.For faster predictions without waiting in queue, you may duplicate the space using: Client.duplicate(damo-vilab/modelscope-text-to-video-synthesis)\n    \n    Job Status: Status.IN_QUEUE eta: 73.89824726581574\n    Due to heavy traffic on this app, the prediction will take approximately 42 seconds.For faster predictions without waiting in queue, you may duplicate the space using: Client.duplicate(damo-vilab/modelscope-text-to-video-synthesis)\n    \n    Job Status: Status.IN_QUEUE eta: 42.49370198879602\n    \n    Job Status: Status.IN_QUEUE eta: 21.314297944849187\n    \n    Observation: /var/folders/bm/ylzhm36n075cslb9fvvbgq640000gn/T/tmp5snj_nmzf20_cb3m.mp4\n    Thought: Do I need to use a tool? No\n    AI: Here is a video of a painting of a dog sitting on a skateboard.\n    \n    > Finished chain.\n\nPrevious\nGoogle Serper\nNext\nGraphQL"
}