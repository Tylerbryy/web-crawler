{
	"title": "Comparison Evaluators | ü¶úÔ∏èüîó Langchain",
	"url": "https://python.langchain.com/docs/guides/evaluation/comparison/",
	"html": "EvaluationComparison Evaluators\nComparison Evaluators\n\nComparison evaluators in LangChain help measure two different chains or LLM outputs. These evaluators are helpful for comparative analyses, such as A/B testing between two language models, or comparing different versions of the same model. They can also be useful for things like generating preference scores for ai-assisted reinforcement learning.\n\nThese evaluators inherit from the PairwiseStringEvaluator class, providing a comparison interface for two strings - typically, the outputs from two different prompts or models, or two versions of the same model. In essence, a comparison evaluator performs an evaluation on a pair of strings and returns a dictionary containing the evaluation score and other relevant details.\n\nTo create a custom comparison evaluator, inherit from the PairwiseStringEvaluator class and overwrite the _evaluate_string_pairs method. If you require asynchronous evaluation, also overwrite the _aevaluate_string_pairs method.\n\nHere's a summary of the key methods and properties of a comparison evaluator:\n\nevaluate_string_pairs: Evaluate the output string pairs. This function should be overwritten when creating custom evaluators.\naevaluate_string_pairs: Asynchronously evaluate the output string pairs. This function should be overwritten for asynchronous evaluation.\nrequires_input: This property indicates whether this evaluator requires an input string.\nrequires_reference: This property specifies whether this evaluator requires a reference label.\nLANGSMITH SUPPORT\n\nThe run_on_dataset evaluation method is designed to evaluate only a single model at a time, and thus, doesn't support these evaluators.\n\nDetailed information about creating custom evaluators and the available built-in comparison evaluators is provided in the following sections.\n\nüìÑÔ∏è Pairwise string comparison\n\nOpen In Colab\n\nüìÑÔ∏è Pairwise embedding distance\n\nOpen In Colab\n\nüìÑÔ∏è Custom pairwise evaluator\n\nOpen In Colab\n\nPrevious\nString Distance\nNext\nPairwise string comparison"
}