{
	"title": "Custom functions with OpenAI Functions Agent | 🦜️🔗 Langchain",
	"url": "https://python.langchain.com/docs/modules/agents/how_to/custom-functions-with-openai-functions-agent",
	"html": "ModulesAgentsHow-toCustom functions with OpenAI Functions Agent\nCustom functions with OpenAI Functions Agent\n\nThis notebook goes through how to integrate custom functions with OpenAI Functions agent.\n\nInstall libraries which are required to run this example notebook:\n\npip install -q openai langchain yfinance\n\nDefine custom functions​\nfrom datetime import datetime, timedelta\n\nimport yfinance as yf\n\n\ndef get_current_stock_price(ticker):\n    \"\"\"Method to get current stock price\"\"\"\n\n    ticker_data = yf.Ticker(ticker)\n    recent = ticker_data.history(period=\"1d\")\n    return {\"price\": recent.iloc[0][\"Close\"], \"currency\": ticker_data.info[\"currency\"]}\n\n\ndef get_stock_performance(ticker, days):\n    \"\"\"Method to get stock price change in percentage\"\"\"\n\n    past_date = datetime.today() - timedelta(days=days)\n    ticker_data = yf.Ticker(ticker)\n    history = ticker_data.history(start=past_date)\n    old_price = history.iloc[0][\"Close\"]\n    current_price = history.iloc[-1][\"Close\"]\n    return {\"percent_change\": ((current_price - old_price) / old_price) * 100}\n\nget_current_stock_price(\"MSFT\")\n\n    {'price': 334.57000732421875, 'currency': 'USD'}\n\nget_stock_performance(\"MSFT\", 30)\n\n    {'percent_change': 1.014466941163018}\n\nMake custom tools​\nfrom typing import Type\n\nfrom langchain.tools import BaseTool\nfrom pydantic import BaseModel, Field\n\n\nclass CurrentStockPriceInput(BaseModel):\n    \"\"\"Inputs for get_current_stock_price\"\"\"\n\n    ticker: str = Field(description=\"Ticker symbol of the stock\")\n\n\nclass CurrentStockPriceTool(BaseTool):\n    name = \"get_current_stock_price\"\n    description = \"\"\"\n        Useful when you want to get current stock price.\n        You should enter the stock ticker symbol recognized by the yahoo finance\n        \"\"\"\n    args_schema: Type[BaseModel] = CurrentStockPriceInput\n\n    def _run(self, ticker: str):\n        price_response = get_current_stock_price(ticker)\n        return price_response\n\n    def _arun(self, ticker: str):\n        raise NotImplementedError(\"get_current_stock_price does not support async\")\n\n\nclass StockPercentChangeInput(BaseModel):\n    \"\"\"Inputs for get_stock_performance\"\"\"\n\n    ticker: str = Field(description=\"Ticker symbol of the stock\")\n    days: int = Field(description=\"Timedelta days to get past date from current date\")\n\n\nclass StockPerformanceTool(BaseTool):\n    name = \"get_stock_performance\"\n    description = \"\"\"\n        Useful when you want to check performance of the stock.\n        You should enter the stock ticker symbol recognized by the yahoo finance.\n        You should enter days as number of days from today from which performance needs to be check.\n        output will be the change in the stock price represented as a percentage.\n        \"\"\"\n    args_schema: Type[BaseModel] = StockPercentChangeInput\n\n    def _run(self, ticker: str, days: int):\n        response = get_stock_performance(ticker, days)\n        return response\n\n    def _arun(self, ticker: str):\n        raise NotImplementedError(\"get_stock_performance does not support async\")\n\nCreate Agent​\nfrom langchain.agents import AgentType, initialize_agent\nfrom langchain.chat_models import ChatOpenAI\n\nllm = ChatOpenAI(model=\"gpt-3.5-turbo-0613\", temperature=0)\n\ntools = [CurrentStockPriceTool(), StockPerformanceTool()]\n\nagent = initialize_agent(tools, llm, agent=AgentType.OPENAI_FUNCTIONS, verbose=True)\n\nagent.run(\n    \"What is the current price of Microsoft stock? How it has performed over past 6 months?\"\n)\n\n    \n    \n    > Entering new  chain...\n    \n    Invoking: `get_current_stock_price` with `{'ticker': 'MSFT'}`\n    \n    \n    {'price': 334.57000732421875, 'currency': 'USD'}\n    Invoking: `get_stock_performance` with `{'ticker': 'MSFT', 'days': 180}`\n    \n    \n    {'percent_change': 40.163963297187905}The current price of Microsoft stock is $334.57 USD. \n    \n    Over the past 6 months, Microsoft stock has performed well with a 40.16% increase in its price.\n    \n    > Finished chain.\n\n\n\n\n\n    'The current price of Microsoft stock is $334.57 USD. \\n\\nOver the past 6 months, Microsoft stock has performed well with a 40.16% increase in its price.'\n\nagent.run(\"Give me recent stock prices of Google and Meta?\")\n\n    \n    \n    > Entering new  chain...\n    \n    Invoking: `get_current_stock_price` with `{'ticker': 'GOOGL'}`\n    \n    \n    {'price': 118.33000183105469, 'currency': 'USD'}\n    Invoking: `get_current_stock_price` with `{'ticker': 'META'}`\n    \n    \n    {'price': 287.04998779296875, 'currency': 'USD'}The recent stock price of Google (GOOGL) is $118.33 USD and the recent stock price of Meta (META) is $287.05 USD.\n    \n    > Finished chain.\n\n\n\n\n\n    'The recent stock price of Google (GOOGL) is $118.33 USD and the recent stock price of Meta (META) is $287.05 USD.'\n\nagent.run(\n    \"In the past 3 months, which stock between Microsoft and Google has performed the best?\"\n)\n\n    \n    \n    > Entering new  chain...\n    \n    Invoking: `get_stock_performance` with `{'ticker': 'MSFT', 'days': 90}`\n    \n    \n    {'percent_change': 18.043096235165596}\n    Invoking: `get_stock_performance` with `{'ticker': 'GOOGL', 'days': 90}`\n    \n    \n    {'percent_change': 17.286155760642853}In the past 3 months, Microsoft (MSFT) has performed better than Google (GOOGL). Microsoft's stock price has increased by 18.04% while Google's stock price has increased by 17.29%.\n    \n    > Finished chain.\n\n\n\n\n\n    \"In the past 3 months, Microsoft (MSFT) has performed better than Google (GOOGL). Microsoft's stock price has increased by 18.04% while Google's stock price has increased by 17.29%.\"\n\nPrevious\nCreate ChatGPT clone\nNext\nCustom agent"
}