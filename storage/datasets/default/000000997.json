{
	"title": "DataForSeo | ü¶úÔ∏èüîó Langchain",
	"url": "https://python.langchain.com/docs/integrations/tools/dataforseo",
	"html": "ComponentsToolsDataForSeo\nDataForSeo\n\nThis notebook demonstrates how to use the DataForSeo API to obtain search engine results. The DataForSeo API retrieves SERP from most popular search engines like Google, Bing, Yahoo. It also allows to get SERPs from different search engine types like Maps, News, Events, etc.\n\nfrom langchain.utilities.dataforseo_api_search import DataForSeoAPIWrapper\n\nSetting up the API credentials‚Äã\n\nYou can obtain your API credentials by registering on the DataForSeo website.\n\nimport os\n\nos.environ[\"DATAFORSEO_LOGIN\"] = \"your_api_access_username\"\nos.environ[\"DATAFORSEO_PASSWORD\"] = \"your_api_access_password\"\n\nwrapper = DataForSeoAPIWrapper()\n\n\nThe run method will return the first result snippet from one of the following elements: answer_box, knowledge_graph, featured_snippet, shopping, organic.\n\nwrapper.run(\"Weather in Los Angeles\")\n\nThe Difference Between run and results‚Äã\n\nrun and results are two methods provided by the DataForSeoAPIWrapper class.\n\nThe run method executes the search and returns the first result snippet from the answer box, knowledge graph, featured snippet, shopping, or organic results. These elements are sorted by priority from highest to lowest.\n\nThe results method returns a JSON response configured according to the parameters set in the wrapper. This allows for more flexibility in terms of what data you want to return from the API.\n\nGetting Results as JSON‚Äã\n\nYou can customize the result types and fields you want to return in the JSON response. You can also set a maximum count for the number of top results to return.\n\njson_wrapper = DataForSeoAPIWrapper(\n    json_result_types=[\"organic\", \"knowledge_graph\", \"answer_box\"],\n    json_result_fields=[\"type\", \"title\", \"description\", \"text\"],\n    top_count=3,\n)\n\njson_wrapper.results(\"Bill Gates\")\n\nCustomizing Location and Language‚Äã\n\nYou can specify the location and language of your search results by passing additional parameters to the API wrapper.\n\ncustomized_wrapper = DataForSeoAPIWrapper(\n    top_count=10,\n    json_result_types=[\"organic\", \"local_pack\"],\n    json_result_fields=[\"title\", \"description\", \"type\"],\n    params={\"location_name\": \"Germany\", \"language_code\": \"en\"},\n)\ncustomized_wrapper.results(\"coffee near me\")\n\nCustomizing the Search Engine‚Äã\n\nYou can also specify the search engine you want to use.\n\ncustomized_wrapper = DataForSeoAPIWrapper(\n    top_count=10,\n    json_result_types=[\"organic\", \"local_pack\"],\n    json_result_fields=[\"title\", \"description\", \"type\"],\n    params={\"location_name\": \"Germany\", \"language_code\": \"en\", \"se_name\": \"bing\"},\n)\ncustomized_wrapper.results(\"coffee near me\")\n\nCustomizing the Search Type‚Äã\n\nThe API wrapper also allows you to specify the type of search you want to perform. For example, you can perform a maps search.\n\nmaps_search = DataForSeoAPIWrapper(\n    top_count=10,\n    json_result_fields=[\"title\", \"value\", \"address\", \"rating\", \"type\"],\n    params={\n        \"location_coordinate\": \"52.512,13.36,12z\",\n        \"language_code\": \"en\",\n        \"se_type\": \"maps\",\n    },\n)\nmaps_search.results(\"coffee near me\")\n\nIntegration with Langchain Agents‚Äã\n\nYou can use the Tool class from the langchain.agents module to integrate the DataForSeoAPIWrapper with a langchain agent. The Tool class encapsulates a function that the agent can call.\n\nfrom langchain.agents import Tool\n\nsearch = DataForSeoAPIWrapper(\n    top_count=3,\n    json_result_types=[\"organic\"],\n    json_result_fields=[\"title\", \"description\", \"type\"],\n)\ntool = Tool(\n    name=\"google-search-answer\",\n    description=\"My new answer tool\",\n    func=search.run,\n)\njson_tool = Tool(\n    name=\"google-search-json\",\n    description=\"My new json tool\",\n    func=search.results,\n)\n\nPrevious\nDall-E Image Generator\nNext\nDuckDuckGo Search"
}