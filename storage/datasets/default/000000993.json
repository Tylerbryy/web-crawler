{
	"title": "Shell (bash) | 🦜️🔗 Langchain",
	"url": "https://python.langchain.com/docs/integrations/tools/bash",
	"html": "ComponentsToolsShell (bash)\nShell (bash)\n\nGiving agents access to the shell is powerful (though risky outside a sandboxed environment).\n\nThe LLM can use it to execute any shell commands. A common use case for this is letting the LLM interact with your local file system.\n\nNote: Shell tool does not work with Windows OS.\n\nfrom langchain.tools import ShellTool\n\nshell_tool = ShellTool()\n\nprint(shell_tool.run({\"commands\": [\"echo 'Hello World!'\", \"time\"]}))\n\n    Hello World!\n    \n    real    0m0.000s\n    user    0m0.000s\n    sys 0m0.000s\n    \n\n\n    /Users/wfh/code/lc/lckg/langchain/tools/shell/tool.py:34: UserWarning: The shell tool has no safeguards by default. Use at your own risk.\n      warnings.warn(\n\nUse with Agents​\n\nAs with all tools, these can be given to an agent to accomplish more complex tasks. Let's have the agent fetch some links from a web page.\n\nfrom langchain.agents import AgentType, initialize_agent\nfrom langchain.chat_models import ChatOpenAI\n\nllm = ChatOpenAI(temperature=0)\n\nshell_tool.description = shell_tool.description + f\"args {shell_tool.args}\".replace(\n    \"{\", \"{{\"\n).replace(\"}\", \"}}\")\nself_ask_with_search = initialize_agent(\n    [shell_tool], llm, agent=AgentType.CHAT_ZERO_SHOT_REACT_DESCRIPTION, verbose=True\n)\nself_ask_with_search.run(\n    \"Download the langchain.com webpage and grep for all urls. Return only a sorted list of them. Be sure to use double quotes.\"\n)\n\n    \n    \n    > Entering new AgentExecutor chain...\n    Question: What is the task?\n    Thought: We need to download the langchain.com webpage and extract all the URLs from it. Then we need to sort the URLs and return them.\n    Action:\n    ```\n    {\n      \"action\": \"shell\",\n      \"action_input\": {\n        \"commands\": [\n          \"curl -s https://langchain.com | grep -o 'http[s]*://[^\\\" ]*' | sort\"\n        ]\n      }\n    }\n    ```\n\n\n    /Users/wfh/code/lc/lckg/langchain/tools/shell/tool.py:34: UserWarning: The shell tool has no safeguards by default. Use at your own risk.\n      warnings.warn(\n\n\n    \n    Observation: https://blog.langchain.dev/\n    https://discord.gg/6adMQxSpJS\n    https://docs.langchain.com/docs/\n    https://github.com/hwchase17/chat-langchain\n    https://github.com/hwchase17/langchain\n    https://github.com/hwchase17/langchainjs\n    https://github.com/sullivan-sean/chat-langchainjs\n    https://js.langchain.com/docs/\n    https://python.langchain.com/en/latest/\n    https://twitter.com/langchainai\n    \n    Thought:The URLs have been successfully extracted and sorted. We can return the list of URLs as the final answer.\n    Final Answer: [\"https://blog.langchain.dev/\", \"https://discord.gg/6adMQxSpJS\", \"https://docs.langchain.com/docs/\", \"https://github.com/hwchase17/chat-langchain\", \"https://github.com/hwchase17/langchain\", \"https://github.com/hwchase17/langchainjs\", \"https://github.com/sullivan-sean/chat-langchainjs\", \"https://js.langchain.com/docs/\", \"https://python.langchain.com/en/latest/\", \"https://twitter.com/langchainai\"]\n    \n    > Finished chain.\n\n\n\n\n\n    '[\"https://blog.langchain.dev/\", \"https://discord.gg/6adMQxSpJS\", \"https://docs.langchain.com/docs/\", \"https://github.com/hwchase17/chat-langchain\", \"https://github.com/hwchase17/langchain\", \"https://github.com/hwchase17/langchainjs\", \"https://github.com/sullivan-sean/chat-langchainjs\", \"https://js.langchain.com/docs/\", \"https://python.langchain.com/en/latest/\", \"https://twitter.com/langchainai\"]'\n\nPrevious\nAWS Lambda\nNext\nBearly Code Interpreter"
}