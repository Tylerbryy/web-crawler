{
	"title": "KuzuQAChain | ü¶úÔ∏èüîó Langchain",
	"url": "https://python.langchain.com/docs/use_cases/graph/graph_kuzu_qa",
	"html": "Graph queryingKuzuQAChain\nKuzuQAChain\n\nThis notebook shows how to use LLMs to provide a natural language interface to K√πzu database.\n\nK√πzu is an in-process property graph database management system. You can simply install it with pip:\n\npip install kuzu\n\n\nOnce installed, you can simply import it and start creating a database on the local machine and connect to it:\n\nimport kuzu\n\ndb = kuzu.Database(\"test_db\")\nconn = kuzu.Connection(db)\n\n\nFirst, we create the schema for a simple movie database:\n\nconn.execute(\"CREATE NODE TABLE Movie (name STRING, PRIMARY KEY(name))\")\nconn.execute(\n    \"CREATE NODE TABLE Person (name STRING, birthDate STRING, PRIMARY KEY(name))\"\n)\nconn.execute(\"CREATE REL TABLE ActedIn (FROM Person TO Movie)\")\n\n    <kuzu.query_result.QueryResult at 0x1066ff410>\n\n\nThen we can insert some data.\n\nconn.execute(\"CREATE (:Person {name: 'Al Pacino', birthDate: '1940-04-25'})\")\nconn.execute(\"CREATE (:Person {name: 'Robert De Niro', birthDate: '1943-08-17'})\")\nconn.execute(\"CREATE (:Movie {name: 'The Godfather'})\")\nconn.execute(\"CREATE (:Movie {name: 'The Godfather: Part II'})\")\nconn.execute(\n    \"CREATE (:Movie {name: 'The Godfather Coda: The Death of Michael Corleone'})\"\n)\nconn.execute(\n    \"MATCH (p:Person), (m:Movie) WHERE p.name = 'Al Pacino' AND m.name = 'The Godfather' CREATE (p)-[:ActedIn]->(m)\"\n)\nconn.execute(\n    \"MATCH (p:Person), (m:Movie) WHERE p.name = 'Al Pacino' AND m.name = 'The Godfather: Part II' CREATE (p)-[:ActedIn]->(m)\"\n)\nconn.execute(\n    \"MATCH (p:Person), (m:Movie) WHERE p.name = 'Al Pacino' AND m.name = 'The Godfather Coda: The Death of Michael Corleone' CREATE (p)-[:ActedIn]->(m)\"\n)\nconn.execute(\n    \"MATCH (p:Person), (m:Movie) WHERE p.name = 'Robert De Niro' AND m.name = 'The Godfather: Part II' CREATE (p)-[:ActedIn]->(m)\"\n)\n\n    <kuzu.query_result.QueryResult at 0x107016210>\n\nCreating KuzuQAChain‚Äã\n\nWe can now create the KuzuGraph and KuzuQAChain. To create the KuzuGraph we simply need to pass the database object to the KuzuGraph constructor.\n\nfrom langchain.chains import KuzuQAChain\nfrom langchain.chat_models import ChatOpenAI\nfrom langchain.graphs import KuzuGraph\n\ngraph = KuzuGraph(db)\n\nchain = KuzuQAChain.from_llm(ChatOpenAI(temperature=0), graph=graph, verbose=True)\n\nRefresh graph schema information‚Äã\n\nIf the schema of database changes, you can refresh the schema information needed to generate Cypher statements.\n\n# graph.refresh_schema()\n\nprint(graph.get_schema)\n\n    Node properties: [{'properties': [('name', 'STRING')], 'label': 'Movie'}, {'properties': [('name', 'STRING'), ('birthDate', 'STRING')], 'label': 'Person'}]\n    Relationships properties: [{'properties': [], 'label': 'ActedIn'}]\n    Relationships: ['(:Person)-[:ActedIn]->(:Movie)']\n    \n\nQuerying the graph‚Äã\n\nWe can now use the KuzuQAChain to ask question of the graph\n\nchain.run(\"Who played in The Godfather: Part II?\")\n\n    \n    \n    > Entering new  chain...\n    Generated Cypher:\n    MATCH (p:Person)-[:ActedIn]->(m:Movie {name: 'The Godfather: Part II'}) RETURN p.name\n    Full Context:\n    [{'p.name': 'Al Pacino'}, {'p.name': 'Robert De Niro'}]\n    \n    > Finished chain.\n\n\n\n\n\n    'Al Pacino and Robert De Niro both played in The Godfather: Part II.'\n\nchain.run(\"Robert De Niro played in which movies?\")\n\n    \n    \n    > Entering new  chain...\n    Generated Cypher:\n    MATCH (p:Person {name: 'Robert De Niro'})-[:ActedIn]->(m:Movie)\n    RETURN m.name\n    Full Context:\n    [{'m.name': 'The Godfather: Part II'}]\n    \n    > Finished chain.\n\n\n\n\n\n    'Robert De Niro played in The Godfather: Part II.'\n\nchain.run(\"Robert De Niro is born in which year?\")\n\n    \n    \n    > Entering new  chain...\n    Generated Cypher:\n    MATCH (p:Person {name: 'Robert De Niro'})-[:ActedIn]->(m:Movie)\n    RETURN p.birthDate\n    Full Context:\n    [{'p.birthDate': '1943-08-17'}]\n    \n    > Finished chain.\n\n\n\n\n\n    'Robert De Niro was born on August 17, 1943.'\n\nchain.run(\"Who is the oldest actor who played in The Godfather: Part II?\")\n\n    \n    \n    > Entering new  chain...\n    Generated Cypher:\n    MATCH (p:Person)-[:ActedIn]->(m:Movie{name:'The Godfather: Part II'})\n    WITH p, m, p.birthDate AS birthDate\n    ORDER BY birthDate ASC\n    LIMIT 1\n    RETURN p.name\n    Full Context:\n    [{'p.name': 'Al Pacino'}]\n    \n    > Finished chain.\n\n\n\n\n\n    'The oldest actor who played in The Godfather: Part II is Al Pacino.'\n\nPrevious\nHugeGraph QA Chain\nNext\nMemgraph QA chain"
}