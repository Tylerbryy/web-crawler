{
	"title": "Clarifai | ü¶úÔ∏èüîó Langchain",
	"url": "https://python.langchain.com/docs/integrations/text_embedding/clarifai",
	"html": "ComponentsText embedding modelsClarifai\nClarifai\n\nClarifai is an AI Platform that provides the full AI lifecycle ranging from data exploration, data labeling, model training, evaluation, and inference.\n\nThis example goes over how to use LangChain to interact with Clarifai models. Text embedding models in particular can be found here.\n\nTo use Clarifai, you must have an account and a Personal Access Token (PAT) key. Check here to get or create a PAT.\n\nDependencies\n# Install required dependencies\npip install clarifai\n\nImports\n\nHere we will be setting the personal access token. You can find your PAT under settings/security in your Clarifai account.\n\n# Please login and get your API key from  https://clarifai.com/settings/security\nfrom getpass import getpass\n\nCLARIFAI_PAT = getpass()\n\n     ¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑\n\n# Import the required modules\nfrom langchain.embeddings import ClarifaiEmbeddings\nfrom langchain.prompts import PromptTemplate\n\nInput\n\nCreate a prompt template to be used with the LLM Chain:\n\ntemplate = \"\"\"Question: {question}\n\nAnswer: Let's think step by step.\"\"\"\n\nprompt = PromptTemplate(template=template, input_variables=[\"question\"])\n\nSetup\n\nSet the user id and app id to the application in which the model resides. You can find a list of public models on https://clarifai.com/explore/models\n\nYou will have to also initialize the model id and if needed, the model version id. Some models have many versions, you can choose the one appropriate for your task.\n\nUSER_ID = \"salesforce\"\nAPP_ID = \"blip\"\nMODEL_ID = \"multimodal-embedder-blip-2\"\n\n# You can provide a specific model version as the model_version_id arg.\n# MODEL_VERSION_ID = \"MODEL_VERSION_ID\"\n\n# Initialize a Clarifai embedding model\nembeddings = ClarifaiEmbeddings(\n    pat=CLARIFAI_PAT, user_id=USER_ID, app_id=APP_ID, model_id=MODEL_ID\n)\n\ntext = \"This is a test document.\"\n\nquery_result = embeddings.embed_query(text)\n\ndoc_result = embeddings.embed_documents([text])\n\nPrevious\nBGE on Hugging Face\nNext\nCohere"
}