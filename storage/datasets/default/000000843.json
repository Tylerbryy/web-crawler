{
	"title": "DeepInfra | 🦜️🔗 Langchain",
	"url": "https://python.langchain.com/docs/integrations/text_embedding/deepinfra",
	"html": "ComponentsText embedding modelsDeepInfra\nDeepInfra\n\nDeepInfra is a serverless inference as a service that provides access to a variety of LLMs and embeddings models. This notebook goes over how to use LangChain with DeepInfra for text embeddings.\n\n# sign up for an account: https://deepinfra.com/login?utm_source=langchain\n\nfrom getpass import getpass\n\nDEEPINFRA_API_TOKEN = getpass()\n\n     ········\n\nimport os\n\nos.environ[\"DEEPINFRA_API_TOKEN\"] = DEEPINFRA_API_TOKEN\n\nfrom langchain.embeddings import DeepInfraEmbeddings\n\nembeddings = DeepInfraEmbeddings(\n    model_id=\"sentence-transformers/clip-ViT-B-32\",\n    query_instruction=\"\",\n    embed_instruction=\"\",\n)\n\ndocs = [\"Dog is not a cat\", \"Beta is the second letter of Greek alphabet\"]\ndocument_result = embeddings.embed_documents(docs)\n\nquery = \"What is the first letter of Greek alphabet\"\nquery_result = embeddings.embed_query(query)\n\nimport numpy as np\n\nquery_numpy = np.array(query_result)\nfor doc_res, doc in zip(document_result, docs):\n    document_numpy = np.array(doc_res)\n    similarity = np.dot(query_numpy, document_numpy) / (\n        np.linalg.norm(query_numpy) * np.linalg.norm(document_numpy)\n    )\n    print(f'Cosine similarity between \"{doc}\" and query: {similarity}')\n\n    Cosine similarity between \"Dog is not a cat\" and query: 0.7489097144129355\n    Cosine similarity between \"Beta is the second letter of Greek alphabet\" and query: 0.9519380640702013\n\nPrevious\nDashScope\nNext\nEDEN AI"
}