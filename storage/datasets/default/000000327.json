{
	"title": "Airbyte Question Answering | 🦜️🔗 Langchain",
	"url": "https://python.langchain.com/docs/integrations/toolkits/airbyte_structured_qa",
	"html": "ComponentsAgents and toolkitsAirbyte Question Answering\nAirbyte Question Answering\n\nThis notebook shows how to do question answering over structured data, in this case using the AirbyteStripeLoader.\n\nVectorstores often have a hard time answering questions that requires computing, grouping and filtering structured data so the high level idea is to use a pandas dataframe to help with these types of questions.\n\nLoad data from Stripe using Airbyte. user the record_handler paramater to return a JSON from the data loader.\nimport os\n\nimport pandas as pd\nfrom langchain.agents import AgentType, create_pandas_dataframe_agent\nfrom langchain.chat_models.openai import ChatOpenAI\nfrom langchain.document_loaders.airbyte import AirbyteStripeLoader\n\nstream_name = \"customers\"\nconfig = {\n    \"client_secret\": os.getenv(\"STRIPE_CLIENT_SECRET\"),\n    \"account_id\": os.getenv(\"STRIPE_ACCOUNT_D\"),\n    \"start_date\": \"2023-01-20T00:00:00Z\",\n}\n\n\ndef handle_record(record: dict, _id: str):\n    return record.data\n\n\nloader = AirbyteStripeLoader(\n    config=config,\n    record_handler=handle_record,\n    stream_name=stream_name,\n)\ndata = loader.load()\n\nPass the data to pandas dataframe.\ndf = pd.DataFrame(data)\n\nPass the dataframe df to the create_pandas_dataframe_agent and invoke\nagent = create_pandas_dataframe_agent(\n    ChatOpenAI(temperature=0, model=\"gpt-4\"),\n    df,\n    verbose=True,\n    agent_type=AgentType.OPENAI_FUNCTIONS,\n)\n\nRun the agent\noutput = agent.run(\"How many rows are there?\")\n\nPrevious\nAINetwork\nNext\nAmadeus"
}