{
	"title": "Conversation Token Buffer | 🦜️🔗 Langchain",
	"url": "https://python.langchain.com/docs/modules/memory/types/token_buffer",
	"html": "ModulesMoreMemoryMemory typesConversation Token Buffer\nConversation Token Buffer\n\nConversationTokenBufferMemory keeps a buffer of recent interactions in memory, and uses token length rather than number of interactions to determine when to flush interactions.\n\nLet's first walk through how to use the utilities.\n\nUsing memory with LLM​\nfrom langchain.llms import OpenAI\nfrom langchain.memory import ConversationTokenBufferMemory\n\nllm = OpenAI()\n\nmemory = ConversationTokenBufferMemory(llm=llm, max_token_limit=10)\nmemory.save_context({\"input\": \"hi\"}, {\"output\": \"whats up\"})\nmemory.save_context({\"input\": \"not much you\"}, {\"output\": \"not much\"})\n\nmemory.load_memory_variables({})\n\n    {'history': 'Human: not much you\\nAI: not much'}\n\n\nWe can also get the history as a list of messages (this is useful if you are using this with a chat model).\n\nmemory = ConversationTokenBufferMemory(\n    llm=llm, max_token_limit=10, return_messages=True\n)\nmemory.save_context({\"input\": \"hi\"}, {\"output\": \"whats up\"})\nmemory.save_context({\"input\": \"not much you\"}, {\"output\": \"not much\"})\n\nUsing in a chain​\n\nLet's walk through an example, again setting verbose=True so we can see the prompt.\n\nfrom langchain.chains import ConversationChain\n\nconversation_with_summary = ConversationChain(\n    llm=llm,\n    # We set a very low max_token_limit for the purposes of testing.\n    memory=ConversationTokenBufferMemory(llm=OpenAI(), max_token_limit=60),\n    verbose=True,\n)\nconversation_with_summary.predict(input=\"Hi, what's up?\")\n\n    \n    \n    > Entering new ConversationChain chain...\n    Prompt after formatting:\n    The following is a friendly conversation between a human and an AI. The AI is talkative and provides lots of specific details from its context. If the AI does not know the answer to a question, it truthfully says it does not know.\n    \n    Current conversation:\n    \n    Human: Hi, what's up?\n    AI:\n    \n    > Finished chain.\n\n\n\n\n\n    \" Hi there! I'm doing great, just enjoying the day. How about you?\"\n\nconversation_with_summary.predict(input=\"Just working on writing some documentation!\")\n\n    \n    \n    > Entering new ConversationChain chain...\n    Prompt after formatting:\n    The following is a friendly conversation between a human and an AI. The AI is talkative and provides lots of specific details from its context. If the AI does not know the answer to a question, it truthfully says it does not know.\n    \n    Current conversation:\n    Human: Hi, what's up?\n    AI:  Hi there! I'm doing great, just enjoying the day. How about you?\n    Human: Just working on writing some documentation!\n    AI:\n    \n    > Finished chain.\n\n\n\n\n\n    ' Sounds like a productive day! What kind of documentation are you writing?'\n\nconversation_with_summary.predict(input=\"For LangChain! Have you heard of it?\")\n\n    \n    \n    > Entering new ConversationChain chain...\n    Prompt after formatting:\n    The following is a friendly conversation between a human and an AI. The AI is talkative and provides lots of specific details from its context. If the AI does not know the answer to a question, it truthfully says it does not know.\n    \n    Current conversation:\n    Human: Hi, what's up?\n    AI:  Hi there! I'm doing great, just enjoying the day. How about you?\n    Human: Just working on writing some documentation!\n    AI:  Sounds like a productive day! What kind of documentation are you writing?\n    Human: For LangChain! Have you heard of it?\n    AI:\n    \n    > Finished chain.\n\n\n\n\n\n    \" Yes, I have heard of LangChain! It is a decentralized language-learning platform that connects native speakers and learners in real time. Is that the documentation you're writing about?\"\n\n# We can see here that the buffer is updated\nconversation_with_summary.predict(\n    input=\"Haha nope, although a lot of people confuse it for that\"\n)\n\n    \n    \n    > Entering new ConversationChain chain...\n    Prompt after formatting:\n    The following is a friendly conversation between a human and an AI. The AI is talkative and provides lots of specific details from its context. If the AI does not know the answer to a question, it truthfully says it does not know.\n    \n    Current conversation:\n    Human: For LangChain! Have you heard of it?\n    AI:  Yes, I have heard of LangChain! It is a decentralized language-learning platform that connects native speakers and learners in real time. Is that the documentation you're writing about?\n    Human: Haha nope, although a lot of people confuse it for that\n    AI:\n    \n    > Finished chain.\n\n\n\n\n\n    \" Oh, I see. Is there another language learning platform you're referring to?\"\n\nPrevious\nConversation Summary Buffer\nNext\nBacked by a Vector Store"
}