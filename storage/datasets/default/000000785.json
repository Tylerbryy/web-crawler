{
	"title": "Upstash Redis | ü¶úÔ∏èüîó Langchain",
	"url": "https://python.langchain.com/docs/integrations/providers/upstash",
	"html": "ProvidersMoreUpstash Redis\nUpstash Redis\n\nUpstash offers developers serverless databases and messaging platforms to build powerful applications without having to worry about the operational complexity of running databases at scale.\n\nThis page covers how to use Upstash Redis with LangChain.\n\nInstallation and Setup‚Äã\nUpstash Redis Python SDK can be installed with pip install upstash-redis\nA globally distributed, low-latency and highly available database can be created at the Upstash Console\nIntegrations‚Äã\n\nAll of Upstash-LangChain integrations are based on upstash-redis Python SDK being utilized as wrappers for LangChain. This SDK utilizes Upstash Redis DB by giving UPSTASH_REDIS_REST_URL and UPSTASH_REDIS_REST_TOKEN parameters from the console. One significant advantage of this is that, this SDK uses a REST API. This means, you can run this in serverless platforms, edge or any platform that does not support TCP connections.\n\nCache‚Äã\n\nUpstash Redis can be used as a cache for LLM prompts and responses.\n\nTo import this cache:\n\nfrom langchain.cache import UpstashRedisCache\n\n\nTo use with your LLMs:\n\nimport langchain\nfrom upstash_redis import Redis\n\nURL = \"<UPSTASH_REDIS_REST_URL>\"\nTOKEN = \"<UPSTASH_REDIS_REST_TOKEN>\"\n\nlangchain.llm_cache = UpstashRedisCache(redis_=Redis(url=URL, token=TOKEN))\n\nMemory‚Äã\n\nUpstash Redis can be used to persist LLM conversations.\n\nChat Message History Memory‚Äã\n\nAn example of Upstash Redis for caching conversation message history can be seen in this notebook.\n\nPrevious\nUnstructured\nNext\nUSearch"
}