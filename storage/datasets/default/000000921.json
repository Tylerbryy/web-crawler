{
	"title": "Vald | ü¶úÔ∏èüîó Langchain",
	"url": "https://python.langchain.com/docs/integrations/vectorstores/vald",
	"html": "ComponentsVector storesVald\nVald\n\nVald is a highly scalable distributed fast approximate nearest neighbor (ANN) dense vector search engine.\n\nThis notebook shows how to use functionality related to the Vald database.\n\nTo run this notebook you need a running Vald cluster. Check Get Started for more information.\n\nSee the installation instructions.\n\npip install vald-client-python\n\nBasic Example‚Äã\nfrom langchain.document_loaders import TextLoader\nfrom langchain.embeddings import HuggingFaceEmbeddings\nfrom langchain.text_splitter import CharacterTextSplitter\nfrom langchain.vectorstores import Vald\n\nraw_documents = TextLoader(\"state_of_the_union.txt\").load()\ntext_splitter = CharacterTextSplitter(chunk_size=1000, chunk_overlap=0)\ndocuments = text_splitter.split_documents(raw_documents)\nembeddings = HuggingFaceEmbeddings()\ndb = Vald.from_documents(documents, embeddings, host=\"localhost\", port=8080)\n\nquery = \"What did the president say about Ketanji Brown Jackson\"\ndocs = db.similarity_search(query)\ndocs[0].page_content\n\nSimilarity search by vector‚Äã\nembedding_vector = embeddings.embed_query(query)\ndocs = db.similarity_search_by_vector(embedding_vector)\ndocs[0].page_content\n\nSimilarity search with score‚Äã\ndocs_and_scores = db.similarity_search_with_score(query)\ndocs_and_scores[0]\n\nMaximal Marginal Relevance Search (MMR)‚Äã\n\nIn addition to using similarity search in the retriever object, you can also use mmr as retriever.\n\nretriever = db.as_retriever(search_type=\"mmr\")\nretriever.get_relevant_documents(query)\n\n\nOr use max_marginal_relevance_search directly:\n\ndb.max_marginal_relevance_search(query, k=2, fetch_k=10)\n\nPrevious\nUSearch\nNext\nVearch"
}