{
	"title": "Arcee | ü¶úÔ∏èüîó Langchain",
	"url": "https://python.langchain.com/docs/integrations/llms/arcee",
	"html": "ComponentsLLMsArcee\nArcee\n\nThis notebook demonstrates how to use the Arcee class for generating text using Arcee's Domain Adapted Language Models (DALMs).\n\nSetup‚Äã\n\nBefore using Arcee, make sure the Arcee API key is set as ARCEE_API_KEY environment variable. You can also pass the api key as a named parameter.\n\nfrom langchain.llms import Arcee\n\n# Create an instance of the Arcee class\narcee = Arcee(\n    model=\"DALM-PubMed\",\n    # arcee_api_key=\"ARCEE-API-KEY\" # if not already set in the environment\n)\n\nAdditional Configuration‚Äã\n\nYou can also configure Arcee's parameters such as arcee_api_url, arcee_app_url, and model_kwargs as needed. Setting the model_kwargs at the object initialization uses the parameters as default for all the subsequent calls to the generate response.\n\narcee = Arcee(\n    model=\"DALM-Patent\",\n    # arcee_api_key=\"ARCEE-API-KEY\", # if not already set in the environment\n    arcee_api_url=\"https://custom-api.arcee.ai\",  # default is https://api.arcee.ai\n    arcee_app_url=\"https://custom-app.arcee.ai\",  # default is https://app.arcee.ai\n    model_kwargs={\n        \"size\": 5,\n        \"filters\": [\n            {\n                \"field_name\": \"document\",\n                \"filter_type\": \"fuzzy_search\",\n                \"value\": \"Einstein\",\n            }\n        ],\n    },\n)\n\nGenerating Text‚Äã\n\nYou can generate text from Arcee by providing a prompt. Here's an example:\n\n# Generate text\nprompt = \"Can AI-driven music therapy contribute to the rehabilitation of patients with disorders of consciousness?\"\nresponse = arcee(prompt)\n\nAdditional parameters‚Äã\n\nArcee allows you to apply filters and set the size (in terms of count) of retrieved document(s) to aid text generation. Filters help narrow down the results. Here's how to use these parameters:\n\n# Define filters\nfilters = [\n    {\"field_name\": \"document\", \"filter_type\": \"fuzzy_search\", \"value\": \"Einstein\"},\n    {\"field_name\": \"year\", \"filter_type\": \"strict_search\", \"value\": \"1905\"},\n]\n\n# Generate text with filters and size params\nresponse = arcee(prompt, size=5, filters=filters)\n\nPrevious\nAnyscale\nNext\nAzure ML"
}