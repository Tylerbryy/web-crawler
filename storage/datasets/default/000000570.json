{
	"title": "Prediction Guard | ü¶úÔ∏èüîó Langchain",
	"url": "https://python.langchain.com/docs/integrations/llms/predictionguard",
	"html": "ComponentsLLMsPrediction Guard\nPrediction Guard\npip install predictionguard langchain\n\nimport os\n\nfrom langchain.chains import LLMChain\nfrom langchain.llms import PredictionGuard\nfrom langchain.prompts import PromptTemplate\n\nBasic LLM usage‚Äã\n# Optional, add your OpenAI API Key. This is optional, as Prediction Guard allows\n# you to access all the latest open access models (see https://docs.predictionguard.com)\nos.environ[\"OPENAI_API_KEY\"] = \"<your OpenAI api key>\"\n\n# Your Prediction Guard API key. Get one at predictionguard.com\nos.environ[\"PREDICTIONGUARD_TOKEN\"] = \"<your Prediction Guard access token>\"\n\npgllm = PredictionGuard(model=\"OpenAI-text-davinci-003\")\n\npgllm(\"Tell me a joke\")\n\nControl the output structure/ type of LLMs‚Äã\ntemplate = \"\"\"Respond to the following query based on the context.\n\nContext: EVERY comment, DM + email suggestion has led us to this EXCITING announcement! üéâ We have officially added TWO new candle subscription box options! üì¶\nExclusive Candle Box - $80 \nMonthly Candle Box - $45 (NEW!)\nScent of The Month Box - $28 (NEW!)\nHead to stories to get ALLL the deets on each box! üëÜ BONUS: Save 50% on your first box with code 50OFF! üéâ\n\nQuery: {query}\n\nResult: \"\"\"\nprompt = PromptTemplate(template=template, input_variables=[\"query\"])\n\n# Without \"guarding\" or controlling the output of the LLM.\npgllm(prompt.format(query=\"What kind of post is this?\"))\n\n# With \"guarding\" or controlling the output of the LLM. See the\n# Prediction Guard docs (https://docs.predictionguard.com) to learn how to\n# control the output with integer, float, boolean, JSON, and other types and\n# structures.\npgllm = PredictionGuard(\n    model=\"OpenAI-text-davinci-003\",\n    output={\n        \"type\": \"categorical\",\n        \"categories\": [\"product announcement\", \"apology\", \"relational\"],\n    },\n)\npgllm(prompt.format(query=\"What kind of post is this?\"))\n\nChaining‚Äã\npgllm = PredictionGuard(model=\"OpenAI-text-davinci-003\")\n\ntemplate = \"\"\"Question: {question}\n\nAnswer: Let's think step by step.\"\"\"\nprompt = PromptTemplate(template=template, input_variables=[\"question\"])\nllm_chain = LLMChain(prompt=prompt, llm=pgllm, verbose=True)\n\nquestion = \"What NFL team won the Super Bowl in the year Justin Beiber was born?\"\n\nllm_chain.predict(question=question)\n\ntemplate = \"\"\"Write a {adjective} poem about {subject}.\"\"\"\nprompt = PromptTemplate(template=template, input_variables=[\"adjective\", \"subject\"])\nllm_chain = LLMChain(prompt=prompt, llm=pgllm, verbose=True)\n\nllm_chain.predict(adjective=\"sad\", subject=\"ducks\")\n\nPrevious\nPredibase\nNext\nPromptLayer OpenAI"
}