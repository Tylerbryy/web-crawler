{
	"title": "Conversation Buffer | 🦜️🔗 Langchain",
	"url": "https://python.langchain.com/docs/modules/memory/types/buffer",
	"html": "ModulesMoreMemoryMemory typesConversation Buffer\nConversation Buffer\n\nThis notebook shows how to use ConversationBufferMemory. This memory allows for storing messages and then extracts the messages in a variable.\n\nWe can first extract it as a string.\n\nfrom langchain.memory import ConversationBufferMemory\n\nmemory = ConversationBufferMemory()\nmemory.save_context({\"input\": \"hi\"}, {\"output\": \"whats up\"})\n\nmemory.load_memory_variables({})\n\n    {'history': 'Human: hi\\nAI: whats up'}\n\n\nWe can also get the history as a list of messages (this is useful if you are using this with a chat model).\n\nmemory = ConversationBufferMemory(return_messages=True)\nmemory.save_context({\"input\": \"hi\"}, {\"output\": \"whats up\"})\n\nmemory.load_memory_variables({})\n\n    {'history': [HumanMessage(content='hi', additional_kwargs={}),\n      AIMessage(content='whats up', additional_kwargs={})]}\n\nUsing in a chain​\n\nFinally, let's take a look at using this in a chain (setting verbose=True so we can see the prompt).\n\nfrom langchain.llms import OpenAI\nfrom langchain.chains import ConversationChain\n\n\nllm = OpenAI(temperature=0)\nconversation = ConversationChain(\n    llm=llm,\n    verbose=True,\n    memory=ConversationBufferMemory()\n)\n\nconversation.predict(input=\"Hi there!\")\n\n\n\n    > Entering new ConversationChain chain...\n    Prompt after formatting:\n    The following is a friendly conversation between a human and an AI. The AI is talkative and provides lots of specific details from its context. If the AI does not know the answer to a question, it truthfully says it does not know.\n\n    Current conversation:\n\n    Human: Hi there!\n    AI:\n\n    > Finished chain.\n\n\n\n\n\n    \" Hi there! It's nice to meet you. How can I help you today?\"\n\nconversation.predict(input=\"I'm doing well! Just having a conversation with an AI.\")\n\n\n\n    > Entering new ConversationChain chain...\n    Prompt after formatting:\n    The following is a friendly conversation between a human and an AI. The AI is talkative and provides lots of specific details from its context. If the AI does not know the answer to a question, it truthfully says it does not know.\n\n    Current conversation:\n    Human: Hi there!\n    AI:  Hi there! It's nice to meet you. How can I help you today?\n    Human: I'm doing well! Just having a conversation with an AI.\n    AI:\n\n    > Finished chain.\n\n\n\n\n\n    \" That's great! It's always nice to have a conversation with someone new. What would you like to talk about?\"\n\nconversation.predict(input=\"Tell me about yourself.\")\n\n\n\n    > Entering new ConversationChain chain...\n    Prompt after formatting:\n    The following is a friendly conversation between a human and an AI. The AI is talkative and provides lots of specific details from its context. If the AI does not know the answer to a question, it truthfully says it does not know.\n\n    Current conversation:\n    Human: Hi there!\n    AI:  Hi there! It's nice to meet you. How can I help you today?\n    Human: I'm doing well! Just having a conversation with an AI.\n    AI:  That's great! It's always nice to have a conversation with someone new. What would you like to talk about?\n    Human: Tell me about yourself.\n    AI:\n\n    > Finished chain.\n\n\n\n\n\n    \" Sure! I'm an AI created to help people with their everyday tasks. I'm programmed to understand natural language and provide helpful information. I'm also constantly learning and updating my knowledge base so I can provide more accurate and helpful answers.\"\n\nPrevious\nMemory types\nNext\nConversation Buffer Window"
}