{
	"title": "Remembrall | ü¶úÔ∏èüîó Langchain",
	"url": "https://python.langchain.com/docs/integrations/memory/remembrall",
	"html": "ComponentsMemoryRemembrall\nRemembrall\n\nThis page covers how to use the Remembrall ecosystem within LangChain.\n\nWhat is Remembrall?‚Äã\n\nRemembrall gives your language model long-term memory, retrieval augmented generation, and complete observability with just a few lines of code.\n\nIt works as a light-weight proxy on top of your OpenAI calls and simply augments the context of the chat calls at runtime with relevant facts that have been collected.\n\nSetup‚Äã\n\nTo get started, sign in with Github on the Remembrall platform and copy your API key from the settings page.\n\nAny request that you send with the modified openai_api_base (see below) and Remembrall API key will automatically be tracked in the Remembrall dashboard. You never have to share your OpenAI key with our platform and this information is never stored by the Remembrall systems.\n\nEnable Long Term Memory‚Äã\n\nIn addition to setting the openai_api_base and Remembrall API key via x-gp-api-key, you should specify a UID to maintain memory for. This will usually be a unique user identifier (like email).\n\nfrom langchain.chat_models import ChatOpenAI\nchat_model = ChatOpenAI(openai_api_base=\"https://remembrall.dev/api/openai/v1\",\n                        model_kwargs={\n                            \"headers\":{\n                                \"x-gp-api-key\": \"remembrall-api-key-here\",\n                                \"x-gp-remember\": \"user@email.com\",\n                            }\n                        })\n\nchat_model.predict(\"My favorite color is blue.\")\nimport time; time.sleep(5)  # wait for system to save fact via auto save\nprint(chat_model.predict(\"What is my favorite color?\"))\n\nEnable Retrieval Augmented Generation‚Äã\n\nFirst, create a document context in the Remembrall dashboard. Paste in the document texts or upload documents as PDFs to be processed. Save the Document Context ID and insert it as shown below.\n\nfrom langchain.chat_models import ChatOpenAI\nchat_model = ChatOpenAI(openai_api_base=\"https://remembrall.dev/api/openai/v1\",\n                        model_kwargs={\n                            \"headers\":{\n                                \"x-gp-api-key\": \"remembrall-api-key-here\",\n                                \"x-gp-context\": \"document-context-id-goes-here\",\n                            }\n                        })\n\nprint(chat_model.predict(\"This is a question that can be answered with my document.\"))\n\nPrevious\nRedis\nNext\nRockset"
}