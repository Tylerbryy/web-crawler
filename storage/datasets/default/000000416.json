{
	"title": "JSON | 🦜️🔗 Langchain",
	"url": "https://python.langchain.com/docs/modules/data_connection/document_loaders/json",
	"html": "ModulesRetrievalDocument loadersJSON\nJSON\n\nJSON (JavaScript Object Notation) is an open standard file format and data interchange format that uses human-readable text to store and transmit data objects consisting of attribute–value pairs and arrays (or other serializable values).\n\nJSON Lines is a file format where each line is a valid JSON value.\n\nThe JSONLoader uses a specified jq schema to parse the JSON files. It uses the jq python package. Check this manual for a detailed documentation of the jq syntax.\n\n#!pip install jq\n\nfrom langchain.document_loaders import JSONLoader\n\nimport json\nfrom pathlib import Path\nfrom pprint import pprint\n\n\nfile_path='./example_data/facebook_chat.json'\ndata = json.loads(Path(file_path).read_text())\n\npprint(data)\n\n    {'image': {'creation_timestamp': 1675549016, 'uri': 'image_of_the_chat.jpg'},\n     'is_still_participant': True,\n     'joinable_mode': {'link': '', 'mode': 1},\n     'magic_words': [],\n     'messages': [{'content': 'Bye!',\n                   'sender_name': 'User 2',\n                   'timestamp_ms': 1675597571851},\n                  {'content': 'Oh no worries! Bye',\n                   'sender_name': 'User 1',\n                   'timestamp_ms': 1675597435669},\n                  {'content': 'No Im sorry it was my mistake, the blue one is not '\n                              'for sale',\n                   'sender_name': 'User 2',\n                   'timestamp_ms': 1675596277579},\n                  {'content': 'I thought you were selling the blue one!',\n                   'sender_name': 'User 1',\n                   'timestamp_ms': 1675595140251},\n                  {'content': 'Im not interested in this bag. Im interested in the '\n                              'blue one!',\n                   'sender_name': 'User 1',\n                   'timestamp_ms': 1675595109305},\n                  {'content': 'Here is $129',\n                   'sender_name': 'User 2',\n                   'timestamp_ms': 1675595068468},\n                  {'photos': [{'creation_timestamp': 1675595059,\n                               'uri': 'url_of_some_picture.jpg'}],\n                   'sender_name': 'User 2',\n                   'timestamp_ms': 1675595060730},\n                  {'content': 'Online is at least $100',\n                   'sender_name': 'User 2',\n                   'timestamp_ms': 1675595045152},\n                  {'content': 'How much do you want?',\n                   'sender_name': 'User 1',\n                   'timestamp_ms': 1675594799696},\n                  {'content': 'Goodmorning! $50 is too low.',\n                   'sender_name': 'User 2',\n                   'timestamp_ms': 1675577876645},\n                  {'content': 'Hi! Im interested in your bag. Im offering $50. Let '\n                              'me know if you are interested. Thanks!',\n                   'sender_name': 'User 1',\n                   'timestamp_ms': 1675549022673}],\n     'participants': [{'name': 'User 1'}, {'name': 'User 2'}],\n     'thread_path': 'inbox/User 1 and User 2 chat',\n     'title': 'User 1 and User 2 chat'}\n\nUsing JSONLoader​\n\nSuppose we are interested in extracting the values under the content field within the messages key of the JSON data. This can easily be done through the JSONLoader as shown below.\n\nJSON file​\nloader = JSONLoader(\n    file_path='./example_data/facebook_chat.json',\n    jq_schema='.messages[].content',\n    text_content=False)\n\ndata = loader.load()\n\npprint(data)\n\n    [Document(page_content='Bye!', metadata={'source': '/Users/avsolatorio/WBG/langchain/docs/modules/indexes/document_loaders/examples/example_data/facebook_chat.json', 'seq_num': 1}),\n     Document(page_content='Oh no worries! Bye', metadata={'source': '/Users/avsolatorio/WBG/langchain/docs/modules/indexes/document_loaders/examples/example_data/facebook_chat.json', 'seq_num': 2}),\n     Document(page_content='No Im sorry it was my mistake, the blue one is not for sale', metadata={'source': '/Users/avsolatorio/WBG/langchain/docs/modules/indexes/document_loaders/examples/example_data/facebook_chat.json', 'seq_num': 3}),\n     Document(page_content='I thought you were selling the blue one!', metadata={'source': '/Users/avsolatorio/WBG/langchain/docs/modules/indexes/document_loaders/examples/example_data/facebook_chat.json', 'seq_num': 4}),\n     Document(page_content='Im not interested in this bag. Im interested in the blue one!', metadata={'source': '/Users/avsolatorio/WBG/langchain/docs/modules/indexes/document_loaders/examples/example_data/facebook_chat.json', 'seq_num': 5}),\n     Document(page_content='Here is $129', metadata={'source': '/Users/avsolatorio/WBG/langchain/docs/modules/indexes/document_loaders/examples/example_data/facebook_chat.json', 'seq_num': 6}),\n     Document(page_content='', metadata={'source': '/Users/avsolatorio/WBG/langchain/docs/modules/indexes/document_loaders/examples/example_data/facebook_chat.json', 'seq_num': 7}),\n     Document(page_content='Online is at least $100', metadata={'source': '/Users/avsolatorio/WBG/langchain/docs/modules/indexes/document_loaders/examples/example_data/facebook_chat.json', 'seq_num': 8}),\n     Document(page_content='How much do you want?', metadata={'source': '/Users/avsolatorio/WBG/langchain/docs/modules/indexes/document_loaders/examples/example_data/facebook_chat.json', 'seq_num': 9}),\n     Document(page_content='Goodmorning! $50 is too low.', metadata={'source': '/Users/avsolatorio/WBG/langchain/docs/modules/indexes/document_loaders/examples/example_data/facebook_chat.json', 'seq_num': 10}),\n     Document(page_content='Hi! Im interested in your bag. Im offering $50. Let me know if you are interested. Thanks!', metadata={'source': '/Users/avsolatorio/WBG/langchain/docs/modules/indexes/document_loaders/examples/example_data/facebook_chat.json', 'seq_num': 11})]\n\nJSON Lines file​\n\nIf you want to load documents from a JSON Lines file, you pass json_lines=True and specify jq_schema to extract page_content from a single JSON object.\n\nfile_path = './example_data/facebook_chat_messages.jsonl'\npprint(Path(file_path).read_text())\n\n    ('{\"sender_name\": \"User 2\", \"timestamp_ms\": 1675597571851, \"content\": \"Bye!\"}\\n'\n     '{\"sender_name\": \"User 1\", \"timestamp_ms\": 1675597435669, \"content\": \"Oh no '\n     'worries! Bye\"}\\n'\n     '{\"sender_name\": \"User 2\", \"timestamp_ms\": 1675596277579, \"content\": \"No Im '\n     'sorry it was my mistake, the blue one is not for sale\"}\\n')\n\nloader = JSONLoader(\n    file_path='./example_data/facebook_chat_messages.jsonl',\n    jq_schema='.content',\n    text_content=False,\n    json_lines=True)\n\ndata = loader.load()\n\npprint(data)\n\n    [Document(page_content='Bye!', metadata={'source': 'langchain/docs/modules/indexes/document_loaders/examples/example_data/facebook_chat_messages.jsonl', 'seq_num': 1}),\n     Document(page_content='Oh no worries! Bye', metadata={'source': 'langchain/docs/modules/indexes/document_loaders/examples/example_data/facebook_chat_messages.jsonl', 'seq_num': 2}),\n     Document(page_content='No Im sorry it was my mistake, the blue one is not for sale', metadata={'source': 'langchain/docs/modules/indexes/document_loaders/examples/example_data/facebook_chat_messages.jsonl', 'seq_num': 3})]\n\n\nAnother option is set jq_schema='.' and provide content_key:\n\nloader = JSONLoader(\n    file_path='./example_data/facebook_chat_messages.jsonl',\n    jq_schema='.',\n    content_key='sender_name',\n    json_lines=True)\n\ndata = loader.load()\n\npprint(data)\n\n    [Document(page_content='User 2', metadata={'source': 'langchain/docs/modules/indexes/document_loaders/examples/example_data/facebook_chat_messages.jsonl', 'seq_num': 1}),\n     Document(page_content='User 1', metadata={'source': 'langchain/docs/modules/indexes/document_loaders/examples/example_data/facebook_chat_messages.jsonl', 'seq_num': 2}),\n     Document(page_content='User 2', metadata={'source': 'langchain/docs/modules/indexes/document_loaders/examples/example_data/facebook_chat_messages.jsonl', 'seq_num': 3})]\n\nExtracting metadata​\n\nGenerally, we want to include metadata available in the JSON file into the documents that we create from the content.\n\nThe following demonstrates how metadata can be extracted using the JSONLoader.\n\nThere are some key changes to be noted. In the previous example where we didn't collect the metadata, we managed to directly specify in the schema where the value for the page_content can be extracted from.\n\n.messages[].content\n\n\nIn the current example, we have to tell the loader to iterate over the records in the messages field. The jq_schema then has to be:\n\n.messages[]\n\n\nThis allows us to pass the records (dict) into the metadata_func that has to be implemented. The metadata_func is responsible for identifying which pieces of information in the record should be included in the metadata stored in the final Document object.\n\nAdditionally, we now have to explicitly specify in the loader, via the content_key argument, the key from the record where the value for the page_content needs to be extracted from.\n\n# Define the metadata extraction function.\ndef metadata_func(record: dict, metadata: dict) -> dict:\n\n    metadata[\"sender_name\"] = record.get(\"sender_name\")\n    metadata[\"timestamp_ms\"] = record.get(\"timestamp_ms\")\n\n    return metadata\n\n\nloader = JSONLoader(\n    file_path='./example_data/facebook_chat.json',\n    jq_schema='.messages[]',\n    content_key=\"content\",\n    metadata_func=metadata_func\n)\n\ndata = loader.load()\n\npprint(data)\n\n    [Document(page_content='Bye!', metadata={'source': '/Users/avsolatorio/WBG/langchain/docs/modules/indexes/document_loaders/examples/example_data/facebook_chat.json', 'seq_num': 1, 'sender_name': 'User 2', 'timestamp_ms': 1675597571851}),\n     Document(page_content='Oh no worries! Bye', metadata={'source': '/Users/avsolatorio/WBG/langchain/docs/modules/indexes/document_loaders/examples/example_data/facebook_chat.json', 'seq_num': 2, 'sender_name': 'User 1', 'timestamp_ms': 1675597435669}),\n     Document(page_content='No Im sorry it was my mistake, the blue one is not for sale', metadata={'source': '/Users/avsolatorio/WBG/langchain/docs/modules/indexes/document_loaders/examples/example_data/facebook_chat.json', 'seq_num': 3, 'sender_name': 'User 2', 'timestamp_ms': 1675596277579}),\n     Document(page_content='I thought you were selling the blue one!', metadata={'source': '/Users/avsolatorio/WBG/langchain/docs/modules/indexes/document_loaders/examples/example_data/facebook_chat.json', 'seq_num': 4, 'sender_name': 'User 1', 'timestamp_ms': 1675595140251}),\n     Document(page_content='Im not interested in this bag. Im interested in the blue one!', metadata={'source': '/Users/avsolatorio/WBG/langchain/docs/modules/indexes/document_loaders/examples/example_data/facebook_chat.json', 'seq_num': 5, 'sender_name': 'User 1', 'timestamp_ms': 1675595109305}),\n     Document(page_content='Here is $129', metadata={'source': '/Users/avsolatorio/WBG/langchain/docs/modules/indexes/document_loaders/examples/example_data/facebook_chat.json', 'seq_num': 6, 'sender_name': 'User 2', 'timestamp_ms': 1675595068468}),\n     Document(page_content='', metadata={'source': '/Users/avsolatorio/WBG/langchain/docs/modules/indexes/document_loaders/examples/example_data/facebook_chat.json', 'seq_num': 7, 'sender_name': 'User 2', 'timestamp_ms': 1675595060730}),\n     Document(page_content='Online is at least $100', metadata={'source': '/Users/avsolatorio/WBG/langchain/docs/modules/indexes/document_loaders/examples/example_data/facebook_chat.json', 'seq_num': 8, 'sender_name': 'User 2', 'timestamp_ms': 1675595045152}),\n     Document(page_content='How much do you want?', metadata={'source': '/Users/avsolatorio/WBG/langchain/docs/modules/indexes/document_loaders/examples/example_data/facebook_chat.json', 'seq_num': 9, 'sender_name': 'User 1', 'timestamp_ms': 1675594799696}),\n     Document(page_content='Goodmorning! $50 is too low.', metadata={'source': '/Users/avsolatorio/WBG/langchain/docs/modules/indexes/document_loaders/examples/example_data/facebook_chat.json', 'seq_num': 10, 'sender_name': 'User 2', 'timestamp_ms': 1675577876645}),\n     Document(page_content='Hi! Im interested in your bag. Im offering $50. Let me know if you are interested. Thanks!', metadata={'source': '/Users/avsolatorio/WBG/langchain/docs/modules/indexes/document_loaders/examples/example_data/facebook_chat.json', 'seq_num': 11, 'sender_name': 'User 1', 'timestamp_ms': 1675549022673})]\n\n\nNow, you will see that the documents contain the metadata associated with the content we extracted.\n\nThe metadata_func​\n\nAs shown above, the metadata_func accepts the default metadata generated by the JSONLoader. This allows full control to the user with respect to how the metadata is formatted.\n\nFor example, the default metadata contains the source and the seq_num keys. However, it is possible that the JSON data contain these keys as well. The user can then exploit the metadata_func to rename the default keys and use the ones from the JSON data.\n\nThe example below shows how we can modify the source to only contain information of the file source relative to the langchain directory.\n\n# Define the metadata extraction function.\ndef metadata_func(record: dict, metadata: dict) -> dict:\n\n    metadata[\"sender_name\"] = record.get(\"sender_name\")\n    metadata[\"timestamp_ms\"] = record.get(\"timestamp_ms\")\n\n    if \"source\" in metadata:\n        source = metadata[\"source\"].split(\"/\")\n        source = source[source.index(\"langchain\"):]\n        metadata[\"source\"] = \"/\".join(source)\n\n    return metadata\n\n\nloader = JSONLoader(\n    file_path='./example_data/facebook_chat.json',\n    jq_schema='.messages[]',\n    content_key=\"content\",\n    metadata_func=metadata_func\n)\n\ndata = loader.load()\n\npprint(data)\n\n    [Document(page_content='Bye!', metadata={'source': 'langchain/docs/modules/indexes/document_loaders/examples/example_data/facebook_chat.json', 'seq_num': 1, 'sender_name': 'User 2', 'timestamp_ms': 1675597571851}),\n     Document(page_content='Oh no worries! Bye', metadata={'source': 'langchain/docs/modules/indexes/document_loaders/examples/example_data/facebook_chat.json', 'seq_num': 2, 'sender_name': 'User 1', 'timestamp_ms': 1675597435669}),\n     Document(page_content='No Im sorry it was my mistake, the blue one is not for sale', metadata={'source': 'langchain/docs/modules/indexes/document_loaders/examples/example_data/facebook_chat.json', 'seq_num': 3, 'sender_name': 'User 2', 'timestamp_ms': 1675596277579}),\n     Document(page_content='I thought you were selling the blue one!', metadata={'source': 'langchain/docs/modules/indexes/document_loaders/examples/example_data/facebook_chat.json', 'seq_num': 4, 'sender_name': 'User 1', 'timestamp_ms': 1675595140251}),\n     Document(page_content='Im not interested in this bag. Im interested in the blue one!', metadata={'source': 'langchain/docs/modules/indexes/document_loaders/examples/example_data/facebook_chat.json', 'seq_num': 5, 'sender_name': 'User 1', 'timestamp_ms': 1675595109305}),\n     Document(page_content='Here is $129', metadata={'source': 'langchain/docs/modules/indexes/document_loaders/examples/example_data/facebook_chat.json', 'seq_num': 6, 'sender_name': 'User 2', 'timestamp_ms': 1675595068468}),\n     Document(page_content='', metadata={'source': 'langchain/docs/modules/indexes/document_loaders/examples/example_data/facebook_chat.json', 'seq_num': 7, 'sender_name': 'User 2', 'timestamp_ms': 1675595060730}),\n     Document(page_content='Online is at least $100', metadata={'source': 'langchain/docs/modules/indexes/document_loaders/examples/example_data/facebook_chat.json', 'seq_num': 8, 'sender_name': 'User 2', 'timestamp_ms': 1675595045152}),\n     Document(page_content='How much do you want?', metadata={'source': 'langchain/docs/modules/indexes/document_loaders/examples/example_data/facebook_chat.json', 'seq_num': 9, 'sender_name': 'User 1', 'timestamp_ms': 1675594799696}),\n     Document(page_content='Goodmorning! $50 is too low.', metadata={'source': 'langchain/docs/modules/indexes/document_loaders/examples/example_data/facebook_chat.json', 'seq_num': 10, 'sender_name': 'User 2', 'timestamp_ms': 1675577876645}),\n     Document(page_content='Hi! Im interested in your bag. Im offering $50. Let me know if you are interested. Thanks!', metadata={'source': 'langchain/docs/modules/indexes/document_loaders/examples/example_data/facebook_chat.json', 'seq_num': 11, 'sender_name': 'User 1', 'timestamp_ms': 1675549022673})]\n\nCommon JSON structures with jq schema​\n\nThe list below provides a reference to the possible jq_schema the user can use to extract content from the JSON data depending on the structure.\n\nJSON        -> [{\"text\": ...}, {\"text\": ...}, {\"text\": ...}]\njq_schema   -> \".[].text\"\n\nJSON        -> {\"key\": [{\"text\": ...}, {\"text\": ...}, {\"text\": ...}]}\njq_schema   -> \".key[].text\"\n\nJSON        -> [\"...\", \"...\", \"...\"]\njq_schema   -> \".[]\"\n\nPrevious\nHTML\nNext\nMarkdown"
}