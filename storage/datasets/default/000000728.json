{
	"title": "Regex Match | ü¶úÔ∏èüîó Langchain",
	"url": "https://python.langchain.com/docs/guides/evaluation/string/regex_match",
	"html": "EvaluationString EvaluatorsRegex Match\nRegex Match\n\nTo evaluate chain or runnable string predictions against a custom regex, you can use the regex_match evaluator.\n\nfrom langchain.evaluation import RegexMatchStringEvaluator\n\nevaluator = RegexMatchStringEvaluator()\n\n\nAlternatively via the loader:\n\nfrom langchain.evaluation import load_evaluator\n\nevaluator = load_evaluator(\"regex_match\")\n\n# Check for the presence of a YYYY-MM-DD string.\nevaluator.evaluate_strings(\n    prediction=\"The delivery will be made on 2024-01-05\",\n    reference=\".*\\\\b\\\\d{4}-\\\\d{2}-\\\\d{2}\\\\b.*\",\n)\n\n    {'score': 1}\n\n# Check for the presence of a MM-DD-YYYY string.\nevaluator.evaluate_strings(\n    prediction=\"The delivery will be made on 2024-01-05\",\n    reference=\".*\\\\b\\\\d{2}-\\\\d{2}-\\\\d{4}\\\\b.*\",\n)\n\n    {'score': 0}\n\n# Check for the presence of a MM-DD-YYYY string.\nevaluator.evaluate_strings(\n    prediction=\"The delivery will be made on 01-05-2024\",\n    reference=\".*\\\\b\\\\d{2}-\\\\d{2}-\\\\d{4}\\\\b.*\",\n)\n\n    {'score': 1}\n\nMatch against multiple patterns‚Äã\n\nTo match against multiple patterns, use a regex union \"|\".\n\n# Check for the presence of a MM-DD-YYYY string or YYYY-MM-DD\nevaluator.evaluate_strings(\n    prediction=\"The delivery will be made on 01-05-2024\",\n    reference=\"|\".join(\n        [\".*\\\\b\\\\d{4}-\\\\d{2}-\\\\d{2}\\\\b.*\", \".*\\\\b\\\\d{2}-\\\\d{2}-\\\\d{4}\\\\b.*\"]\n    ),\n)\n\n    {'score': 1}\n\nConfigure the RegexMatchStringEvaluator‚Äã\n\nYou can specify any regex flags to use when matching.\n\nimport re\n\nevaluator = RegexMatchStringEvaluator(flags=re.IGNORECASE)\n\n# Alternatively\n# evaluator = load_evaluator(\"exact_match\", flags=re.IGNORECASE)\n\nevaluator.evaluate_strings(\n    prediction=\"I LOVE testing\",\n    reference=\"I love testing\",\n)\n\n    {'score': 1}\n\nPrevious\nEvaluating Structured Output: JSON Evaluators\nNext\nScoring Evaluator"
}