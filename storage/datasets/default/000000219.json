{
	"title": "Blockchain | ü¶úÔ∏èüîó Langchain",
	"url": "https://python.langchain.com/docs/integrations/document_loaders/blockchain",
	"html": "ComponentsDocument loadersBlockchain\nBlockchain\nOverview‚Äã\n\nThe intention of this notebook is to provide a means of testing functionality in the Langchain Document Loader for Blockchain.\n\nInitially this Loader supports:\n\nLoading NFTs as Documents from NFT Smart Contracts (ERC721 and ERC1155)\nEthereum Mainnnet, Ethereum Testnet, Polygon Mainnet, Polygon Testnet (default is eth-mainnet)\nAlchemy's getNFTsForCollection API\n\nIt can be extended if the community finds value in this loader. Specifically:\n\nAdditional APIs can be added (e.g. Tranction-related APIs)\n\nThis Document Loader Requires:\n\nA free Alchemy API Key\n\nThe output takes the following format:\n\npageContent= Individual NFT\nmetadata={'source': '0x1a92f7381b9f03921564a437210bb9396471050c', 'blockchain': 'eth-mainnet', 'tokenId': '0x15'})\nLoad NFTs into Document Loader‚Äã\n# get ALCHEMY_API_KEY from https://www.alchemy.com/\n\nalchemyApiKey = \"...\"\n\nOption 1: Ethereum Mainnet (default BlockchainType)‚Äã\nfrom langchain.document_loaders.blockchain import (\n    BlockchainDocumentLoader,\n    BlockchainType,\n)\n\ncontractAddress = \"0xbc4ca0eda7647a8ab7c2061c2e118a18a936f13d\"  # Bored Ape Yacht Club contract address\n\nblockchainType = BlockchainType.ETH_MAINNET  # default value, optional parameter\n\nblockchainLoader = BlockchainDocumentLoader(\n    contract_address=contractAddress, api_key=alchemyApiKey\n)\n\nnfts = blockchainLoader.load()\n\nnfts[:2]\n\nOption 2: Polygon Mainnet‚Äã\ncontractAddress = (\n    \"0x448676ffCd0aDf2D85C1f0565e8dde6924A9A7D9\"  # Polygon Mainnet contract address\n)\n\nblockchainType = BlockchainType.POLYGON_MAINNET\n\nblockchainLoader = BlockchainDocumentLoader(\n    contract_address=contractAddress,\n    blockchainType=blockchainType,\n    api_key=alchemyApiKey,\n)\n\nnfts = blockchainLoader.load()\n\nnfts[:2]\n\nPrevious\nBlackboard\nNext\nBrave Search"
}