{
	"title": "AssemblyAI Audio Transcripts | ü¶úÔ∏èüîó Langchain",
	"url": "https://python.langchain.com/docs/integrations/document_loaders/assemblyai",
	"html": "ComponentsDocument loadersAssemblyAI Audio Transcripts\nAssemblyAI Audio Transcripts\n\nThe AssemblyAIAudioTranscriptLoader allows to transcribe audio files with the AssemblyAI API and loads the transcribed text into documents.\n\nTo use it, you should have the assemblyai python package installed, and the environment variable ASSEMBLYAI_API_KEY set with your API key. Alternatively, the API key can also be passed as an argument.\n\nMore info about AssemblyAI:\n\nWebsite\nGet a Free API key\nAssemblyAI API Docs\nInstallation‚Äã\n\nFirst, you need to install the assemblyai python package.\n\nYou can find more info about it inside the assemblyai-python-sdk GitHub repo.\n\n#!pip install assemblyai\n\nExample‚Äã\n\nThe AssemblyAIAudioTranscriptLoader needs at least the file_path argument. Audio files can be specified as an URL or a local file path.\n\nfrom langchain.document_loaders import AssemblyAIAudioTranscriptLoader\n\naudio_file = \"https://storage.googleapis.com/aai-docs-samples/nbc.mp3\"\n# or a local file path: audio_file = \"./nbc.mp3\"\n\nloader = AssemblyAIAudioTranscriptLoader(file_path=audio_file)\n\ndocs = loader.load()\n\n\nNote: Calling loader.load() blocks until the transcription is finished.\n\nThe transcribed text is available in the page_content:\n\ndocs[0].page_content\n\n\"Load time, a new president and new congressional makeup. Same old ...\"\n\n\nThe metadata contains the full JSON response with more meta information:\n\ndocs[0].metadata\n\n{'language_code': <LanguageCode.en_us: 'en_us'>,\n 'audio_url': 'https://storage.googleapis.com/aai-docs-samples/nbc.mp3',\n 'punctuate': True,\n 'format_text': True,\n  ...\n}\n\nTranscript Formats‚Äã\n\nYou can specify the transcript_format argument for different formats.\n\nDepending on the format, one or more documents are returned. These are the different TranscriptFormat options:\n\nTEXT: One document with the transcription text\nSENTENCES: Multiple documents, splits the transcription by each sentence\nPARAGRAPHS: Multiple documents, splits the transcription by each paragraph\nSUBTITLES_SRT: One document with the transcript exported in SRT subtitles format\nSUBTITLES_VTT: One document with the transcript exported in VTT subtitles format\nfrom langchain.document_loaders.assemblyai import TranscriptFormat\n\nloader = AssemblyAIAudioTranscriptLoader(\n    file_path=\"./your_file.mp3\",\n    transcript_format=TranscriptFormat.SENTENCES,\n)\n\ndocs = loader.load()\n\nTranscription Config‚Äã\n\nYou can also specify the config argument to use different audio intelligence models.\n\nVisit the AssemblyAI API Documentation to get an overview of all available models!\n\nimport assemblyai as aai\n\nconfig = aai.TranscriptionConfig(\n    speaker_labels=True, auto_chapters=True, entity_detection=True\n)\n\nloader = AssemblyAIAudioTranscriptLoader(file_path=\"./your_file.mp3\", config=config)\n\nPass the API Key as argument‚Äã\n\nNext to setting the API key as environment variable ASSEMBLYAI_API_KEY, it is also possible to pass it as argument.\n\nloader = AssemblyAIAudioTranscriptLoader(\n    file_path=\"./your_file.mp3\", api_key=\"YOUR_KEY\"\n)\n\nPrevious\nArxiv\nNext\nAsync Chromium"
}