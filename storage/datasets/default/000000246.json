{
	"title": "GitHub | ü¶úÔ∏èüîó Langchain",
	"url": "https://python.langchain.com/docs/integrations/document_loaders/github",
	"html": "ComponentsDocument loadersGitHub\nGitHub\n\nThis notebooks shows how you can load issues and pull requests (PRs) for a given repository on GitHub. We will use the LangChain Python repository as an example.\n\nSetup access token‚Äã\n\nTo access the GitHub API, you need a personal access token - you can set up yours here: https://github.com/settings/tokens?type=beta. You can either set this token as the environment variable GITHUB_PERSONAL_ACCESS_TOKEN and it will be automatically pulled in, or you can pass it in directly at initialization as the access_token named parameter.\n\n# If you haven't set your access token as an environment variable, pass it in here.\nfrom getpass import getpass\n\nACCESS_TOKEN = getpass()\n\nLoad Issues and PRs‚Äã\nfrom langchain.document_loaders import GitHubIssuesLoader\n\nloader = GitHubIssuesLoader(\n    repo=\"langchain-ai/langchain\",\n    access_token=ACCESS_TOKEN,  # delete/comment out this argument if you've set the access token as an env var.\n    creator=\"UmerHA\",\n)\n\n\nLet's load all issues and PRs created by \"UmerHA\".\n\nHere's a list of all filters you can use:\n\ninclude_prs\nmilestone\nstate\nassignee\ncreator\nmentioned\nlabels\nsort\ndirection\nsince\n\nFor more info, see https://docs.github.com/en/rest/issues/issues?apiVersion=2022-11-28#list-repository-issues.\n\ndocs = loader.load()\n\nprint(docs[0].page_content)\nprint(docs[0].metadata)\n\n    # Creates GitHubLoader (#5257)\n    \n    GitHubLoader is a DocumentLoader that loads issues and PRs from GitHub.\n    \n    Fixes #5257\n    \n    Community members can review the PR once tests pass. Tag maintainers/contributors who might be interested:\n    DataLoaders\n    - @eyurtsev\n    \n    {'url': 'https://github.com/langchain-ai/langchain/pull/5408', 'title': 'DocumentLoader for GitHub', 'creator': 'UmerHA', 'created_at': '2023-05-29T14:50:53Z', 'comments': 0, 'state': 'open', 'labels': ['enhancement', 'lgtm', 'doc loader'], 'assignee': None, 'milestone': None, 'locked': False, 'number': 5408, 'is_pull_request': True}\n\nOnly load issues‚Äã\n\nBy default, the GitHub API returns considers pull requests to also be issues. To only get 'pure' issues (i.e., no pull requests), use include_prs=False\n\nloader = GitHubIssuesLoader(\n    repo=\"langchain-ai/langchain\",\n    access_token=ACCESS_TOKEN,  # delete/comment out this argument if you've set the access token as an env var.\n    creator=\"UmerHA\",\n    include_prs=False,\n)\ndocs = loader.load()\n\nprint(docs[0].page_content)\nprint(docs[0].metadata)\n\n    ### System Info\n    \n    LangChain version = 0.0.167\n    Python version = 3.11.0\n    System = Windows 11 (using Jupyter)\n    \n    ### Who can help?\n    \n    - @hwchase17\n    - @agola11\n    - @UmerHA (I have a fix ready, will submit a PR)\n    \n    ### Information\n    \n    - [ ] The official example notebooks/scripts\n    - [X] My own modified scripts\n    \n    ### Related Components\n    \n    - [X] LLMs/Chat Models\n    - [ ] Embedding Models\n    - [X] Prompts / Prompt Templates / Prompt Selectors\n    - [ ] Output Parsers\n    - [ ] Document Loaders\n    - [ ] Vector Stores / Retrievers\n    - [ ] Memory\n    - [ ] Agents / Agent Executors\n    - [ ] Tools / Toolkits\n    - [ ] Chains\n    - [ ] Callbacks/Tracing\n    - [ ] Async\n    \n    ### Reproduction\n    \n    ```\n    import os\n    os.environ[\"OPENAI_API_KEY\"] = \"...\"\n    \n    from langchain.chains import LLMChain\n    from langchain.chat_models import ChatOpenAI\n    from langchain.prompts import PromptTemplate\n    from langchain.prompts.chat import ChatPromptTemplate\n    from langchain.schema import messages_from_dict\n    \n    role_strings = [\n        (\"system\", \"you are a bird expert\"), \n        (\"human\", \"which bird has a point beak?\")\n    ]\n    prompt = ChatPromptTemplate.from_role_strings(role_strings)\n    chain = LLMChain(llm=ChatOpenAI(), prompt=prompt)\n    chain.run({})\n    ```\n    \n    ### Expected behavior\n    \n    Chain should run\n    {'url': 'https://github.com/langchain-ai/langchain/issues/5027', 'title': \"ChatOpenAI models don't work with prompts created via ChatPromptTemplate.from_role_strings\", 'creator': 'UmerHA', 'created_at': '2023-05-20T10:39:18Z', 'comments': 1, 'state': 'open', 'labels': [], 'assignee': None, 'milestone': None, 'locked': False, 'number': 5027, 'is_pull_request': False}\n\nPrevious\nGitBook\nNext\nGoogle BigQuery"
}