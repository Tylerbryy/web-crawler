{
	"title": "elastic-query-generator | ü¶úÔ∏èüîó Langchain",
	"url": "https://python.langchain.com/docs/templates/elastic-query-generator",
	"html": "Templateselastic-query-generator\nelastic-query-generator\n\nThis template allows interacting with Elasticsearch analytics databases in natural language using LLMs.\n\nIt builds search queries via the Elasticsearch DSL API (filters and aggregations).\n\nEnvironment Setup‚Äã\n\nSet the OPENAI_API_KEY environment variable to access the OpenAI models.\n\nInstalling Elasticsearch‚Äã\n\nThere are a number of ways to run Elasticsearch. However, one recommended way is through Elastic Cloud.\n\nCreate a free trial account on Elastic Cloud.\n\nWith a deployment, update the connection string.\n\nPassword and connection (elasticsearch url) can be found on the deployment console.\n\nNote that the Elasticsearch client must have permissions for index listing, mapping description, and search queries.\n\nPopulating with data‚Äã\n\nIf you want to populate the DB with some example info, you can run python ingest.py.\n\nThis will create a customers index. In this package, we specify indexes to generate queries against, and we specify [\"customers\"]. This is specific to setting up your Elastic index.\n\nUsage‚Äã\n\nTo use this package, you should first have the LangChain CLI installed:\n\npip install -U langchain-cli\n\n\nTo create a new LangChain project and install this as the only package, you can do:\n\nlangchain app new my-app --package elastic-query-generator\n\n\nIf you want to add this to an existing project, you can just run:\n\nlangchain app add elastic-query-generator\n\n\nAnd add the following code to your server.py file:\n\nfrom elastic_query_generator.chain import chain as elastic_query_generator_chain\n\nadd_routes(app, elastic_query_generator_chain, path=\"/elastic-query-generator\")\n\n\n(Optional) Let's now configure LangSmith. LangSmith will help us trace, monitor and debug LangChain applications. LangSmith is currently in private beta, you can sign up here. If you don't have access, you can skip this section\n\nexport LANGCHAIN_TRACING_V2=true\nexport LANGCHAIN_API_KEY=<your-api-key>\nexport LANGCHAIN_PROJECT=<your-project>  # if not specified, defaults to \"default\"\n\n\nIf you are inside this directory, then you can spin up a LangServe instance directly by:\n\nlangchain serve\n\n\nThis will start the FastAPI app with a server is running locally at http://localhost:8000\n\nWe can see all templates at http://127.0.0.1:8000/docs We can access the playground at http://127.0.0.1:8000/elastic-query-generator/playground\n\nWe can access the template from code with:\n\nfrom langserve.client import RemoteRunnable\n\nrunnable = RemoteRunnable(\"http://localhost:8000/elastic-query-generator\")\n\nPrevious\ncsv-agent\nNext\nextraction-anthropic-functions"
}