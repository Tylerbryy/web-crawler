{
	"title": "sql-llamacpp | ü¶úÔ∏èüîó Langchain",
	"url": "https://python.langchain.com/docs/templates/sql-llamacpp",
	"html": "Templatessql-llamacpp\nsql-llamacpp\n\nThis template enables a user to interact with a SQL database using natural language.\n\nIt uses Mistral-7b via llama.cpp to run inference locally on a Mac laptop.\n\nEnvironment Setup‚Äã\n\nTo set up the environment, use the following steps:\n\nwget https://github.com/conda-forge/miniforge/releases/latest/download/Miniforge3-MacOSX-arm64.sh\nbash Miniforge3-MacOSX-arm64.sh\nconda create -n llama python=3.9.16\nconda activate /Users/rlm/miniforge3/envs/llama\nCMAKE_ARGS=\"-DLLAMA_METAL=on\" FORCE_CMAKE=1 pip install -U llama-cpp-python --no-cache-dir\n\nUsage‚Äã\n\nTo use this package, you should first have the LangChain CLI installed:\n\npip install -U langchain-cli\n\n\nTo create a new LangChain project and install this as the only package, you can do:\n\nlangchain app new my-app --package sql-llamacpp\n\n\nIf you want to add this to an existing project, you can just run:\n\nlangchain app add sql-llamacpp\n\n\nAnd add the following code to your server.py file:\n\nfrom sql_llamacpp import chain as sql_llamacpp_chain\n\nadd_routes(app, sql_llamacpp_chain, path=\"/sql-llamacpp\")\n\n\nThe package will download the Mistral-7b model from here. You can select other files and specify their download path (browse here).\n\nThis package includes an example DB of 2023 NBA rosters. You can see instructions to build this DB here.\n\n(Optional) Configure LangSmith for tracing, monitoring and debugging LangChain applications. LangSmith is currently in private beta, you can sign up here. If you don't have access, you can skip this section\n\nexport LANGCHAIN_TRACING_V2=true\nexport LANGCHAIN_API_KEY=<your-api-key>\nexport LANGCHAIN_PROJECT=<your-project>  # if not specified, defaults to \"default\"\n\n\nIf you are inside this directory, then you can spin up a LangServe instance directly by:\n\nlangchain serve\n\n\nThis will start the FastAPI app with a server running locally at http://localhost:8000\n\nYou can see all templates at http://127.0.0.1:8000/docs You can access the playground at http://127.0.0.1:8000/sql-llamacpp/playground\n\nYou can access the template from code with:\n\nfrom langserve.client import RemoteRunnable\n\nrunnable = RemoteRunnable(\"http://localhost:8000/sql-llamacpp\")\n\nPrevious\nsql-llama2\nNext\nsql-ollama"
}