{
	"title": "sql-ollama | ü¶úÔ∏èüîó Langchain",
	"url": "https://python.langchain.com/docs/templates/sql-ollama",
	"html": "Templatessql-ollama\nsql-ollama\n\nThis template enables a user to interact with a SQL database using natural language.\n\nIt uses Zephyr-7b via Ollama to run inference locally on a Mac laptop.\n\nEnvironment Setup‚Äã\n\nBefore using this template, you need to set up Ollama and SQL database.\n\nFollow instructions here to download Ollama.\n\nDownload your LLM of interest:\n\nThis package uses zephyr: ollama pull zephyr\nYou can choose from many LLMs here\n\nThis package includes an example DB of 2023 NBA rosters. You can see instructions to build this DB here.\n\nUsage‚Äã\n\nTo use this package, you should first have the LangChain CLI installed:\n\npip install -U langchain-cli\n\n\nTo create a new LangChain project and install this as the only package, you can do:\n\nlangchain app new my-app --package sql-ollama\n\n\nIf you want to add this to an existing project, you can just run:\n\nlangchain app add sql-ollama\n\n\nAnd add the following code to your server.py file:\n\nfrom sql_ollama import chain as sql_ollama_chain\n\nadd_routes(app, sql_ollama_chain, path=\"/sql-ollama\")\n\n\n(Optional) Let's now configure LangSmith. LangSmith will help us trace, monitor and debug LangChain applications. LangSmith is currently in private beta, you can sign up here. If you don't have access, you can skip this section\n\nexport LANGCHAIN_TRACING_V2=true\nexport LANGCHAIN_API_KEY=<your-api-key>\nexport LANGCHAIN_PROJECT=<your-project>  # if not specified, defaults to \"default\"\n\n\nIf you are inside this directory, then you can spin up a LangServe instance directly by:\n\nlangchain serve\n\n\nThis will start the FastAPI app with a server is running locally at http://localhost:8000\n\nWe can see all templates at http://127.0.0.1:8000/docs We can access the playground at http://127.0.0.1:8000/sql-ollama/playground\n\nWe can access the template from code with:\n\nfrom langserve.client import RemoteRunnable\n\nrunnable = RemoteRunnable(\"http://localhost:8000/sql-ollama\")\n\nPrevious\nsql-llamacpp\nNext\nsql-pgvector"
}