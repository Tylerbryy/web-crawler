{
	"title": "Azure Cognitive Search | ü¶úÔ∏èüîó Langchain",
	"url": "https://python.langchain.com/docs/integrations/vectorstores/azuresearch",
	"html": "ComponentsVector storesAzure Cognitive Search\nAzure Cognitive Search\n\nAzure Cognitive Search (formerly known as Azure Search) is a cloud search service that gives developers infrastructure, APIs, and tools for building a rich search experience over private, heterogeneous content in web, mobile, and enterprise applications.\n\nVector search is currently in public preview. It's available through the Azure portal, preview REST API and beta client libraries. More info Beta client libraries are subject to potential breaking changes, please be sure to use the SDK package version identified below. azure-search-documents==11.4.0b8\n\nInstall Azure Cognitive Search SDK\npip install azure-search-documents==11.4.0b8\npip install azure-identity\n\nImport required libraries‚Äã\nimport os\n\nfrom langchain.embeddings import OpenAIEmbeddings\nfrom langchain.vectorstores.azuresearch import AzureSearch\n\nConfigure OpenAI settings‚Äã\n\nConfigure the OpenAI settings to use Azure OpenAI or OpenAI\n\nos.environ[\"OPENAI_API_TYPE\"] = \"azure\"\nos.environ[\"OPENAI_API_BASE\"] = \"YOUR_OPENAI_ENDPOINT\"\nos.environ[\"OPENAI_API_KEY\"] = \"YOUR_OPENAI_API_KEY\"\nos.environ[\"OPENAI_API_VERSION\"] = \"2023-05-15\"\nmodel: str = \"text-embedding-ada-002\"\n\nConfigure vector store settings‚Äã\n\nSet up the vector store settings using environment variables:\n\nvector_store_address: str = \"YOUR_AZURE_SEARCH_ENDPOINT\"\nvector_store_password: str = \"YOUR_AZURE_SEARCH_ADMIN_KEY\"\n\nCreate embeddings and vector store instances‚Äã\n\nCreate instances of the OpenAIEmbeddings and AzureSearch classes:\n\nembeddings: OpenAIEmbeddings = OpenAIEmbeddings(deployment=model, chunk_size=1)\nindex_name: str = \"langchain-vector-demo\"\nvector_store: AzureSearch = AzureSearch(\n    azure_search_endpoint=vector_store_address,\n    azure_search_key=vector_store_password,\n    index_name=index_name,\n    embedding_function=embeddings.embed_query,\n)\n\nInsert text and embeddings into vector store‚Äã\n\nAdd texts and metadata from the JSON data to the vector store:\n\nfrom langchain.document_loaders import TextLoader\nfrom langchain.text_splitter import CharacterTextSplitter\n\nloader = TextLoader(\"../../modules/state_of_the_union.txt\", encoding=\"utf-8\")\n\ndocuments = loader.load()\ntext_splitter = CharacterTextSplitter(chunk_size=1000, chunk_overlap=0)\ndocs = text_splitter.split_documents(documents)\n\nvector_store.add_documents(documents=docs)\n\nPerform a vector similarity search‚Äã\n\nExecute a pure vector similarity search using the similarity_search() method:\n\n# Perform a similarity search\ndocs = vector_store.similarity_search(\n    query=\"What did the president say about Ketanji Brown Jackson\",\n    k=3,\n    search_type=\"similarity\",\n)\nprint(docs[0].page_content)\n\n    Tonight. I call on the Senate to: Pass the Freedom to Vote Act. Pass the John Lewis Voting Rights Act. And while you‚Äôre at it, pass the Disclose Act so Americans can know who is funding our elections. \n    \n    Tonight, I‚Äôd like to honor someone who has dedicated his life to serve this country: Justice Stephen Breyer‚Äîan Army veteran, Constitutional scholar, and retiring Justice of the United States Supreme Court. Justice Breyer, thank you for your service. \n    \n    One of the most serious constitutional responsibilities a President has is nominating someone to serve on the United States Supreme Court. \n    \n    And I did that 4 days ago, when I nominated Circuit Court of Appeals Judge Ketanji Brown Jackson. One of our nation‚Äôs top legal minds, who will continue Justice Breyer‚Äôs legacy of excellence.\n\nPerform a vector similarity search with relevance scores‚Äã\n\nExecute a pure vector similarity search using the similarity_search_with_relevance_scores() method:\n\ndocs_and_scores = vector_store.similarity_search_with_relevance_scores(\n    query=\"What did the president say about Ketanji Brown Jackson\",\n    k=4,\n    score_threshold=0.80,\n)\nfrom pprint import pprint\n\npprint(docs_and_scores)\n\n    [(Document(page_content='Tonight. I call on the Senate to: Pass the Freedom to Vote Act. Pass the John Lewis Voting Rights Act. And while you‚Äôre at it, pass the Disclose Act so Americans can know who is funding our elections. \\n\\nTonight, I‚Äôd like to honor someone who has dedicated his life to serve this country: Justice Stephen Breyer‚Äîan Army veteran, Constitutional scholar, and retiring Justice of the United States Supreme Court. Justice Breyer, thank you for your service. \\n\\nOne of the most serious constitutional responsibilities a President has is nominating someone to serve on the United States Supreme Court. \\n\\nAnd I did that 4 days ago, when I nominated Circuit Court of Appeals Judge Ketanji Brown Jackson. One of our nation‚Äôs top legal minds, who will continue Justice Breyer‚Äôs legacy of excellence.', metadata={'source': 'C:\\\\repos\\\\langchain-fruocco-acs\\\\langchain\\\\docs\\\\extras\\\\modules\\\\state_of_the_union.txt'}),\n      0.8441472),\n     (Document(page_content='Tonight. I call on the Senate to: Pass the Freedom to Vote Act. Pass the John Lewis Voting Rights Act. And while you‚Äôre at it, pass the Disclose Act so Americans can know who is funding our elections. \\n\\nTonight, I‚Äôd like to honor someone who has dedicated his life to serve this country: Justice Stephen Breyer‚Äîan Army veteran, Constitutional scholar, and retiring Justice of the United States Supreme Court. Justice Breyer, thank you for your service. \\n\\nOne of the most serious constitutional responsibilities a President has is nominating someone to serve on the United States Supreme Court. \\n\\nAnd I did that 4 days ago, when I nominated Circuit Court of Appeals Judge Ketanji Brown Jackson. One of our nation‚Äôs top legal minds, who will continue Justice Breyer‚Äôs legacy of excellence.', metadata={'source': 'C:\\\\repos\\\\langchain-fruocco-acs\\\\langchain\\\\docs\\\\extras\\\\modules\\\\state_of_the_union.txt'}),\n      0.8441472),\n     (Document(page_content='A former top litigator in private practice. A former federal public defender. And from a family of public school educators and police officers. A consensus builder. Since she‚Äôs been nominated, she‚Äôs received a broad range of support‚Äîfrom the Fraternal Order of Police to former judges appointed by Democrats and Republicans. \\n\\nAnd if we are to advance liberty and justice, we need to secure the Border and fix the immigration system. \\n\\nWe can do both. At our border, we‚Äôve installed new technology like cutting-edge scanners to better detect drug smuggling.  \\n\\nWe‚Äôve set up joint patrols with Mexico and Guatemala to catch more human traffickers.  \\n\\nWe‚Äôre putting in place dedicated immigration judges so families fleeing persecution and violence can have their cases heard faster. \\n\\nWe‚Äôre securing commitments and supporting partners in South and Central America to host more refugees and secure their own borders.', metadata={'source': 'C:\\\\repos\\\\langchain-fruocco-acs\\\\langchain\\\\docs\\\\extras\\\\modules\\\\state_of_the_union.txt'}),\n      0.82153815),\n     (Document(page_content='A former top litigator in private practice. A former federal public defender. And from a family of public school educators and police officers. A consensus builder. Since she‚Äôs been nominated, she‚Äôs received a broad range of support‚Äîfrom the Fraternal Order of Police to former judges appointed by Democrats and Republicans. \\n\\nAnd if we are to advance liberty and justice, we need to secure the Border and fix the immigration system. \\n\\nWe can do both. At our border, we‚Äôve installed new technology like cutting-edge scanners to better detect drug smuggling.  \\n\\nWe‚Äôve set up joint patrols with Mexico and Guatemala to catch more human traffickers.  \\n\\nWe‚Äôre putting in place dedicated immigration judges so families fleeing persecution and violence can have their cases heard faster. \\n\\nWe‚Äôre securing commitments and supporting partners in South and Central America to host more refugees and secure their own borders.', metadata={'source': 'C:\\\\repos\\\\langchain-fruocco-acs\\\\langchain\\\\docs\\\\extras\\\\modules\\\\state_of_the_union.txt'}),\n      0.82153815)]\n\nPerform a Hybrid Search‚Äã\n\nExecute hybrid search using the search_type or hybrid_search() method:\n\n# Perform a hybrid search\ndocs = vector_store.similarity_search(\n    query=\"What did the president say about Ketanji Brown Jackson\",\n    k=3,\n    search_type=\"hybrid\",\n)\nprint(docs[0].page_content)\n\n    Tonight. I call on the Senate to: Pass the Freedom to Vote Act. Pass the John Lewis Voting Rights Act. And while you‚Äôre at it, pass the Disclose Act so Americans can know who is funding our elections. \n    \n    Tonight, I‚Äôd like to honor someone who has dedicated his life to serve this country: Justice Stephen Breyer‚Äîan Army veteran, Constitutional scholar, and retiring Justice of the United States Supreme Court. Justice Breyer, thank you for your service. \n    \n    One of the most serious constitutional responsibilities a President has is nominating someone to serve on the United States Supreme Court. \n    \n    And I did that 4 days ago, when I nominated Circuit Court of Appeals Judge Ketanji Brown Jackson. One of our nation‚Äôs top legal minds, who will continue Justice Breyer‚Äôs legacy of excellence.\n\n# Perform a hybrid search\ndocs = vector_store.hybrid_search(\n    query=\"What did the president say about Ketanji Brown Jackson\", k=3\n)\nprint(docs[0].page_content)\n\n    Tonight. I call on the Senate to: Pass the Freedom to Vote Act. Pass the John Lewis Voting Rights Act. And while you‚Äôre at it, pass the Disclose Act so Americans can know who is funding our elections. \n    \n    Tonight, I‚Äôd like to honor someone who has dedicated his life to serve this country: Justice Stephen Breyer‚Äîan Army veteran, Constitutional scholar, and retiring Justice of the United States Supreme Court. Justice Breyer, thank you for your service. \n    \n    One of the most serious constitutional responsibilities a President has is nominating someone to serve on the United States Supreme Court. \n    \n    And I did that 4 days ago, when I nominated Circuit Court of Appeals Judge Ketanji Brown Jackson. One of our nation‚Äôs top legal minds, who will continue Justice Breyer‚Äôs legacy of excellence.\n\nCreate a new index with custom filterable fields\nfrom azure.search.documents.indexes.models import (\n    ScoringProfile,\n    SearchableField,\n    SearchField,\n    SearchFieldDataType,\n    SimpleField,\n    TextWeights,\n)\n\nembeddings: OpenAIEmbeddings = OpenAIEmbeddings(deployment=model, chunk_size=1)\nembedding_function = embeddings.embed_query\n\nfields = [\n    SimpleField(\n        name=\"id\",\n        type=SearchFieldDataType.String,\n        key=True,\n        filterable=True,\n    ),\n    SearchableField(\n        name=\"content\",\n        type=SearchFieldDataType.String,\n        searchable=True,\n    ),\n    SearchField(\n        name=\"content_vector\",\n        type=SearchFieldDataType.Collection(SearchFieldDataType.Single),\n        searchable=True,\n        vector_search_dimensions=len(embedding_function(\"Text\")),\n        vector_search_configuration=\"default\",\n    ),\n    SearchableField(\n        name=\"metadata\",\n        type=SearchFieldDataType.String,\n        searchable=True,\n    ),\n    # Additional field to store the title\n    SearchableField(\n        name=\"title\",\n        type=SearchFieldDataType.String,\n        searchable=True,\n    ),\n    # Additional field for filtering on document source\n    SimpleField(\n        name=\"source\",\n        type=SearchFieldDataType.String,\n        filterable=True,\n    ),\n]\n\nindex_name: str = \"langchain-vector-demo-custom\"\n\nvector_store: AzureSearch = AzureSearch(\n    azure_search_endpoint=vector_store_address,\n    azure_search_key=vector_store_password,\n    index_name=index_name,\n    embedding_function=embedding_function,\n    fields=fields,\n)\n\nPerform a query with a custom filter\n# Data in the metadata dictionary with a corresponding field in the index will be added to the index\n# In this example, the metadata dictionary contains a title, a source and a random field\n# The title and the source will be added to the index as separate fields, but the random won't. (as it is not defined in the fields list)\n# The random field will be only stored in the metadata field\nvector_store.add_texts(\n    [\"Test 1\", \"Test 2\", \"Test 3\"],\n    [\n        {\"title\": \"Title 1\", \"source\": \"A\", \"random\": \"10290\"},\n        {\"title\": \"Title 2\", \"source\": \"A\", \"random\": \"48392\"},\n        {\"title\": \"Title 3\", \"source\": \"B\", \"random\": \"32893\"},\n    ],\n)\n\nres = vector_store.similarity_search(query=\"Test 3 source1\", k=3, search_type=\"hybrid\")\nres\n\n    [Document(page_content='Test 3', metadata={'title': 'Title 3', 'source': 'B', 'random': '32893'}),\n     Document(page_content='Test 1', metadata={'title': 'Title 1', 'source': 'A', 'random': '10290'}),\n     Document(page_content='Test 2', metadata={'title': 'Title 2', 'source': 'A', 'random': '48392'})]\n\nres = vector_store.similarity_search(\n    query=\"Test 3 source1\", k=3, search_type=\"hybrid\", filters=\"source eq 'A'\"\n)\nres\n\n    [Document(page_content='Test 1', metadata={'title': 'Title 1', 'source': 'A', 'random': '10290'}),\n     Document(page_content='Test 2', metadata={'title': 'Title 2', 'source': 'A', 'random': '48392'})]\n\nCreate a new index with a Scoring Profile\nfrom azure.search.documents.indexes.models import (\n    FreshnessScoringFunction,\n    FreshnessScoringParameters,\n    ScoringProfile,\n    SearchableField,\n    SearchField,\n    SearchFieldDataType,\n    SimpleField,\n    TextWeights,\n)\n\nembeddings: OpenAIEmbeddings = OpenAIEmbeddings(deployment=model, chunk_size=1)\nembedding_function = embeddings.embed_query\n\nfields = [\n    SimpleField(\n        name=\"id\",\n        type=SearchFieldDataType.String,\n        key=True,\n        filterable=True,\n    ),\n    SearchableField(\n        name=\"content\",\n        type=SearchFieldDataType.String,\n        searchable=True,\n    ),\n    SearchField(\n        name=\"content_vector\",\n        type=SearchFieldDataType.Collection(SearchFieldDataType.Single),\n        searchable=True,\n        vector_search_dimensions=len(embedding_function(\"Text\")),\n        vector_search_configuration=\"default\",\n    ),\n    SearchableField(\n        name=\"metadata\",\n        type=SearchFieldDataType.String,\n        searchable=True,\n    ),\n    # Additional field to store the title\n    SearchableField(\n        name=\"title\",\n        type=SearchFieldDataType.String,\n        searchable=True,\n    ),\n    # Additional field for filtering on document source\n    SimpleField(\n        name=\"source\",\n        type=SearchFieldDataType.String,\n        filterable=True,\n    ),\n    # Additional data field for last doc update\n    SimpleField(\n        name=\"last_update\",\n        type=SearchFieldDataType.DateTimeOffset,\n        searchable=True,\n        filterable=True,\n    ),\n]\n# Adding a custom scoring profile with a freshness function\nsc_name = \"scoring_profile\"\nsc = ScoringProfile(\n    name=sc_name,\n    text_weights=TextWeights(weights={\"title\": 5}),\n    function_aggregation=\"sum\",\n    functions=[\n        FreshnessScoringFunction(\n            field_name=\"last_update\",\n            boost=100,\n            parameters=FreshnessScoringParameters(boosting_duration=\"P2D\"),\n            interpolation=\"linear\",\n        )\n    ],\n)\n\nindex_name = \"langchain-vector-demo-custom-scoring-profile\"\n\nvector_store: AzureSearch = AzureSearch(\n    azure_search_endpoint=vector_store_address,\n    azure_search_key=vector_store_password,\n    index_name=index_name,\n    embedding_function=embeddings.embed_query,\n    fields=fields,\n    scoring_profiles=[sc],\n    default_scoring_profile=sc_name,\n)\n\n# Adding same data with different last_update to show Scoring Profile effect\nfrom datetime import datetime, timedelta\n\ntoday = datetime.utcnow().strftime(\"%Y-%m-%dT%H:%M:%S-00:00\")\nyesterday = (datetime.utcnow() - timedelta(days=1)).strftime(\"%Y-%m-%dT%H:%M:%S-00:00\")\none_month_ago = (datetime.utcnow() - timedelta(days=30)).strftime(\n    \"%Y-%m-%dT%H:%M:%S-00:00\"\n)\n\nvector_store.add_texts(\n    [\"Test 1\", \"Test 1\", \"Test 1\"],\n    [\n        {\n            \"title\": \"Title 1\",\n            \"source\": \"source1\",\n            \"random\": \"10290\",\n            \"last_update\": today,\n        },\n        {\n            \"title\": \"Title 1\",\n            \"source\": \"source1\",\n            \"random\": \"48392\",\n            \"last_update\": yesterday,\n        },\n        {\n            \"title\": \"Title 1\",\n            \"source\": \"source1\",\n            \"random\": \"32893\",\n            \"last_update\": one_month_ago,\n        },\n    ],\n)\n\n    ['NjQyNTI5ZmMtNmVkYS00Njg5LTk2ZDgtMjM3OTY4NTJkYzFj',\n     'M2M0MGExZjAtMjhiZC00ZDkwLThmMTgtODNlN2Y2ZDVkMTMw',\n     'ZmFhMDE1NzMtMjZjNS00MTFiLTk0MTEtNGRkYjgwYWQwOTI0']\n\nres = vector_store.similarity_search(query=\"Test 1\", k=3, search_type=\"similarity\")\nres\n\n    [Document(page_content='Test 1', metadata={'title': 'Title 1', 'source': 'source1', 'random': '10290', 'last_update': '2023-07-13T10:47:39-00:00'}),\n     Document(page_content='Test 1', metadata={'title': 'Title 1', 'source': 'source1', 'random': '48392', 'last_update': '2023-07-12T10:47:39-00:00'}),\n     Document(page_content='Test 1', metadata={'title': 'Title 1', 'source': 'source1', 'random': '32893', 'last_update': '2023-06-13T10:47:39-00:00'})]\n\nPrevious\nAzure Cosmos DB\nNext\nBagelDB"
}