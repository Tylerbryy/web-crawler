{
	"title": "BM25 | 🦜️🔗 Langchain",
	"url": "https://python.langchain.com/docs/integrations/retrievers/bm25",
	"html": "ComponentsRetrieversBM25\nBM25\n\nBM25 also known as the Okapi BM25, is a ranking function used in information retrieval systems to estimate the relevance of documents to a given search query.\n\nThis notebook goes over how to use a retriever that under the hood uses BM25 using rank_bm25 package.\n\n# !pip install rank_bm25\n\nfrom langchain.retrievers import BM25Retriever\n\n    /workspaces/langchain/.venv/lib/python3.10/site-packages/deeplake/util/check_latest_version.py:32: UserWarning: A newer version of deeplake (3.6.10) is available. It's recommended that you update to the latest version using `pip install -U deeplake`.\n      warnings.warn(\n\nCreate New Retriever with Texts​\nretriever = BM25Retriever.from_texts([\"foo\", \"bar\", \"world\", \"hello\", \"foo bar\"])\n\nCreate a New Retriever with Documents​\n\nYou can now create a new retriever with the documents you created.\n\nfrom langchain.schema import Document\n\nretriever = BM25Retriever.from_documents(\n    [\n        Document(page_content=\"foo\"),\n        Document(page_content=\"bar\"),\n        Document(page_content=\"world\"),\n        Document(page_content=\"hello\"),\n        Document(page_content=\"foo bar\"),\n    ]\n)\n\nUse Retriever​\n\nWe can now use the retriever!\n\nresult = retriever.get_relevant_documents(\"foo\")\n\nresult\n\n    [Document(page_content='foo', metadata={}),\n     Document(page_content='foo bar', metadata={}),\n     Document(page_content='hello', metadata={}),\n     Document(page_content='world', metadata={})]\n\nPrevious\nAzure Cognitive Search\nNext\nChaindesk"
}