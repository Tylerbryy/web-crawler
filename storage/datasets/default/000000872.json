{
	"title": "AnalyticDB | ü¶úÔ∏èüîó Langchain",
	"url": "https://python.langchain.com/docs/integrations/vectorstores/analyticdb",
	"html": "ComponentsVector storesAnalyticDB\nAnalyticDB\n\nAnalyticDB for PostgreSQL is a massively parallel processing (MPP) data warehousing service that is designed to analyze large volumes of data online.\n\nAnalyticDB for PostgreSQL is developed based on the open-source Greenplum Database project and is enhanced with in-depth extensions by Alibaba Cloud. AnalyticDB for PostgreSQL is compatible with the ANSI SQL 2003 syntax and the PostgreSQL and Oracle database ecosystems. AnalyticDB for PostgreSQL also supports row store and column store. AnalyticDB for PostgreSQL processes petabytes of data offline at a high performance level and supports highly concurrent online queries.\n\nThis notebook shows how to use functionality related to the AnalyticDB vector database. To run, you should have an AnalyticDB instance up and running:\n\nUsing AnalyticDB Cloud Vector Database. Click here to fast deploy it.\nfrom langchain.embeddings.openai import OpenAIEmbeddings\nfrom langchain.text_splitter import CharacterTextSplitter\nfrom langchain.vectorstores import AnalyticDB\n\n\nSplit documents and get embeddings by call OpenAI API\n\nfrom langchain.document_loaders import TextLoader\n\nloader = TextLoader(\"../../modules/state_of_the_union.txt\")\ndocuments = loader.load()\ntext_splitter = CharacterTextSplitter(chunk_size=1000, chunk_overlap=0)\ndocs = text_splitter.split_documents(documents)\n\nembeddings = OpenAIEmbeddings()\n\n\nConnect to AnalyticDB by setting related ENVIRONMENTS.\n\nexport PG_HOST={your_analyticdb_hostname}\nexport PG_PORT={your_analyticdb_port} # Optional, default is 5432\nexport PG_DATABASE={your_database} # Optional, default is postgres\nexport PG_USER={database_username}\nexport PG_PASSWORD={database_password}\n\n\nThen store your embeddings and documents into AnalyticDB\n\nimport os\n\nconnection_string = AnalyticDB.connection_string_from_db_params(\n    driver=os.environ.get(\"PG_DRIVER\", \"psycopg2cffi\"),\n    host=os.environ.get(\"PG_HOST\", \"localhost\"),\n    port=int(os.environ.get(\"PG_PORT\", \"5432\")),\n    database=os.environ.get(\"PG_DATABASE\", \"postgres\"),\n    user=os.environ.get(\"PG_USER\", \"postgres\"),\n    password=os.environ.get(\"PG_PASSWORD\", \"postgres\"),\n)\n\nvector_db = AnalyticDB.from_documents(\n    docs,\n    embeddings,\n    connection_string=connection_string,\n)\n\n\nQuery and retrieve data\n\nquery = \"What did the president say about Ketanji Brown Jackson\"\ndocs = vector_db.similarity_search(query)\n\nprint(docs[0].page_content)\n\n    Tonight. I call on the Senate to: Pass the Freedom to Vote Act. Pass the John Lewis Voting Rights Act. And while you‚Äôre at it, pass the Disclose Act so Americans can know who is funding our elections. \n    \n    Tonight, I‚Äôd like to honor someone who has dedicated his life to serve this country: Justice Stephen Breyer‚Äîan Army veteran, Constitutional scholar, and retiring Justice of the United States Supreme Court. Justice Breyer, thank you for your service. \n    \n    One of the most serious constitutional responsibilities a President has is nominating someone to serve on the United States Supreme Court. \n    \n    And I did that 4 days ago, when I nominated Circuit Court of Appeals Judge Ketanji Brown Jackson. One of our nation‚Äôs top legal minds, who will continue Justice Breyer‚Äôs legacy of excellence.\n\nPrevious\nAlibaba Cloud OpenSearch\nNext\nAnnoy"
}