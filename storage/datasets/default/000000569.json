{
	"title": "Predibase | ü¶úÔ∏èüîó Langchain",
	"url": "https://python.langchain.com/docs/integrations/llms/predibase",
	"html": "ComponentsLLMsPredibase\nPredibase\n\nPredibase allows you to train, fine-tune, and deploy any ML model‚Äîfrom linear regression to large language model.\n\nThis example demonstrates using Langchain with models deployed on Predibase\n\nSetup\n\nTo run this notebook, you'll need a Predibase account and an API key.\n\nYou'll also need to install the Predibase Python package:\n\npip install predibase\nimport os\n\nos.environ[\"PREDIBASE_API_TOKEN\"] = \"{PREDIBASE_API_TOKEN}\"\n\nInitial Call‚Äã\nfrom langchain.llms import Predibase\n\nmodel = Predibase(\n    model=\"vicuna-13b\", predibase_api_key=os.environ.get(\"PREDIBASE_API_TOKEN\")\n)\n\nresponse = model(\"Can you recommend me a nice dry wine?\")\nprint(response)\n\nChain Call Setup‚Äã\nllm = Predibase(\n    model=\"vicuna-13b\", predibase_api_key=os.environ.get(\"PREDIBASE_API_TOKEN\")\n)\n\nSequentialChain‚Äã\nfrom langchain.chains import LLMChain\nfrom langchain.prompts import PromptTemplate\n\n# This is an LLMChain to write a synopsis given a title of a play.\ntemplate = \"\"\"You are a playwright. Given the title of play, it is your job to write a synopsis for that title.\n\nTitle: {title}\nPlaywright: This is a synopsis for the above play:\"\"\"\nprompt_template = PromptTemplate(input_variables=[\"title\"], template=template)\nsynopsis_chain = LLMChain(llm=llm, prompt=prompt_template)\n\n# This is an LLMChain to write a review of a play given a synopsis.\ntemplate = \"\"\"You are a play critic from the New York Times. Given the synopsis of play, it is your job to write a review for that play.\n\nPlay Synopsis:\n{synopsis}\nReview from a New York Times play critic of the above play:\"\"\"\nprompt_template = PromptTemplate(input_variables=[\"synopsis\"], template=template)\nreview_chain = LLMChain(llm=llm, prompt=prompt_template)\n\n# This is the overall chain where we run these two chains in sequence.\nfrom langchain.chains import SimpleSequentialChain\n\noverall_chain = SimpleSequentialChain(\n    chains=[synopsis_chain, review_chain], verbose=True\n)\n\nreview = overall_chain.run(\"Tragedy at sunset on the beach\")\n\nFine-tuned LLM (Use your own fine-tuned LLM from Predibase)‚Äã\nfrom langchain.llms import Predibase\n\nmodel = Predibase(\n    model=\"my-finetuned-LLM\", predibase_api_key=os.environ.get(\"PREDIBASE_API_TOKEN\")\n)\n# replace my-finetuned-LLM with the name of your model in Predibase\n\n# response = model(\"Can you help categorize the following emails into positive, negative, and neutral?\")\n\nPrevious\nPipelineAI\nNext\nPrediction Guard"
}