{
	"title": "Gradient | ü¶úÔ∏èüîó Langchain",
	"url": "https://python.langchain.com/docs/integrations/text_embedding/gradient",
	"html": "ComponentsText embedding modelsGradient\nGradient\n\nGradient allows to create Embeddings as well fine tune and get completions on LLMs with a simple web API.\n\nThis notebook goes over how to use Langchain with Embeddings of Gradient.\n\nImports‚Äã\nfrom langchain.embeddings import GradientEmbeddings\n\nSet the Environment API Key‚Äã\n\nMake sure to get your API key from Gradient AI. You are given $10 in free credits to test and fine-tune different models.\n\nimport os\nfrom getpass import getpass\n\nif not os.environ.get(\"GRADIENT_ACCESS_TOKEN\", None):\n    # Access token under https://auth.gradient.ai/select-workspace\n    os.environ[\"GRADIENT_ACCESS_TOKEN\"] = getpass(\"gradient.ai access token:\")\nif not os.environ.get(\"GRADIENT_WORKSPACE_ID\", None):\n    # `ID` listed in `$ gradient workspace list`\n    # also displayed after login at at https://auth.gradient.ai/select-workspace\n    os.environ[\"GRADIENT_WORKSPACE_ID\"] = getpass(\"gradient.ai workspace id:\")\n\n\nOptional: Validate your environment variables GRADIENT_ACCESS_TOKEN and GRADIENT_WORKSPACE_ID to get currently deployed models. Using the gradientai Python package.\n\npip install gradientai\n\nCreate the Gradient instance‚Äã\ndocuments = [\n    \"Pizza is a dish.\",\n    \"Paris is the capital of France\",\n    \"numpy is a lib for linear algebra\",\n]\nquery = \"Where is Paris?\"\n\nembeddings = GradientEmbeddings(model=\"bge-large\")\n\ndocuments_embedded = embeddings.embed_documents(documents)\nquery_result = embeddings.embed_query(query)\n\n# (demo) compute similarity\nimport numpy as np\n\nscores = np.array(documents_embedded) @ np.array(query_result).T\ndict(zip(documents, scores))\n\nPrevious\nGPT4All\nNext\nHugging Face"
}