{
	"title": "LocalAI | ü¶úÔ∏èüîó Langchain",
	"url": "https://python.langchain.com/docs/integrations/text_embedding/localai",
	"html": "ComponentsText embedding modelsLocalAI\nLocalAI\n\nLet's load the LocalAI Embedding class. In order to use the LocalAI Embedding class, you need to have the LocalAI service hosted somewhere and configure the embedding models. See the documentation at https://localai.io/basics/getting_started/index.html and https://localai.io/features/embeddings/index.html.\n\nfrom langchain.embeddings import LocalAIEmbeddings\n\nembeddings = LocalAIEmbeddings(\n    openai_api_base=\"http://localhost:8080\", model=\"embedding-model-name\"\n)\n\ntext = \"This is a test document.\"\n\nquery_result = embeddings.embed_query(text)\n\ndoc_result = embeddings.embed_documents([text])\n\n\nLet's load the LocalAI Embedding class with first generation models (e.g. text-search-ada-doc-001/text-search-ada-query-001). Note: These are not recommended models - see here\n\nfrom langchain.embeddings import LocalAIEmbeddings\n\nembeddings = LocalAIEmbeddings(\n    openai_api_base=\"http://localhost:8080\", model=\"embedding-model-name\"\n)\n\ntext = \"This is a test document.\"\n\nquery_result = embeddings.embed_query(text)\n\ndoc_result = embeddings.embed_documents([text])\n\n# if you are behind an explicit proxy, you can use the OPENAI_PROXY environment variable to pass through\nos.environ[\"OPENAI_PROXY\"] = \"http://proxy.yourcompany.com:8080\"\n\nPrevious\nLLMRails\nNext\nMiniMax"
}