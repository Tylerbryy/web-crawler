{
	"title": "ScaNN | ü¶úÔ∏èüîó Langchain",
	"url": "https://python.langchain.com/docs/integrations/vectorstores/scann",
	"html": "ComponentsVector storesScaNN\nScaNN\n\nScaNN (Scalable Nearest Neighbors) is a method for efficient vector similarity search at scale.\n\nScaNN includes search space pruning and quantization for Maximum Inner Product Search and also supports other distance functions such as Euclidean distance. The implementation is optimized for x86 processors with AVX2 support. See its Google Research github for more details.\n\nInstallation‚Äã\n\nInstall ScaNN through pip. Alternatively, you can follow instructions on the ScaNN Website to install from source.\n\npip install scann\n\nRetrieval Demo‚Äã\n\nBelow we show how to use ScaNN in conjunction with Huggingface Embeddings.\n\nfrom langchain.document_loaders import TextLoader\nfrom langchain.embeddings import HuggingFaceEmbeddings\nfrom langchain.text_splitter import CharacterTextSplitter\nfrom langchain.vectorstores import ScaNN\n\nloader = TextLoader(\"state_of_the_union.txt\")\ndocuments = loader.load()\ntext_splitter = CharacterTextSplitter(chunk_size=1000, chunk_overlap=0)\ndocs = text_splitter.split_documents(documents)\n\n\nembeddings = HuggingFaceEmbeddings()\n\ndb = ScaNN.from_documents(docs, embeddings)\nquery = \"What did the president say about Ketanji Brown Jackson\"\ndocs = db.similarity_search(query)\n\ndocs[0]\n\n    Document(page_content='Tonight. I call on the Senate to: Pass the Freedom to Vote Act. Pass the John Lewis Voting Rights Act. And while you‚Äôre at it, pass the Disclose Act so Americans can know who is funding our elections. \\n\\nTonight, I‚Äôd like to honor someone who has dedicated his life to serve this country: Justice Stephen Breyer‚Äîan Army veteran, Constitutional scholar, and retiring Justice of the United States Supreme Court. Justice Breyer, thank you for your service. \\n\\nOne of the most serious constitutional responsibilities a President has is nominating someone to serve on the United States Supreme Court. \\n\\nAnd I did that 4 days ago, when I nominated Circuit Court of Appeals Judge Ketanji Brown Jackson. One of our nation‚Äôs top legal minds, who will continue Justice Breyer‚Äôs legacy of excellence.', metadata={'source': 'state_of_the_union.txt'})\n\nRetrievalQA Demo‚Äã\n\nNext, we demonstrate using ScaNN in conjunction with Google PaLM API.\n\nYou can obtain an API key from https://developers.generativeai.google/tutorials/setup\n\nfrom langchain.chains import RetrievalQA\nfrom langchain.chat_models import google_palm\n\npalm_client = google_palm.ChatGooglePalm(google_api_key=\"YOUR_GOOGLE_PALM_API_KEY\")\n\nqa = RetrievalQA.from_chain_type(\n    llm=palm_client,\n    chain_type=\"stuff\",\n    retriever=db.as_retriever(search_kwargs={\"k\": 10}),\n)\n\nprint(qa.run(\"What did the president say about Ketanji Brown Jackson?\"))\n\n    The president said that Ketanji Brown Jackson is one of our nation's top legal minds, who will continue Justice Breyer's legacy of excellence.\n\nprint(qa.run(\"What did the president say about Michael Phelps?\"))\n\n    The president did not mention Michael Phelps in his speech.\n\nSave and loading local retrieval index‚Äã\ndb.save_local(\"/tmp/db\", \"state_of_union\")\nrestored_db = ScaNN.load_local(\"/tmp/db\", embeddings, index_name=\"state_of_union\")\n\nPrevious\nRockset\nNext\nSemaDB"
}