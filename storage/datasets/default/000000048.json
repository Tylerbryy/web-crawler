{
	"title": "cassandra-synonym-caching | ü¶úÔ∏èüîó Langchain",
	"url": "https://python.langchain.com/docs/templates/cassandra-synonym-caching",
	"html": "Templatescassandra-synonym-caching\ncassandra-synonym-caching\n\nThis template provides a simple chain template showcasing the usage of LLM Caching backed by Apache Cassandra¬Æ or Astra DB through CQL.\n\nEnvironment Setup‚Äã\n\nTo set up your environment, you will need the following:\n\nan Astra Vector Database (free tier is fine!). You need a Database Administrator token, in particular the string starting with AstraCS:...;\nlikewise, get your Database ID ready, you will have to enter it below;\nan OpenAI API Key. (More info here, note that out-of-the-box this demo supports OpenAI unless you tinker with the code.)\n\nNote: you can alternatively use a regular Cassandra cluster: to do so, make sure you provide the USE_CASSANDRA_CLUSTER entry as shown in .env.template and the subsequent environment variables to specify how to connect to it.\n\nUsage‚Äã\n\nTo use this package, you should first have the LangChain CLI installed:\n\npip install -U langchain-cli\n\n\nTo create a new LangChain project and install this as the only package, you can do:\n\nlangchain app new my-app --package cassandra-synonym-caching\n\n\nIf you want to add this to an existing project, you can just run:\n\nlangchain app add cassandra-synonym-caching\n\n\nAnd add the following code to your server.py file:\n\nfrom cassandra_synonym_caching import chain as cassandra_synonym_caching_chain\n\nadd_routes(app, cassandra_synonym_caching_chain, path=\"/cassandra-synonym-caching\")\n\n\n(Optional) Let's now configure LangSmith. LangSmith will help us trace, monitor and debug LangChain applications. LangSmith is currently in private beta, you can sign up here. If you don't have access, you can skip this section\n\nexport LANGCHAIN_TRACING_V2=true\nexport LANGCHAIN_API_KEY=<your-api-key>\nexport LANGCHAIN_PROJECT=<your-project>  # if not specified, defaults to \"default\"\n\n\nIf you are inside this directory, then you can spin up a LangServe instance directly by:\n\nlangchain serve\n\n\nThis will start the FastAPI app with a server is running locally at http://localhost:8000\n\nWe can see all templates at http://127.0.0.1:8000/docs We can access the playground at http://127.0.0.1:8000/cassandra-synonym-caching/playground\n\nWe can access the template from code with:\n\nfrom langserve.client import RemoteRunnable\n\nrunnable = RemoteRunnable(\"http://localhost:8000/cassandra-synonym-caching\")\n\nReference‚Äã\n\nStand-alone LangServe template repo: here.\n\nPrevious\ncassandra-entomology-rag\nNext\nChain-of-Note (Wikipedia)"
}