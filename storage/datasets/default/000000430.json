{
	"title": "Arcee Retriever | ü¶úÔ∏èüîó Langchain",
	"url": "https://python.langchain.com/docs/integrations/retrievers/arcee",
	"html": "ComponentsRetrieversArcee Retriever\nArcee Retriever\n\nThis notebook demonstrates how to use the ArceeRetriever class to retrieve relevant document(s) for Arcee's Domain Adapted Language Models (DALMs).\n\nSetup‚Äã\n\nBefore using ArceeRetriever, make sure the Arcee API key is set as ARCEE_API_KEY environment variable. You can also pass the api key as a named parameter.\n\nfrom langchain.retrievers import ArceeRetriever\n\nretriever = ArceeRetriever(\n    model=\"DALM-PubMed\",\n    # arcee_api_key=\"ARCEE-API-KEY\" # if not already set in the environment\n)\n\nAdditional Configuration‚Äã\n\nYou can also configure ArceeRetriever's parameters such as arcee_api_url, arcee_app_url, and model_kwargs as needed. Setting the model_kwargs at the object initialization uses the filters and size as default for all the subsequent retrievals.\n\nretriever = ArceeRetriever(\n    model=\"DALM-PubMed\",\n    # arcee_api_key=\"ARCEE-API-KEY\", # if not already set in the environment\n    arcee_api_url=\"https://custom-api.arcee.ai\",  # default is https://api.arcee.ai\n    arcee_app_url=\"https://custom-app.arcee.ai\",  # default is https://app.arcee.ai\n    model_kwargs={\n        \"size\": 5,\n        \"filters\": [\n            {\n                \"field_name\": \"document\",\n                \"filter_type\": \"fuzzy_search\",\n                \"value\": \"Einstein\",\n            }\n        ],\n    },\n)\n\nRetrieving documents‚Äã\n\nYou can retrieve relevant documents from uploaded contexts by providing a query. Here's an example:\n\nquery = \"Can AI-driven music therapy contribute to the rehabilitation of patients with disorders of consciousness?\"\ndocuments = retriever.get_relevant_documents(query=query)\n\nAdditional parameters‚Äã\n\nArcee allows you to apply filters and set the size (in terms of count) of retrieved document(s). Filters help narrow down the results. Here's how to use these parameters:\n\n# Define filters\nfilters = [\n    {\"field_name\": \"document\", \"filter_type\": \"fuzzy_search\", \"value\": \"Music\"},\n    {\"field_name\": \"year\", \"filter_type\": \"strict_search\", \"value\": \"1905\"},\n]\n\n# Retrieve documents with filters and size params\ndocuments = retriever.get_relevant_documents(query=query, size=5, filters=filters)\n\nPrevious\nAmazon Kendra\nNext\nArxiv"
}