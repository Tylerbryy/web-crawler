{
	"title": "Trubrics | 🦜️🔗 Langchain",
	"url": "https://python.langchain.com/docs/integrations/callbacks/trubrics",
	"html": "ComponentsCallbacksTrubrics\nTrubrics\n\nTrubrics is an LLM user analytics platform that lets you collect, analyse and manage user prompts & feedback on AI models. In this guide we will go over how to setup the TrubricsCallbackHandler.\n\nCheck out our repo for more information on Trubrics.\n\nInstallation and Setup​\npip install trubrics\n\nGetting Trubrics Credentials​\n\nIf you do not have a Trubrics account, create one on here. In this tutorial, we will use the default project that is built upon account creation.\n\nNow set your credentials as environment variables:\n\nimport os\n\nos.environ[\"TRUBRICS_EMAIL\"] = \"***@***\"\nos.environ[\"TRUBRICS_PASSWORD\"] = \"***\"\n\nUsage​\n\nThe TrubricsCallbackHandler can receive various optional arguments. See here for kwargs that can be passed to Trubrics prompts.\n\nclass TrubricsCallbackHandler(BaseCallbackHandler):\n\n    \"\"\"\n    Callback handler for Trubrics.\n    \n    Args:\n        project: a trubrics project, default project is \"default\"\n        email: a trubrics account email, can equally be set in env variables\n        password: a trubrics account password, can equally be set in env variables\n        **kwargs: all other kwargs are parsed and set to trubrics prompt variables, or added to the `metadata` dict\n    \"\"\"\n\nExamples​\n\nHere are two examples of how to use the TrubricsCallbackHandler with Langchain LLMs or Chat Models. We will use OpenAI models, so set your OPENAI_API_KEY key here:\n\nos.environ[\"OPENAI_API_KEY\"] = \"sk-***\"\n\n1. With an LLM​\nfrom langchain.callbacks import TrubricsCallbackHandler\nfrom langchain.llms import OpenAI\n\nllm = OpenAI(callbacks=[TrubricsCallbackHandler()])\n\n    \u001b[32m2023-09-26 11:30:02.149\u001b[0m | \u001b[1mINFO    \u001b[0m | \u001b[36mtrubrics.platform.auth\u001b[0m:\u001b[36mget_trubrics_auth_token\u001b[0m:\u001b[36m61\u001b[0m - \u001b[1mUser jeff.kayne@trubrics.com has been authenticated.\u001b[0m\n\nres = llm.generate([\"Tell me a joke\", \"Write me a poem\"])\n\n    \u001b[32m2023-09-26 11:30:07.760\u001b[0m | \u001b[1mINFO    \u001b[0m | \u001b[36mtrubrics.platform\u001b[0m:\u001b[36mlog_prompt\u001b[0m:\u001b[36m102\u001b[0m - \u001b[1mUser prompt saved to Trubrics.\u001b[0m\n    \u001b[32m2023-09-26 11:30:08.042\u001b[0m | \u001b[1mINFO    \u001b[0m | \u001b[36mtrubrics.platform\u001b[0m:\u001b[36mlog_prompt\u001b[0m:\u001b[36m102\u001b[0m - \u001b[1mUser prompt saved to Trubrics.\u001b[0m\n\nprint(\"--> GPT's joke: \", res.generations[0][0].text)\nprint()\nprint(\"--> GPT's poem: \", res.generations[1][0].text)\n\n    --> GPT's joke:  \n    \n    Q: What did the fish say when it hit the wall?\n    A: Dam!\n    \n    --> GPT's poem:  \n    \n    A Poem of Reflection\n    \n    I stand here in the night,\n    The stars above me filling my sight.\n    I feel such a deep connection,\n    To the world and all its perfection.\n    \n    A moment of clarity,\n    The calmness in the air so serene.\n    My mind is filled with peace,\n    And I am released.\n    \n    The past and the present,\n    My thoughts create a pleasant sentiment.\n    My heart is full of joy,\n    My soul soars like a toy.\n    \n    I reflect on my life,\n    And the choices I have made.\n    My struggles and my strife,\n    The lessons I have paid.\n    \n    The future is a mystery,\n    But I am ready to take the leap.\n    I am ready to take the lead,\n    And to create my own destiny.\n\n2. With a chat model​\nfrom langchain.callbacks import TrubricsCallbackHandler\nfrom langchain.chat_models import ChatOpenAI\nfrom langchain.schema import HumanMessage, SystemMessage\n\nchat_llm = ChatOpenAI(\n    callbacks=[\n        TrubricsCallbackHandler(\n            project=\"default\",\n            tags=[\"chat model\"],\n            user_id=\"user-id-1234\",\n            some_metadata={\"hello\": [1, 2]},\n        )\n    ]\n)\n\nchat_res = chat_llm(\n    [\n        SystemMessage(content=\"Every answer of yours must be about OpenAI.\"),\n        HumanMessage(content=\"Tell me a joke\"),\n    ]\n)\n\n    \u001b[32m2023-09-26 11:30:10.550\u001b[0m | \u001b[1mINFO    \u001b[0m | \u001b[36mtrubrics.platform\u001b[0m:\u001b[36mlog_prompt\u001b[0m:\u001b[36m102\u001b[0m - \u001b[1mUser prompt saved to Trubrics.\u001b[0m\n\nprint(chat_res.content)\n\n    Why did the OpenAI computer go to the party?\n    \n    Because it wanted to meet its AI friends and have a byte of fun!\n\nPrevious\nStreamlit\nNext\nChat loaders"
}