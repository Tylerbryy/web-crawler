{
	"title": "ClickUp | 🦜️🔗 Langchain",
	"url": "https://python.langchain.com/docs/integrations/toolkits/clickup",
	"html": "ComponentsAgents and toolkitsClickUp\nClickUp\n\nClickUp is an all-in-one productivity platform that provides small and large teams across industries with flexible and customizable work management solutions, tools, and functions.\n\nIt is a cloud-based project management solution for businesses of all sizes featuring communication and collaboration tools to help achieve organizational goals.\n\nfrom datetime import datetime\n\nfrom langchain.agents import AgentType, initialize_agent\nfrom langchain.agents.agent_toolkits.clickup.toolkit import ClickupToolkit\nfrom langchain.llms import OpenAI\nfrom langchain.utilities.clickup import ClickupAPIWrapper\n\nInitializing​\nGet Authenticated​\nCreate a ClickUp App\nFollow these steps to get your client_id and client_secret.\nSuggestion: use https://google.com as the redirect_uri. This is what we assume in the defaults for this toolkit.\nCopy/paste them and run the next cell to get your code\n# Copilot Sandbox\noauth_client_id = \"ABC...\"\noauth_client_secret = \"123...\"\nredirect_uri = \"https://google.com\"\n\nprint(\"Click this link, select your workspace, click `Connect Workspace`\")\nprint(ClickupAPIWrapper.get_access_code_url(oauth_client_id, redirect_uri))\n\n    Click this link, select your workspace, click `Connect Workspace`\n    https://app.clickup.com/api?client_id=ABC...&redirect_uri=https://google.com\n\n\nThe url should change to something like this https://www.google.com/?code=THISISMYCODERIGHTHERE.\n\nNext, copy/paste the CODE (THISISMYCODERIGHTHERE) generated in the URL in the cell below.\n\ncode = \"THISISMYCODERIGHTHERE\"\n\nGet Access Token​\n\nThen, use the code below to get your access_token.\n\nImportant: Each code is a one time code that will expire after use. The access_token can be used for a period of time. Make sure to copy paste the access_token once you get it!\n\naccess_token = ClickupAPIWrapper.get_access_token(\n    oauth_client_id, oauth_client_secret, code\n)\n\n    Error: {'err': 'Code already used', 'ECODE': 'OAUTH_014'}\n    You already used this code once. Go back a step and generate a new code.\n    Our best guess for the url to get a new code is:\n    https://app.clickup.com/api?client_id=B5D61F8EVO04PR0JX0U73984LLS9GI6P&redirect_uri=https://google.com\n\n# Init toolkit\nclickup_api_wrapper = ClickupAPIWrapper(access_token=access_token)\ntoolkit = ClickupToolkit.from_clickup_api_wrapper(clickup_api_wrapper)\nprint(\n    f\"Found team_id: {clickup_api_wrapper.team_id}.\\nMost request require the team id, so we store it for you in the toolkit, we assume the first team in your list is the one you want. \\nNote: If you know this is the wrong ID, you can pass it at initialization.\"\n)\n\n    Found team_id: 9011010153.\n    Most request require the team id, so we store it for you in the toolkit, we assume the first team in your list is the one you want. \n    Note: If you know this is the wrong ID, you can pass it at initialization.\n\nCreate Agent​\nllm = OpenAI(temperature=0, openai_api_key=\"\")\n\nagent = initialize_agent(\n    toolkit.get_tools(), llm, agent=AgentType.ZERO_SHOT_REACT_DESCRIPTION, verbose=True\n)\n\nUse an Agent​\n# helper function for demo\ndef print_and_run(command):\n    print(\"\\033[94m$ COMMAND\\033[0m\")\n    print(command)\n    print(\"\\n\\033[94m$ AGENT\\033[0m\")\n    response = agent.run(command)\n    print(\"\".join([\"-\"] * 80))\n    return response\n\nNavigation​\n\nYou can get the teams, folder and spaces your user has access to\n\nprint_and_run(\"Get all the teams that the user is authorized to access\")\nprint_and_run(\"Get all the spaces available to the team\")\nprint_and_run(\"Get all the folders for the team\")\n\n    $ COMMAND\n    Get all the teams that the user is authorized to access\n    \n    $ AGENT\n    \n    \n    > Entering new AgentExecutor chain...\n     I need to use the Get Teams tool\n    Action: Get Teams\n    Action Input: No necessary request parameters\n    Observation: {'teams': [{'id': '9011010153', 'name': 'Task Copilot Sandbox Workspace 1', 'members': [{'id': 61681706, 'username': 'Aiswarya ', 'email': 'asankar@clickup.com', 'initials': 'A'}, {'id': 81928627, 'username': 'Rodrigo Ceballos Lentini', 'email': 'rlentini@clickup.com', 'initials': 'RL'}]}]}\n    Thought: I now know the teams the user is authorized to access\n    Final Answer: The user is authorized to access the team 'Task Copilot Sandbox Workspace 1'.\n    \n    > Finished chain.\n    --------------------------------------------------------------------------------\n    $ COMMAND\n    Get all the spaces available to the team\n    \n    $ AGENT\n    \n    \n    > Entering new AgentExecutor chain...\n     I need to use the API to get the spaces\n    Action: Get Teams\n    Action Input: No necessary request parameters\n    Observation: {'teams': [{'id': '9011010153', 'name': 'Task Copilot Sandbox Workspace 1', 'members': [{'id': 61681706, 'username': 'Aiswarya ', 'email': 'asankar@clickup.com', 'initials': 'A'}, {'id': 81928627, 'username': 'Rodrigo Ceballos Lentini', 'email': 'rlentini@clickup.com', 'initials': 'RL'}]}]}\n    Thought: I now have the list of teams\n    Final Answer: The list of teams available to the team is [{'id': '9011010153', 'name': 'Task Copilot Sandbox Workspace 1', 'members': [{'id': 61681706, 'username': 'Aiswarya ', 'email': 'asankar@clickup.com', 'initials': 'A'}, {'id': 81928627, 'username': 'Rodrigo Ceballos Lentini', 'email': 'rlentini@clickup.com', 'initials': 'RL'}]}]\n    \n    > Finished chain.\n    --------------------------------------------------------------------------------\n    $ COMMAND\n    Get all the folders for the team\n    \n    $ AGENT\n    \n    \n    > Entering new AgentExecutor chain...\n     I need to get all the folders for the team\n    Action: Get all folders in the workspace\n    Action Input: {\"folder_id\": \"90130119692\"}\n    Observation: {'spaces': [{'id': '90110075934', 'name': 'Test Space', 'color': None, 'private': False, 'avatar': None, 'admin_can_manage': False, 'statuses': [{'id': 'p90110075934_lBKIEh3r', 'status': 'Open', 'type': 'open', 'orderindex': 0, 'color': '#d3d3d3'}, {'id': 'p90110075934_AvVAnVqy', 'status': 'in progress', 'type': 'custom', 'orderindex': 1, 'color': '#a875ff'}, {'id': 'p90110075934_SftYWzGt', 'status': 'Closed', 'type': 'closed', 'orderindex': 2, 'color': '#6bc950'}], 'multiple_assignees': True, 'features': {'due_dates': {'enabled': True, 'start_date': True, 'remap_due_dates': False, 'remap_closed_due_date': False}, 'sprints': {'enabled': False}, 'time_tracking': {'enabled': True, 'harvest': False, 'rollup': False}, 'points': {'enabled': False}, 'custom_items': {'enabled': False}, 'priorities': {'enabled': True, 'priorities': [{'color': '#f50000', 'id': '1', 'orderindex': '1', 'priority': 'urgent'}, {'color': '#ffcc00', 'id': '2', 'orderindex': '2', 'priority': 'high'}, {'color': '#6fddff', 'id': '3', 'orderindex': '3', 'priority': 'normal'}, {'color': '#d8d8d8', 'id': '4', 'orderindex': '4', 'priority': 'low'}]}, 'tags': {'enabled': True}, 'check_unresolved': {'enabled': True, 'subtasks': None, 'checklists': None, 'comments': None}, 'zoom': {'enabled': False}, 'milestones': {'enabled': False}, 'custom_fields': {'enabled': True}, 'dependency_warning': {'enabled': True}, 'status_pies': {'enabled': False}, 'multiple_assignees': {'enabled': True}}, 'archived': False}]}\n    Thought: I now know the folders in the team\n    Final Answer: The folders in the team are listed in the observation.\n    \n    > Finished chain.\n    --------------------------------------------------------------------------------\n\n\n\n\n\n    'The folders in the team are listed in the observation.'\n\nTask Operations​\n\nYou can get, ask question about tasks and update them\n\ntask_id = \"8685mb5fn\"\n\nBasic attirbute getting and updating​\n# We can get a task to inspect it's contents\nprint_and_run(f\"Get task with id {task_id}\")\n\n# We can get a specific attribute from a task\nprevious_description = print_and_run(\n    f\"What is the description of task with id {task_id}\"\n)\n\n# We can even update it!\nprint_and_run(\n    f\"For task with id {task_id}, change the description to 'A cool task descriptiont changed by AI!'\"\n)\nprint_and_run(f\"What is the description of task with id {task_id}\")\n\n# Undo what we did\nprint_and_run(\n    f\"For task with id {task_id}, change the description to '{previous_description}'\"\n)\n\n    $ COMMAND\n    Get task with id 8685mb5fn\n    \n    $ AGENT\n    \n    \n    > Entering new AgentExecutor chain...\n     I need to use the Get task tool\n    Action: Get task\n    Action Input: {\"task_id\": \"8685mb5fn\"}\n    Observation: {'id': '8685mb5fn', 'name': 'dummy task 1', 'text_content': 'An old, boring task description', 'description': 'An old, boring task description', 'status': 'to do', 'creator_id': 81928627, 'creator_username': 'Rodrigo Ceballos Lentini', 'creator_email': 'rlentini@clickup.com', 'assignees': [], 'watcher_username': 'Rodrigo Ceballos Lentini', 'watcher_email': 'rlentini@clickup.com', 'priority': 'high', 'due_date': '1694764800000', 'start_date': None, 'points': None, 'team_id': '9011010153', 'project_id': '90110331875'}\n    Thought: I now know the task details\n    Final Answer: The task with id 8685mb5fn has the following details: {'id': '8685mb5fn', 'name': 'dummy task 1', 'text_content': 'An old, boring task description', 'description': 'An old, boring task description', 'status': 'to do', 'creator_id': 81928627, 'creator_username': 'Rodrigo Ceballos Lentini', 'creator_email': 'rlentini@clickup.com', 'assignees': [], 'watcher_username': 'Rodrigo Ceballos Lentini', 'watcher_email': 'rlentini@clickup.com', 'priority': 'high', 'due_date': '1694764800000', 'start_date': None, 'points': None, 'team_id': '9011010153', 'project_id': '90110331875'}\n    \n    > Finished chain.\n    --------------------------------------------------------------------------------\n    $ COMMAND\n    What is the description of task with id 8685mb5fn\n    \n    $ AGENT\n    \n    \n    > Entering new AgentExecutor chain...\n     I need to get the description of the task\n    Action: Get task attribute\n    Action Input: {\"task_id\": \"8685mb5fn\", \"attribute_name\": \"description\"}\n    Observation: An old, boring task description\n    Thought: I now know the description of the task\n    Final Answer: An old, boring task description\n    \n    > Finished chain.\n    --------------------------------------------------------------------------------\n    $ COMMAND\n    For task with id 8685mb5fn, change the description to 'A cool task descriptiont changed by AI!'\n    \n    $ AGENT\n    \n    \n    > Entering new AgentExecutor chain...\n     I need to update the description of a task\n    Action: Update task\n    Action Input: {\"task_id\": \"8685mb5fn\", \"attribute_name\": \"description\", \"value\": \"A cool task description changed by AI!\"}\n    Observation: <Response [200]>\n    Thought: I have successfully updated the task description\n    Final Answer: The description of task 8685mb5fn has been successfully changed to 'A cool task description changed by AI!'\n    \n    > Finished chain.\n    --------------------------------------------------------------------------------\n    $ COMMAND\n    What is the description of task with id 8685mb5fn\n    \n    $ AGENT\n    \n    \n    > Entering new AgentExecutor chain...\n     I need to get the description of the task\n    Action: Get task attribute\n    Action Input: {\"task_id\": \"8685mb5fn\", \"attribute_name\": \"description\"}\n    Observation: A cool task description changed by AI!\n    Thought: I now know the description of the task\n    Final Answer: A cool task description changed by AI!\n    \n    > Finished chain.\n    --------------------------------------------------------------------------------\n    $ COMMAND\n    For task with id 8685mb5fn, change the description to 'An old, boring task description'\n    \n    $ AGENT\n    \n    \n    > Entering new AgentExecutor chain...\n     I need to update the description of a task\n    Action: Update task\n    Action Input: {\"task_id\": \"8685mb5fn\", \"attribute_name\": \"description\", \"value\": \"An old, boring task description\"}\n    Observation: <Response [200]>\n    Thought: I now know the task description has been updated\n    Final Answer: The description of task 8685mb5fn has been updated to 'An old, boring task description'.\n    \n    > Finished chain.\n    --------------------------------------------------------------------------------\n\n\n\n\n\n    \"The description of task 8685mb5fn has been updated to 'An old, boring task description'.\"\n\nprint_and_run(\"Change the descrition task 8685mj6cd to 'Look ma no hands'\")\n\n    $ COMMAND\n    Change the descrition task 8685mj6cd to 'Look ma no hands'\n    \n    $ AGENT\n    \n    \n    > Entering new AgentExecutor chain...\n     I need to update the description of a task\n    Action: Update task\n    Action Input: {\"task_id\": \"8685mj6cd\", \"attribute_name\": \"description\", \"value\": \"Look ma no hands\"}\n    Observation: <Response [200]>\n    Thought: The task description has been successfully updated\n    Final Answer: The description of task 8685mj6cd has been changed to 'Look ma no hands'.\n    \n    > Finished chain.\n    --------------------------------------------------------------------------------\n\n\n\n\n\n    \"The description of task 8685mj6cd has been changed to 'Look ma no hands'.\"\n\nAdvanced Attributes (Assignees)​\n\nYou can query and update almost every thing about a task!\n\nuser_id = 81928627\n\nprint_and_run(f\"What are the assignees of task id {task_id}?\")\nprint_and_run(f\"Remove user {user_id} from the assignees of task id {task_id}\")\nprint_and_run(f\"What are the assignees of task id {task_id}?\")\nprint_and_run(f\"Add user {user_id} from the assignees of task id {task_id}\")\n\n    $ COMMAND\n    What are the assignees of task id 8685mb5fn?\n    \n    $ AGENT\n    \n    \n    > Entering new AgentExecutor chain...\n     I need to get the assignees of a task\n    Action: Get task attribute\n    Action Input: {\"task_id\": \"8685mb5fn\", \"attribute_name\": \"assignee\"}\n    Observation: Error: attribute_name = assignee was not found in task keys dict_keys(['id', 'name', 'text_content', 'description', 'status', 'creator_id', 'creator_username', 'creator_email', 'assignees', 'watcher_username', 'watcher_email', 'priority', 'due_date', 'start_date', 'points', 'team_id', 'project_id']). Please call again with one of the key names.\n    Thought: I need to get the assignees of a task\n    Action: Get task attribute\n    Action Input: {\"task_id\": \"8685mb5fn\", \"attribute_name\": \"assignees\"}\n    Observation: []\n    Thought: I now know the final answer\n    Final Answer: There are no assignees for task id 8685mb5fn.\n    \n    > Finished chain.\n    --------------------------------------------------------------------------------\n    $ COMMAND\n    Remove user 81928627 from the assignees of task id 8685mb5fn\n    \n    $ AGENT\n    \n    \n    > Entering new AgentExecutor chain...\n     I need to update the assignees of a task\n    Action: Update task assignees\n    Action Input: {\"task_id\": \"8685mb5fn\", \"operation\": \"rem\", \"users\": [81928627]}\n    Observation: <Response [200]>\n    Thought: The user has been removed from the assignees of the task\n    Final Answer: User 81928627 has been removed from the assignees of task id 8685mb5fn.\n    \n    > Finished chain.\n    --------------------------------------------------------------------------------\n    $ COMMAND\n    What are the assignees of task id 8685mb5fn?\n    \n    $ AGENT\n    \n    \n    > Entering new AgentExecutor chain...\n     I need to get the assignees of a task\n    Action: Get task attribute\n    Action Input: {\"task_id\": \"8685mb5fn\", \"attribute_name\": \"assignee\"}\n    Observation: Error: attribute_name = assignee was not found in task keys dict_keys(['id', 'name', 'text_content', 'description', 'status', 'creator_id', 'creator_username', 'creator_email', 'assignees', 'watcher_username', 'watcher_email', 'priority', 'due_date', 'start_date', 'points', 'team_id', 'project_id']). Please call again with one of the key names.\n    Thought: I need to get the assignees of a task\n    Action: Get task attribute\n    Action Input: {\"task_id\": \"8685mb5fn\", \"attribute_name\": \"assignees\"}\n    Observation: []\n    Thought: I now know the final answer\n    Final Answer: There are no assignees for task id 8685mb5fn.\n    \n    > Finished chain.\n    --------------------------------------------------------------------------------\n    $ COMMAND\n    Add user 81928627 from the assignees of task id 8685mb5fn\n    \n    $ AGENT\n    \n    \n    > Entering new AgentExecutor chain...\n     I need to update the assignees of a task\n    Action: Update task assignees\n    Action Input: {\"task_id\": \"8685mb5fn\", \"operation\": \"rem\", \"users\": [81928627]}\n    Observation: <Response [200]>\n    Thought: The user has been removed from the assignees of the task\n    Final Answer: User 81928627 has been removed from the assignees of task id 8685mb5fn.\n    \n    > Finished chain.\n    --------------------------------------------------------------------------------\n\n\n\n\n\n    'User 81928627 has been removed from the assignees of task id 8685mb5fn.'\n\nCreation​\n\nYou can create tasks, lists and folders\n\ntime_str = datetime.now().strftime(\"%d/%m/%Y-%H:%M:%S\")\nprint_and_run(\n    f\"Create a task called 'Test Task - {time_str}' with description 'This is a Test'\"\n)\n\n    $ COMMAND\n    Create a task called 'Test Task - 18/09/2023-10:31:22' with description 'This is a Test'\n    \n    $ AGENT\n    \n    \n    > Entering new AgentExecutor chain...\n     I need to use the Create Task tool\n    Action: Create Task\n    Action Input: {\"name\": \"Test Task - 18/09/2023-10:31:22\", \"description\": \"This is a Test\"}\n    Observation: {'id': '8685mw4wq', 'custom_id': None, 'name': 'Test Task - 18/09/2023-10:31:22', 'text_content': 'This is a Test', 'description': 'This is a Test', 'status': {'id': 'p90110061901_VlN8IJtk', 'status': 'to do', 'color': '#87909e', 'orderindex': 0, 'type': 'open'}, 'orderindex': '23.00000000000000000000000000000000', 'date_created': '1695047486396', 'date_updated': '1695047486396', 'date_closed': None, 'date_done': None, 'archived': False, 'creator': {'id': 81928627, 'username': 'Rodrigo Ceballos Lentini', 'color': '#c51162', 'email': 'rlentini@clickup.com', 'profilePicture': None}, 'assignees': [], 'watchers': [{'id': 81928627, 'username': 'Rodrigo Ceballos Lentini', 'color': '#c51162', 'initials': 'RL', 'email': 'rlentini@clickup.com', 'profilePicture': None}], 'checklists': [], 'tags': [], 'parent': None, 'priority': None, 'due_date': None, 'start_date': None, 'points': None, 'time_estimate': None, 'time_spent': 0, 'custom_fields': [], 'dependencies': [], 'linked_tasks': [], 'team_id': '9011010153', 'url': 'https://app.clickup.com/t/8685mw4wq', 'sharing': {'public': False, 'public_share_expires_on': None, 'public_fields': ['assignees', 'priority', 'due_date', 'content', 'comments', 'attachments', 'customFields', 'subtasks', 'tags', 'checklists', 'coverimage'], 'token': None, 'seo_optimized': False}, 'permission_level': 'create', 'list': {'id': '901100754275', 'name': 'Test List', 'access': True}, 'project': {'id': '90110336890', 'name': 'Test Folder', 'hidden': False, 'access': True}, 'folder': {'id': '90110336890', 'name': 'Test Folder', 'hidden': False, 'access': True}, 'space': {'id': '90110061901'}}\n    Thought: I now know the final answer\n    Final Answer: A task called 'Test Task - 18/09/2023-10:31:22' with description 'This is a Test' was successfully created.\n    \n    > Finished chain.\n    --------------------------------------------------------------------------------\n\n\n\n\n\n    \"A task called 'Test Task - 18/09/2023-10:31:22' with description 'This is a Test' was successfully created.\"\n\ntime_str = datetime.now().strftime(\"%d/%m/%Y-%H:%M:%S\")\nprint_and_run(f\"Create a list called Test List - {time_str}\")\n\n    $ COMMAND\n    Create a list called Test List - 18/09/2023-10:32:12\n    \n    $ AGENT\n    \n    \n    > Entering new AgentExecutor chain...\n     I need to create a list\n    Action: Create List\n    Action Input: {\"name\": \"Test List - 18/09/2023-10:32:12\"}\n    Observation: {'id': '901100774700', 'name': 'Test List - 18/09/2023-10:32:12', 'deleted': False, 'orderindex': 13, 'content': '', 'priority': None, 'assignee': None, 'due_date': None, 'start_date': None, 'folder': {'id': '90110336890', 'name': 'Test Folder', 'hidden': False, 'access': True}, 'space': {'id': '90110061901', 'name': 'Space', 'access': True}, 'inbound_address': 'a.t.901100774700.u-81928627.20b87d50-eece-4721-b487-9ca500338587@tasks.clickup.com', 'archived': False, 'override_statuses': False, 'statuses': [{'id': 'p90110061901_VlN8IJtk', 'status': 'to do', 'orderindex': 0, 'color': '#87909e', 'type': 'open'}, {'id': 'p90110061901_14GpYKnM', 'status': 'complete', 'orderindex': 1, 'color': '#6bc950', 'type': 'closed'}], 'permission_level': 'create'}\n    Thought: I now know the final answer\n    Final Answer: The list \"Test List - 18/09/2023-10:32:12\" has been created with id 901100774700.\n    \n    > Finished chain.\n    --------------------------------------------------------------------------------\n\n\n\n\n\n    'The list \"Test List - 18/09/2023-10:32:12\" has been created with id 901100774700.'\n\ntime_str = datetime.now().strftime(\"%d/%m/%Y-%H:%M:%S\")\nprint_and_run(f\"Create a folder called 'Test Folder - {time_str}'\")\n\n    $ COMMAND\n    Create a folder called 'Test Folder - 18/09/2023-10:32:51'\n    \n    $ AGENT\n    \n    \n    > Entering new AgentExecutor chain...\n     I need to use the Create Folder tool\n    Action: Create Folder\n    Action Input: {\"name\": \"Test Folder - 18/09/2023-10:32:51\"}\n    Observation: {'id': '90110348711', 'name': 'Test Folder - 18/09/2023-10:32:51', 'orderindex': 12, 'override_statuses': False, 'hidden': False, 'space': {'id': '90110061901', 'name': 'Space', 'access': True}, 'task_count': '0', 'archived': False, 'statuses': [], 'lists': [], 'permission_level': 'create'}\n    Thought: I have successfully created the folder\n    Final Answer: The folder 'Test Folder - 18/09/2023-10:32:51' has been successfully created.\n    \n    > Finished chain.\n    --------------------------------------------------------------------------------\n\n\n\n\n\n    \"The folder 'Test Folder - 18/09/2023-10:32:51' has been successfully created.\"\n\ntime_str = datetime.now().strftime(\"%d/%m/%Y-%H:%M:%S\")\nprint_and_run(\n    f\"Create a list called 'Test List - {time_str}' with content My test list with high priority and status red\"\n)\n\n    $ COMMAND\n    Create a list called 'Test List - 18/09/2023-10:34:01' with content My test list with high priority and status red\n    \n    $ AGENT\n    \n    \n    > Entering new AgentExecutor chain...\n     I need to create a list with the given name, content, priority and status\n    Action: Create List\n    Action Input: {\"name\": \"Test List - 18/09/2023-10:34:01\", \"content\": \"My test list\", \"priority\": 2, \"status\": \"red\"}\n    Observation: {'id': '901100774746', 'name': 'Test List - 18/09/2023-10:34:01', 'deleted': False, 'orderindex': 15, 'content': '', 'status': {'status': 'red', 'color': '#e50000', 'hide_label': True}, 'priority': {'priority': 'high', 'color': '#ffcc00'}, 'assignee': None, 'due_date': None, 'start_date': None, 'folder': {'id': '90110336890', 'name': 'Test Folder', 'hidden': False, 'access': True}, 'space': {'id': '90110061901', 'name': 'Space', 'access': True}, 'inbound_address': 'a.t.901100774746.u-81928627.2ab87133-728e-4166-b2ae-423cc320df37@tasks.clickup.com', 'archived': False, 'override_statuses': False, 'statuses': [{'id': 'p90110061901_VlN8IJtk', 'status': 'to do', 'orderindex': 0, 'color': '#87909e', 'type': 'open'}, {'id': 'p90110061901_14GpYKnM', 'status': 'complete', 'orderindex': 1, 'color': '#6bc950', 'type': 'closed'}], 'permission_level': 'create'}\n    Thought: I have successfully created the list\n    Final Answer: The list 'Test List - 18/09/2023-10:34:01' with content 'My test list' with high priority and status red has been successfully created.\n    \n    > Finished chain.\n    --------------------------------------------------------------------------------\n\n\n\n\n\n    \"The list 'Test List - 18/09/2023-10:34:01' with content 'My test list' with high priority and status red has been successfully created.\"\n\nMulti-Step Tasks​\nprint_and_run(\n    \"Figure out what user ID Rodrigo is, create a task called 'Rod's task', assign it to Rodrigo\"\n)\n\n    $ COMMAND\n    Figure out what user ID Rodrigo is, create a task called 'Rod's task', assign it to Rodrigo\n    \n    $ AGENT\n    \n    \n    > Entering new AgentExecutor chain...\n     I need to get the user ID of Rodrigo, create a task, and assign it to Rodrigo\n    Action: Get Teams\n    Action Input: No input necessary\n    Observation: {'teams': [{'id': '9011010153', 'name': 'Task Copilot Sandbox Workspace 1', 'members': [{'id': 81928627, 'username': 'Rodrigo Ceballos Lentini', 'email': 'rlentini@clickup.com', 'initials': 'RL'}]}]}\n    Thought: I now have the user ID of Rodrigo\n    Action: Create Task\n    Action Input: {\"name\": \"Rod's task\", \"assignees\": [81928627]}\n\n    /Users/rodrigolentini/repos/langchain-clickup/libs/langchain/langchain/utilities/clickup.py:145: UserWarning: Error encountered while trying to parse <class 'langchain.utilities.clickup.Task'>: 'NoneType' object is not subscriptable\n     Falling back to returning input data.\n      warnings.warn(f'Error encountered while trying to parse {dataclass}: {e}\\n Falling back to returning input data.')\n\n\n    \n    Observation: {'id': '8685mw6dz', 'custom_id': None, 'name': \"Rod's task\", 'text_content': '', 'description': '', 'status': {'id': 'p90110061901_VlN8IJtk', 'status': 'to do', 'color': '#87909e', 'orderindex': 0, 'type': 'open'}, 'orderindex': '24.00000000000000000000000000000000', 'date_created': '1695047740939', 'date_updated': '1695047740939', 'date_closed': None, 'date_done': None, 'archived': False, 'creator': {'id': 81928627, 'username': 'Rodrigo Ceballos Lentini', 'color': '#c51162', 'email': 'rlentini@clickup.com', 'profilePicture': None}, 'assignees': [{'id': 81928627, 'username': 'Rodrigo Ceballos Lentini', 'color': '#c51162', 'initials': 'RL', 'email': 'rlentini@clickup.com', 'profilePicture': None}], 'watchers': [{'id': 81928627, 'username': 'Rodrigo Ceballos Lentini', 'color': '#c51162', 'initials': 'RL', 'email': 'rlentini@clickup.com', 'profilePicture': None}], 'checklists': [], 'tags': [], 'parent': None, 'priority': None, 'due_date': None, 'start_date': None, 'points': None, 'time_estimate': None, 'time_spent': 0, 'custom_fields': [], 'dependencies': [], 'linked_tasks': [], 'team_id': '9011010153', 'url': 'https://app.clickup.com/t/8685mw6dz', 'sharing': {'public': False, 'public_share_expires_on': None, 'public_fields': ['assignees', 'priority', 'due_date', 'content', 'comments', 'attachments', 'customFields', 'subtasks', 'tags', 'checklists', 'coverimage'], 'token': None, 'seo_optimized': False}, 'permission_level': 'create', 'list': {'id': '901100754275', 'name': 'Test List', 'access': True}, 'project': {'id': '90110336890', 'name': 'Test Folder', 'hidden': False, 'access': True}, 'folder': {'id': '90110336890', 'name': 'Test Folder', 'hidden': False, 'access': True}, 'space': {'id': '90110061901'}}\n    Thought: I now have the task created and assigned to Rodrigo\n    Final Answer: Rodrigo's user ID is 81928627 and a task called 'Rod's task' has been created and assigned to him.\n    \n    > Finished chain.\n    --------------------------------------------------------------------------------\n\n\n\n\n\n    \"Rodrigo's user ID is 81928627 and a task called 'Rod's task' has been created and assigned to him.\"\n\nPrevious\nAzure Cognitive Services\nNext\nCSV"
}